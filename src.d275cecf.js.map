{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/OrbitControls.js","node_modules/three/examples/jsm/utils/BufferGeometryUtils.js","node_modules/process/browser.js","node_modules/@tweenjs/tween.js/dist/tween.esm.js","node_modules/@turf/turf/turf.min.js","node_modules/three/examples/jsm/lines/LineSegmentsGeometry.js","node_modules/three/examples/jsm/lines/LineMaterial.js","node_modules/three/examples/jsm/lines/LineSegments2.js","node_modules/three/examples/jsm/lines/LineGeometry.js","node_modules/three/examples/jsm/lines/Line2.js","src/index.js"],"names":["REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","EventDispatcher","addEventListener","type","listener","undefined","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","toString","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toUpperCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","MathUtils","Object","freeze","__proto__","Vector2","constructor","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","copy","v","add","w","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","matrix","_canvas","isMatrix3","ImageUtils","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","uuid","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","updateMatrix","source","toJSON","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispose","transformUv","uv","HTMLImageElement","ImageBitmap","getDataURL","data","isTexture","Vector4","z","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","setTexture","setSize","isWebGLRenderTarget","WebGLMultisampleRenderTarget","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","qa","qb","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","step","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","callback","isQuaternion","Vector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","isVector3","Box3","Infinity","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","count","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","_vector$b","setFromObject","object","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","isObject3D","remove","clear","attach","getObjectById","id","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","serialize","library","element","JSON","stringify","isInstancedMesh","instanceMatrix","instanceColor","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","child","_vector1","_vector2$1","_normalMatrix","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","delta","start","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","isPlane","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getBarycoord","p3","uv1","uv2","uv3","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getNormal","getPlane","getUV","isFrontFacing","d4","vc","d5","d6","vb","va","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","assign","create","isMaterial","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","flatShading","currentValue","isColor","isRoot","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","skinning","srcPlanes","dstPlanes","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","toLowerCase","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","normalized","NAMES","MeshBasicMaterial","isMeshBasicMaterial","_vector$9","_vector2","BufferAttribute","itemSize","TypeError","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZ","setXYZW","onUpload","isBufferAttribute","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","arrayMax","TYPED_ARRAYS","getTypedArray","buffer","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","needsUpdate","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","isNaN","jl","computeFaceNormals","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","isBufferGeometry","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","keys","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","raycaster","intersects","intersection","morphPosition","groupMaterial","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","BoxBufferGeometry","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","DataTexture","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","get","isInterleavedBufferAttribute","deleteBuffer","delete","bufferType","cached","bytesPerElement","elementSize","createBuffer","bindBuffer","bufferData","BYTES_PER_ELEMENT","bufferSubData","subarray","updateBuffer","PlaneGeometry","width_half","height_half","segment_width","segment_height","PlaneBufferGeometry","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmissionmap_fragment","transmissionmap_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","cubemaps","state","objects","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","renderList","forceClear","isScene","session","getSession","environmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","has","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","onTextureDispose","cubemap","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","onInstancedMeshDispose","instancedMesh","buffergeometry","physical","transmission","transmissionMap","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","chunks","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","WebGLProgram","cacheKey","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","cachedUniforms","deleteShader","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","bones","nVertexUniforms","nVertexMatrices","getMaxBones","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","finish","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","setupLights","setupLightsView","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_renderer","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","_maxTextureSize","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","mapPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","renderObject","shadowCamera","k","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","frontFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","bindFramebuffer","framebuffer","bindXRFramebuffer","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","filterFallback","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","uploadCubeTexture","wrappingToGL","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","isRenderTarget3D","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","onSessionEnd","forEach","isPresenting","onInputSourcesChange","inputSources","removed","added","getController","getControllerGrip","getHand","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","cameraLPos","cameraRPos","updateCamera","getCamera","depthNear","depthFar","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","setProjectionFromUnion","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshUniformsCommon","uvScaleMap","uv2ScaleMap","refreshUniformsStandard","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","createCanvasElement","display","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","initGLContext","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","releaseMaterialProgramReferences","deallocateMaterial","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","getProgram","renderObjects","camera2","isImmediateRenderObject","renderObjectImmediate","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","window","projectObject","isLOD","opaqueObjects","transparentObjects","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","texSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","bind","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","boneInverses","Bone","isBone","_offsetMatrix","_identityMatrix","Skeleton","inverse","bone","getBoneByName","fromJSON","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","computeLineDistances","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","requestVideoFrameCallback","updateVideo","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","CircleGeometry","segments","thetaStart","thetaLength","vertex","segment","CircleBufferGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","CylinderBufferGeometry","ConeGeometry","ConeBufferGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","applyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","PolyhedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","sum","ShapeUtils","contour","pts","holes","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","extrudeByPath","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","isClockWise","reverse","hl","ahole","triangulateShape","concat","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","binormals","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","toJSON$1","ExtrudeBufferGeometry","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","IcosahedronBufferGeometry","LatheGeometry","phiStart","phiLength","inverseSegments","base","n1","LatheBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","ParametricGeometry","func","slices","stacks","pu","pv","sliceCount","ParametricBufferGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","RingBufferGeometry","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","ShapeBufferGeometry","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","SphereBufferGeometry","TetrahedronGeometry","TetrahedronBufferGeometry","TextGeometry","text","font","isFont","generateShapes","TextBufferGeometry","TorusGeometry","tube","tubularSegments","arc","TorusBufferGeometry","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TorusKnotBufferGeometry","TubeGeometry","closed","frames","P","generateSegment","getPointAt","generateIndices","generateBufferData","TubeBufferGeometry","WireframeGeometry","edge","edges","o","ol","edge1","edge2","Geometries","RawShaderMaterial","ior","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","Promise","resolve","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","setTimeout","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","send","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loaded","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","getTangent","t2","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","isArcCurve","pz","CatmullRomCurve3","curveType","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","isCatmullRomCurve3","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","setTextures","LoaderUtils","TextDecoder","decode","fromCharCode","escape","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","arrayBuffer","getArrayBuffer","typedArray","bufferAttribute","drawcalls","offsets","ObjectLoader","extractUrlBase","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","geometryShapes","bufferGeometryLoader","details","deserializeImage","loadImage","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","objectAnimations","setTexturePath","ImageBitmapLoader","createImageBitmap","fetch","setOptions","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","Font","paths","createPaths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","ha","FontLoader","substring","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","root","isAnimationObjectGroup","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","targetObject","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","findByName","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","ImmediateRenderObject","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","Box3Helper","PlaneHelper","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","_floatView","_int32View","DataUtils","val","LOD_MIN","LOD_MAX","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","MAX_SAMPLES","ENCODINGS","backgroundMaterial","backgroundBox","_flatCamera","_lodPlanes","_sizeLods","_sigmas","_createPlanes","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","convertLinearToRGBE","maxComponent","fExp","PMREMGenerator","_pingPongRenderTarget","_blurMaterial","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","fromScene","sigma","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapShader","compileEquirectangularShader","_getEquirectShader","outputTarget","_setViewport","_textureToCubeUV","_isLDR","_createRenderTarget","tmpMesh","cubeCamera","upSign","forwardSign","originalAutoClear","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lod","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","_getCommonVertexShader","_getEncodings","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","AxisHelper","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","WebGLRenderTargetCube","CanvasRenderer","JSONLoader","construct","fromPoints","setColors","Handlers","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","prototypenormal","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","detach","LensFlare","revision","__THREE__","_three","require","_changeEvent","_startEvent","_endEvent","OrbitControls","minDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","UP","BOTTOM","mouseButtons","touches","ONE","TWO","target0","position0","zoom0","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","listenToKeyEvents","onKeyDown","saveState","STATE","NONE","quat","quatInverse","lastPosition","lastQuaternion","twoPI","rotateLeft","sphericalDelta","panOffset","zoomChanged","EPS","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","ownerDocument","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","pointerType","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","onMouseUp","handleMouseWheel","code","handleKeyDown","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","passive","MapControls","BufferGeometryUtils","useGroups","isIndexed","attributesUsed","Set","morphAttributesUsed","mergedGeometry","attributesCount","mergedUserData","mergedIndex","mergedAttribute","mergeBufferAttributes","morphAttributesToMerge","mergedMorphAttribute","TypedArray","arrayLength","getters","setters","iba","mem","attr","tolerance","hashToIndex","vertexCount","attributeNames","attrArrays","morphAttrsArrays","newIndices","morphAttr","decimalShift","log10","shiftMultiplier","newarray","newMorphArrays","getterFunc","oldAttribute","oldMorphAttribute","numberOfTriangles","newGeometry","_calculateMorphedAttributeData","modifiedAttributeArray","morph","morphNormal","modifiedPosition","modifiedNormal","morphedPositionAttribute","morphedNormalAttribute","cachedSetTimeout","cachedClearTimeout","process","module","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","Item","noop","nextTick","args","title","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","cwd","chdir","umask","Easing","Linear","Quadratic","In","Out","InOut","Cubic","Quartic","Quintic","Sinusoidal","Exponential","Circular","Elastic","Back","Bounce","self","hrtime","getTime","now$1","_tweens","_tweensAddedDuringUpdate","getAll","tweenId","removeAll","tween","getId","preserve","tweenIds","Interpolation","fn","Utils","Bezier","pw","bn","Bernstein","fc","Factorial","Sequence","nextId","_nextId","mainGroup","Tween","_object","_group","_isPaused","_pauseStart","_valuesStart","_valuesEnd","_valuesStartRepeat","_duration","_initialRepeat","_repeat","_yoyo","_isPlaying","_reversed","_delayTime","_easingFunction","_interpolationFunction","_chainedTweens","_onStartCallbackFired","_isChainStopped","_goToEnd","isPaused","_swapEndStartRepeatValues","_setupProperties","startValue","startValueIsArray","propType","isInterpolationList","endValues","_handleRelativeValue","prop","stopChainedTweens","_onStopCallback","resume","numChainedTweens","repeatDelay","_repeatDelayTime","yoyo","easing","easingFunction","interpolationFunction","chain","tweens","_i","_onStartCallback","_onUpdateCallback","onRepeat","_onRepeatCallback","onComplete","_onCompleteCallback","onStop","elapsed","_updateProperties","startIsArray","endIsArray","endValue","VERSION","TWEEN","_default","default","LineSegmentsGeometry","instanceStart","instanceEnd","setPositions","lineSegments","instanceBuffer","instanceColorBuffer","fromWireframeGeometry","fromEdgesGeometry","fromMesh","romLineSegments","isLineSegmentsGeometry","dashScale","dashOffset","LineMaterial","Boolean","ALPHA_TO_COVERAGE","isLineMaterial","_LineSegmentsGeometry","_LineMaterial","_start4","_end4","_ssOrigin","_ssOrigin3","_mvMatrix","_line","_closestPoint","_clipToWorldVector","LineSegments2","instanceDistanceBuffer","Line2","ssMaxWidth","sphereMargin","distanceToBox","boxMargin","deltaDist","param","zPos","isInClipSpace","isInside","pointOnLine","LineGeometry","fromLine","isLineGeometry","_LineSegments","_LineGeometry","isLine2","THREE","_interopRequireWildcard","_OrbitControls","_BufferGeometryUtils","turf","_world_white","_interopRequireDefault","_forestclipped","_GDPresample","_Brazil","_Poland","_SouthKorea","_globalboundaries_simplified","_Line","__esModule","hasOwnProperty","getOwnPropertyDescriptor","_regeneratorValues","Symbol","iterator","done","_typeof","_regenerator","toStringTag","Generator","_regeneratorDefine2","G","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","displayName","_regeneratorDefine","_invoke","writable","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_createForOfIteratorHelper","_n","F","_classCallCheck","_defineProperties","_toPropertyKey","_createClass","_toPrimitive","toPrimitive","TweenManger","numTweensRunning","assert","userCompleteFn","_userCompleteFn","_handleComplete","_len","_key","main","querySelector","tweenManager","controls","mouse","lonFudge","latFudge","lonHelperLL","latHelperLL","earthMesh","posHelperLL","normLon360","lon","projectLL","lat","L","normLon","WORLD_TEXTURE","atmosphereShader","atmosphereMaterial","atmosphereMesh","LINE2_MATERIALS","countryOutlineGroup","globalBoundariesGroup","labelGroup","countryGlowGroup","selectedOutlineMaterial","globalBoundariesMaterial","selectedOutlineMat2","selectedGlowMat2","geoJsonLatOffset","LABEL_NORMAL","underline","LABEL_HOVER","LABEL_FONT_SIZE","LABEL_FONT_WEIGHT","LABEL_WORLD_HEIGHT","LABEL_UNDERLINE_THICKNESS","LABEL_PADDING_X","LABEL_PADDING_Y","drawLabelTexture","createElement","ctx","measureText","cw","ch","pot","clearRect","fillStyle","textBaseline","midY","fillText","underlineY","beginPath","strokeStyle","stroke","tex","addCountryLabel","_ref","_drawLabelTexture","outward","label","_hovered","updateHover","hovered","_drawLabelTexture2","w2","h2","asp2","countryCode","ringToLine","ring","_step2","_iterator2","_step2$value","_ring$","lon0","lat0","_ring","lonN","latN","addCountryOutline","feature","parentGroup","addPoly","poly","_step4","_iterator4","loadFile","_loadFile","_callee","req","parseData","_step5","_iterator5","raw","hasXCenter","hasYCenter","ncols","nrows","cellsize","NODATA_value","xll","xllcorner","yll","yllcorner","xllcenter","yllcenter","_step6","_iterator6","str","COUNTRY_FEATURES","loadGlobalBoundaries","_loadGlobalBoundaries","_callee2","gj","features","_t","_context2","GLOBAL_BOUNDARIES","loadCountries","_loadCountries","_callee3","infos","_loop","_infos","_context4","COUNTRY_BRAZIL","COUNTRY_POLAND","COUNTRY_SOUTHKOREA","_t2","_context3","geom","transformCoords","newGeom","NAME","CODE","_coords","makeBoxes","hueRange","maxBoxes","opts","totalCells","lonHelper","latHelper","positionHelper","originHelper","row","rowData","rgb","colorRampColors","_THREE$MathUtils","numVerts","mergeBufferGeometries","_loadAll","_callee6","rasters","rasterMeshes","_i2","_rasters","uiElem","selectLayer","_selectLayer","_context7","_selectLayer3","_callee5","li","_context6","classList","el","textContent","requestRenderIfNotRequested","_selectLayer2","_x3","TREECOVER_DATA_URL","GDP_ASC_URL","all","_ref2","_callee4","_t3","_context5","_x2","kind","appendChild","lastHoverLabel","onCountryClick","setMouseFromEvent","labelHit","location","href","BRA","POL","KOR","dispatchUI","hit","cursor","_loadGlobalBoundariesAndCountries","_callee7","_context8","loadGlobalBoundariesAndCountries","loadAll","renderRequested","needResize","resizeRendererToDisplaySize","rect","getBoundingClientRect"],"mappings":"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A,EAAA,GAAA,CAAA,EAAA,IAAA,GAAA,GAAA,GAAA,IAAA,OAAA,KAAA,KAAA,KAAA,IAAA,KAAA,IAAA,GAAA,GAAA,IAAA,SAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,CAAA,KAAA,IAAA,GAAA,KAAA,IAAA,GAAA,KAAA,IAAA,GAAA,KAAA,IAAA,GAAA,KAAA,IAAA,IAAA,SAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,KAAA,IAAA,MAAA,CAAA,EAAA,KAAA,MAAA,EAAA,IAAA,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,CAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,KAAA,KAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAA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A,KAAA,CAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,YAAA,EAAA,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,MAAA,CAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,SAAA,EAAA,GAAA,EAAA,YAAA,SAAA,GAAA,GAAA,GAAA,EAAA,EAAA,OAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,SAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,SAAA,GAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,OAAA,IAAA,EAAA,IAAA,MAAA,KAAA,GAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,SAAA,GAAA,GAAA,IAAA,GAAA,EAAA,GAAA,OAAA,EAAA,KAAA,KAAA,KAAA,GAAA,OAAA,GAAA,SAAA,GAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,GAAA,KAAA,CAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,GAAA,KAAA,SAAA,GAAA,GAAA,OAA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A,GAAA,EAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,KAAA,EAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,IAAA,IAAA,EAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,KAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,EAAA,IAAA,IAAA,EAAA,KAAA,GAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,IAAA,EAAA,KAAA,GAAA,KAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,IAAA,EAAA,KAAA,GAAA,OAAA,IAAA,GAAA,IAAA,IAAA,EAAA,KAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,IAAA,aAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,SAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,IAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,KAAA,IAAA,EAAA,GAAA,OAAA,KAAA,IAAA,IAAA,uBAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,EAAA,uBAAA,EAAA,GAAA,GAAA,IAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,GAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,uBAAA,EAAA,uBAAA,KAAA,IAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,IAAA,GAAA,EAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA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,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,CAAA,KAAA,EAAA,KAAA,IAAA,KAAA,EAAA,SAAA,EAAA,OAAA,KAAA,UAAA,CAAA,IAAA,EAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,MAAA,OAAA,KAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,GAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,OAAA,IAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,OAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,EAAA,KAAA,EAAA,IAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,KAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,EAAA,EAAA,KAAA,KAAA,KAAA,KAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,GAAA,OAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,IAAA,EAAA,CAAA,IAAA,IAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAAA,IAAA,GAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,EAAA,SAAA,GAAA,QAAA,EAAA,GAAA,QAAA,QAAA,EAAA,GAAA,QAAA,IAAA,SAAA,GAAA,GAAA,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA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AAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,CAAA,EAAA,EAAA,EAAA,IAAA,MAAA,IAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAAA,KAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,IAAA,SAAA,GAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,EAAA,SAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,GAAA,IAAA,EAAA,IAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,GAAA,KAAA,EAAA,IAAA,KAAA,IAAA,GAAA,IAAA,GAAA,IAAA,EAAA,CAAA,EAAA,OAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,GAAA,EAAA,SAAA,GAAA,SAAA,GAAA,GAAA,OAAA,EAAA,SAAA,GAAA,EAAA,GAAA,I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,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,OAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,CAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,OAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,CAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,OAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,IAAA,EAAA,CAAA,IAAA,EAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,IAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,OAAA,EAAA,KAAA,GAAA,IAAA,IAAA,EAAA,IAAA,GAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA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A,IAAA,EAAA,GAAA,EAAA,MAAA,GAAA,IAAA,GAAA,EAAA,IAAA,KAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,EAAA,OAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAAA,OAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,SAAA,IAAA,EAAA,IAAA,EAAA,GAAA,MAAA,EAAA,OAAA,CAAA,IAAA,EAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,GAAA,MAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,IAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,GAAA,EAAA,GAAA,MAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,GAAA,KAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAA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IAAA,EAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,GAAA,EAAA,IAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,IAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,KAAA,EAAA,YAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,KAAA,EAAA,aAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,KAAA,EAAA,YAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,KAAA,EAAA,aAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,KAAA,EAAA,YAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,KAAA,EAAA,aAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,KAAA,EAAA,YAAA,EAAA,EAAA,CAAA,CAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,KAAA,EAAA,aAAA,EAAA,MAAA,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AA,GAAA,eAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,IAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,IAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,IAAA,KAAA,GAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,KAAA,IAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,IAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,IAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,IAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,IAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,MAAA,KAAA,GAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,YAAA,EAAA,EAAA,EAAA,EA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AA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,SAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,SAAA,GAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,SAAA,EAAA,GAAA,GAAA,IAAA,EAAA,OAAA,EAAA,CAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,MAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,CAAA,CAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,GAAA,CAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,OAAA,IAAA,GAAA,GAAA,GAAA,GAAA,IAAA,CAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,SAAA,EAAA,GAAA,MAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,SAAA,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,IAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,IAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,KA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A,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,EAAA,MAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,CAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,OAAA,EAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,OAAA,EAAA,EAAA,EAAA,MAAA,KAAA,GAAA,EAAA,GAAA,GAAA,CAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,OAAA,EAAA,EAAA,EAAA,MAAA,KAAA,GAAA,EAAA,GAAA,GAAA,CAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,IAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAA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A,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,CAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,WAAA,IAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,IAAA,GAAA,GAAA,EAAA,EAAA,WAAA,IAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,OAAA,IAAA,GAAA,IAAA,KAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,OAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,EAAA,GAAA,EAAA,KAAA,KAAA,EAAA,KAAA,EAAA,KAAA,KAAA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,MAAA,EAAA,OAAA,SAAA,EAAA,EAAA,EAAA,GAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,KAAA,KAA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GAAA,IAAA,EAAA,CAAA,EAAA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,SAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,CAAA,GAAA,GAAA,EAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,CAAA,GAAA,GAAA,EAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,CAAA,GAAA,GAAA,EAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,CAAA,GAAA,GAAA,EAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EAAA,GAAA,QAAA,EAAA,GAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,OAAA,SAAA,GAAA,EAAA,EAAA,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EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,MAAA,CAAA,EAAA,CAAA,GAAA,IAAA,KAAA,EAAA,MAAA,GAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,KAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,KAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,KAAA,GAAA,EAAA,KAAA,EAAA,YAAA,IAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,KAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,KAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,KAAA,GAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,IAAA,EAAA,GAAA,MAAA,IAAA,GAAA,GAAA,GAAA,SAAA,KAAA,GAAA,MAAA,KAAA,EAAA,KAAA,EAAA,KAAA,IAAA,KAAA,KAAA,KAAA,GAAA,KAAA,SAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,KAAA,IAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,OAAA,IAAA,GAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,KAAA,KAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,MAAA,CAAA,IAAA,EAAA,EAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,GAAA,IAAA,GAAA,MAAA,SAAA,GAAA,GAAA,IAAA,EAAA,EAAA,OAAA,IAAA,EAAA,IAAA,GAAA,EAAA,GAAA,GAAA,OAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,EAAA,OAAA,MAAA,IAAA,GAAA,GAAA,SAAA,KAAA,GAAA,MAAA,KAAA,KAAA,KAAA,KAAA,KAAA,OAAA,KAAA,SAAA,GAAA,GAAA,IAAA,EAAA,GAAA,OAAA,IAAA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,SAAA,GAAA,GAAA,GAAA,GAAA,GAAA,OAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,SAAA,GAAA,GAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,GAAA,GAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,QAAA,KAAA,IAAA,EAAA,EAAA,OAAA,GAAA,IAAA,KAAA,IAAA,EAAA,EAAA,OAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,QAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,GAAA,GAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,QAAA,KAAA,IAAA,EAAA,EAAA,OAAA,GAAA,IAAA,KAAA,IAAA,EAAA,EAAA,OAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,KAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,KAAA,GAAA,EAAA,KAAA,EAAA,KAAA,KAAA,GAAA,GAAA,GAAA,GAAA,GAAA,SAAA,GAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,MAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,IAAA,IAAA,CAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,MAAA,IAAA,EAAA,EAAA,CAAA,EAAA,EAAA,MAAA,EAAA,EAAA,GAAA,SAAA,GAAA,GAAA,EAAA,OAAA,CAAA,KAAA,EAAA,UAAA,IAAA,CAAA,GAAA,IAAA,EAAA,GAAA,GAAA,GAAA,GAAA,OAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,IAAA,EAAA,OAAA,GAAA,GAAA,EAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,MAAA,GAAA,QAAA,GAAA,GAAA,GAAA,EAAA,CAAA,GAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,EAAA,KAAA,GAAA,EAAA,KAAA,GAAA,EAAA,EAAA,KAAA,GAAA,GAAA,GAAA,GAAA,QAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,OAAA,SAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,MAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,EAAA,KAAA,KAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,SAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAAA,GAAA,MAAA,SAAA,GAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,SAAA,GAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,IAAA,MAAA,IAAA,GAAA,GAAA,GAAA,IAAA,MAAA,EAAA,QAAA,GAAA,IAAA,GAAA,GAAA,IAAA,KAAA,GAAA,EAAA,GAAA,KAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,KAAA,GAAA,EAAA,KAAA,IAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,CAAA,IAAA,EAAA,MAAA,GAAA,EAAA,KAAA,GAAA,WAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,MAAA,GAAA,EAAA,EAAA,WAAA,QAAA,CAAA,IAAA,EAAA,IAAA,MAAA,GAAA,EAAA,IAAA,MAAA,GAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,IAAA,GAAA,EAAA,CAAA,IAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,GAAA,OAAA,KAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,KAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,IAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,IAAA,YAAA,GAAA,GAAA,CAAA,EAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,GAAA,CAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,WAAA,OAAA,KAAA,GAAA,EAAA,KAAA,EAAA,OAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,EAAA,IAAA,KAAA,IAAA,EAAA,GAAA,IAAA,KAAA,IAAA,EAAA,GAAA,MAAA,EAAA,OAAA,EAAA,EAAA,GAAA,KAAA,GAAA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,CAAA,EAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,CAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,CAAA,EAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GAAA,IAAA,EAAA,EAAA,GAAA,CAAA,KAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,OAAA,KAAA,GAAA,IAAA,GAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,IAAA,GAAA,EAAA,GAAA,MAAA,GAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,UAAA,KAAA,GAAA,KAAA,GAAA,EAAA,EAAA,KAAA,EAAA,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","file":"src.d275cecf.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '128';\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst FlatShading = 1;\nconst SmoothShading = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst CubeUVRefractionMapping = 307;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedShort565Type = 1019;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst RGBEFormat = RGBAFormat;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\nconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\nconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\nconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\nconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\nconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\nconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\nconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\nconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\nconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\nconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\nconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\nconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\nconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\nconst GammaEncoding = 3007;\nconst RGBEEncoding = 3002;\nconst LogLuvEncoding = 3003;\nconst RGBM7Encoding = 3004;\nconst RGBM16Encoding = 3005;\nconst RGBDEncoding = 3006;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [];\n\nfor ( let i = 0; i < 256; i ++ ) {\n\n\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n}\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toUpperCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t\t } else {\n\n\t\treturn 0;\n\n\t\t }\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s % 2147483647;\n\n\t// Park-Miller algorithm\n\n\t_seed = _seed * 16807 % 2147483647;\n\n\treturn ( _seed - 1 ) / 2147483646;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nvar MathUtils = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\n});\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector2.prototype.isVector2 = true;\n\nclass Matrix3 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tscale( sx, sy ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tconst te = this.elements;\n\n\t\tconst a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tconst a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nMatrix3.prototype.isMatrix3 = true;\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n}\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tconst image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tlet url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( let i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t// check cube texture with data textures\n\n\t\t\t\t\t\tif ( image[ i ].isDataTexture ) {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ].image ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\turl.push( serializeImage( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = serializeImage( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype.isTexture = true;\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.prototype.slice.call( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector4.prototype.isVector4 = true;\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass WebGLRenderTarget extends EventDispatcher {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper();\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\t\tthis.texture.image.depth = 1;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tsetTexture( texture ) {\n\n\t\ttexture.image = {\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tdepth: this.depth\n\t\t};\n\n\t\tthis.texture = texture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\nclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width, height, options ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.samples = 4;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n}\n\nWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerp( qa, qb, qm, t ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\n\t\treturn qm.slerpQuaternions( qa, qb, t );\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\tthis.copy( qa ).slerp( qb, t );\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nQuaternion.prototype.isQuaternion = true;\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tconst ix = qw * x + qy * z - qz * y;\n\t\tconst iy = qw * y + qz * x - qx * z;\n\t\tconst iz = qw * z + qx * y - qy * x;\n\t\tconst iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n}\n\nVector3.prototype.isVector3 = true;\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tconst x = array[ i ];\n\t\t\tconst y = array[ i + 1 ];\n\t\t\tconst z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tlet minX = + Infinity;\n\t\tlet minY = + Infinity;\n\t\tlet minZ = + Infinity;\n\n\t\tlet maxX = - Infinity;\n\t\tlet maxY = - Infinity;\n\t\tlet maxZ = - Infinity;\n\n\t\tfor ( let i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tconst x = attribute.getX( i );\n\t\t\tconst y = attribute.getY( i );\n\t\t\tconst z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\t_box$3.copy( geometry.boundingBox );\n\t\t\t_box$3.applyMatrix4( object.matrixWorld );\n\n\t\t\tthis.union( _box$3 );\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$3.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$3, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$3 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\n\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t}\n\n\t\tthis.getCenter( target.center );\n\n\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox3.prototype.isBox3 = true;\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$3 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the seperating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is seperating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _toFarthestPoint = /*@__PURE__*/ new Vector3();\nconst _toPoint = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$2.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\n\t\t_toPoint.subVectors( point, this.center );\n\n\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\t\t\tconst missingRadiusHalf = ( length - this.radius ) * 0.5;\n\n\t\t\t// Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\tthis.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\n\t\t\tthis.radius += missingRadiusHalf;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\n\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\n\t\t_toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\n\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\n\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\t\tconst c = - ( far + near ) / ( far - near );\n\t\tconst d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\t\tconst z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nMatrix4.prototype.isMatrix4 = true;\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order, update ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\ttoVector3( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n}\n\nEuler.prototype.isEuler = true;\n\nEuler.DefaultOrder = 'XYZ';\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = new /*@__PURE__*/ Vector3();\nconst _q1 = new /*@__PURE__*/ Quaternion();\nconst _m1$1 = new /*@__PURE__*/ Matrix4();\nconst _target = new /*@__PURE__*/ Vector3();\n\nconst _position$3 = new /*@__PURE__*/ Vector3();\nconst _scale$2 = new /*@__PURE__*/ Vector3();\nconst _quaternion$2 = new /*@__PURE__*/ Quaternion();\n\nconst _xAxis = new /*@__PURE__*/ Vector3( 1, 0, 0 );\nconst _yAxis = new /*@__PURE__*/ Vector3( 0, 1, 0 );\nconst _zAxis = new /*@__PURE__*/ Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeRender() {}\n\tonAfterRender() {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\tconst object = this.children[ i ];\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\tthis.children.length = 0;\n\n\t\treturn this;\n\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\ttarget = new Quaternion();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast() {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype.isObject3D = true;\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2$1.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nPlane.prototype.isPlane = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.set( 0, 0 );\n\t\ttarget.addScaledVector( uv1, _v3$1.x );\n\t\ttarget.addScaledVector( uv2, _v3$1.y );\n\t\ttarget.addScaledVector( uv3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Plane();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nlet materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.vertexColors = false;\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.stencilWriteMask = 0xff;\n\tthis.stencilFunc = AlwaysStencilFunc;\n\tthis.stencilRef = 0;\n\tthis.stencilFuncMask = 0xff;\n\tthis.stencilFail = KeepStencilOp;\n\tthis.stencilZFail = KeepStencilOp;\n\tthis.stencilZPass = KeepStencilOp;\n\tthis.stencilWrite = false;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.alphaToCoverage = false;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.toneMapped = true;\n\n\tthis.userData = {};\n\n\tthis.version = 0;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBuild: function ( /* shaderobject, renderer */ ) {},\n\n\tonBeforeCompile: function ( /* shaderobject, renderer */ ) {},\n\n\tcustomProgramCacheKey: function () {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tconst isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen && this.sheen.isColor ) data.sheen = this.sheen.getHex();\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\t\tdata.colorWrite = this.colorWrite;\n\n\t\tdata.stencilWrite = this.stencilWrite;\n\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\tdata.stencilFunc = this.stencilFunc;\n\t\tdata.stencilRef = this.stencilRef;\n\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\tdata.stencilFail = this.stencilFail;\n\t\tdata.stencilZFail = this.stencilZFail;\n\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.morphNormals === true ) data.morphNormals = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nObject.defineProperty( Material.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor = 2.0 ) {\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor = 2.0 ) {\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\n\nColor.prototype.isColor = true;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nconst _vector$9 = new /*@__PURE__*/ Vector3();\nconst _vector2 = new /*@__PURE__*/ Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.onUploadCallback = function () {};\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tcopyColorsArray( colors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tlet color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector2sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector3sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyVector4sArray( vectors ) {\n\n\t\tconst array = this.array;\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tlet vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2.fromBufferAttribute( this, i );\n\t\t\t\t_vector2.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2.x, _vector2.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.x = this.getX( i );\n\t\t\t_vector$9.y = this.getY( i );\n\t\t\t_vector$9.z = this.getZ( i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\t\tif ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\n\n\t\treturn data;\n\n\t}\n\n}\n\nBufferAttribute.prototype.isBufferAttribute = true;\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tlet max = array[ 0 ];\n\n\tfor ( let i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nlet _id = 0;\n\nconst _m1 = new /*@__PURE__*/ Matrix4();\nconst _obj = new /*@__PURE__*/ Object3D();\nconst _offset = new /*@__PURE__*/ Vector3();\nconst _box$1 = new /*@__PURE__*/ Box3();\nconst _boxMorphTargets = new /*@__PURE__*/ Box3();\nconst _vector$8 = new /*@__PURE__*/ Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$1.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$1.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$1.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$1.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$1.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$1.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$1.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeFaceNormals() {\n\n\t\t// backwards compatibility\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( attributes.tangent === undefined ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = attributes.tangent.array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tmerge( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tconst attribute1 = attributes[ key ];\n\t\t\tconst attributeArray1 = attribute1.array;\n\n\t\t\tconst attribute2 = geometry.attributes[ key ];\n\t\t\tconst attributeArray2 = attribute2.array;\n\n\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\tconst length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t const parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t const values = [];\n\n\t\t for ( const key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nBufferGeometry.prototype.isBufferGeometry = true;\n\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _tempB = /*@__PURE__*/ new Vector3();\nconst _tempC = /*@__PURE__*/ new Vector3();\n\nconst _morphA = /*@__PURE__*/ new Vector3();\nconst _morphB = /*@__PURE__*/ new Vector3();\nconst _morphC = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// Check boundingBox before continuing\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\tlet intersection;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\tconst uv = geometry.attributes.uv;\n\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\tconst groups = geometry.groups;\n\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t// indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\tconst end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n}\n\nMesh.prototype.isMesh = true;\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t_vA$1.fromBufferAttribute( position, a );\n\t_vB$1.fromBufferAttribute( position, b );\n\t_vC$1.fromBufferAttribute( position, c );\n\n\tconst morphInfluences = object.morphTargetInfluences;\n\n\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t_morphA.set( 0, 0, 0 );\n\t\t_morphB.set( 0, 0, 0 );\n\t\t_morphC.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\tconst influence = morphInfluences[ i ];\n\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t} else {\n\n\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\n\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\n\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_vA$1.add( _morphA );\n\t\t_vB$1.add( _morphB );\n\t\t_vC$1.add( _morphC );\n\n\t}\n\n\tif ( object.isSkinnedMesh && material.skinning ) {\n\n\t\tobject.boneTransform( a, _vA$1 );\n\t\tobject.boneTransform( b, _vB$1 );\n\t\tobject.boneTransform( c, _vC$1 );\n\n\t}\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv2 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv2, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv2, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv2, c );\n\n\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nCamera.prototype.isCamera = true;\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\nconst fov = 90, aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget !== true ) {\n\n\t\t\tconsole.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.renderTarget = renderTarget;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst renderTarget = this.renderTarget;\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\t// Why CubeTexture._needsFlipEnvMap is necessary:\n\t\t//\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t\t// when using WebGLCubeRenderTarget.texture as a cube texture.\n\n\t\tthis._needsFlipEnvMap = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nCubeTexture.prototype.isCubeTexture = true;\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size, options, dummy ) {\n\n\t\tif ( Number.isInteger( options ) ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );\n\n\t\t\toptions = dummy;\n\n\t\t}\n\n\t\tsuper( size, size, options );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new CubeTexture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.texture._needsFlipEnvMap = false;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = RGBAFormat; // see #18859\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\nclass DataTexture extends Texture {\n\n\tconstructor( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture.prototype.isDataTexture = true;\n\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$2.center.set( 0, 0, 0 );\n\t\t_sphere$2.radius = 0.7071067811865476;\n\t\t_sphere$2.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$2 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = 5131;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmissionmap_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n#endif\";\n\nvar transmissionmap_pars_fragment = \"#ifdef USE_TRANSMISSIONMAP\\n\\tuniform sampler2D transmissionMap;\\n#endif\";\n\nvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSMISSION\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSMISSION\\n\\tuniform float transmission;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <transmissionmap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <transmissionmap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSMISSION\\n\\t\\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmissionmap_fragment: transmissionmap_fragment,\n\ttransmissionmap_pars_fragment: transmissionmap_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshtoon_frag: meshtoon_frag,\n\tmeshtoon_vert: meshtoon_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\t\tuv2Transform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.envmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nfunction WebGLBackground( renderer, cubemaps, state, objects, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = 0;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tbackground = cubemaps.get( background );\n\n\t\t}\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tconst xr = renderer.xr;\n\t\tconst session = xr.getSession && xr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( 34921 );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry, index );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh === true ) {\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( geometry, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in geometryAttributes ) {\n\n\t\t\tconst cachedAttribute = cachedAttributes[ key ];\n\t\t\tconst geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tconst data = {};\n\t\t\tdata.attribute = attribute;\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data = attribute.data;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t\tattributesNum ++;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset ) {\n\n\t\tif ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tconst geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tvertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t} else if ( name === 'instanceColor' ) {\n\n\t\t\t\t\tconst attribute = attributes.get( object.instanceColor );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\n\t\t\t\t\tenableAttributeAndDivisor( programAttribute, 1 );\n\n\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\tgl.vertexAttribPointer( programAttribute, 3, type, false, 12, 0 );\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\t/* eslint-disable no-undef */\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t/* eslint-enable no-undef */\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( 34930 );\n\tconst maxVertexTextures = gl.getParameter( 35660 );\n\tconst maxTextureSize = gl.getParameter( 3379 );\n\tconst maxCubemapSize = gl.getParameter( 34076 );\n\n\tconst maxAttributes = gl.getParameter( 34921 );\n\tconst maxVertexUniforms = gl.getParameter( 36347 );\n\tconst maxVaryings = gl.getParameter( 36348 );\n\tconst maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\tlet influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tconst influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst influence = workInfluences[ i ];\n\t\t\tconst index = influence[ 0 ];\n\t\t\tconst value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\tattributes.update( object.instanceColor, 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DataTexture2DArray extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\nclass DataTexture3D extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nconst emptyTexture = new Texture();\nconst emptyTexture2dArray = new DataTexture2DArray();\nconst emptyTexture3d = new DataTexture3D();\nconst emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4uiv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tconst cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tconst seq = this.seq;\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tconst n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tconst u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tconst v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tconst r = [];\n\n\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tconst u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\nlet programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tconst lines = string.split( '\\n' );\n\n\tfor ( let i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tcase LogLuvEncoding:\n\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, 35713 );\n\tconst log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tconst source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string\n\t\t.replace( unrollLoopPattern, loopReplacer )\n\t\t.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\n\n}\n\nfunction deprecatedLoopReplacer( match, start, end, snippet ) {\n\n\tconsole.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\n\treturn loopReplacer( match, start, end, snippet );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\tconst gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcap ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMap ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMap ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.lightMap ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\tconst vertexTextures = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tconst parameterNames = [\n\t\t'precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor',\n\t\t'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV',\n\t\t'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap',\n\t\t'roughnessMap', 'metalnessMap', 'gradientMap',\n\t\t'alphaMap', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2',\n\t\t'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning',\n\t\t'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'premultipliedAlpha',\n\t\t'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights',\n\t\t'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows',\n\t\t'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights',\n\t\t'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering',\n\t\t'sheen', 'transmissionMap'\n\t];\n\n\tfunction getMaxBones( object ) {\n\n\t\tconst skeleton = object.skeleton;\n\t\tconst bones = skeleton.bones;\n\n\t\tif ( floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\tconst nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tconst maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map ) {\n\n\t\tlet encoding;\n\n\t\tif ( map && map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map && map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t} else {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet vertexShader, fragmentShader;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap ),\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( envMap ),\n\t\t\tenvMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\tlightMapEncoding: getTextureEncodingFromMap( material.lightMap ),\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\tclearcoatMap: !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: !! material.sheen,\n\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.transmissionMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.fragmentShader );\n\t\t\tarray.push( parameters.vertexShader );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tfor ( let i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( renderer.outputEncoding );\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList( properties ) {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transparent = [];\n\n\tconst defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.program = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists( properties ) {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tlet list;\n\n\t\tif ( lists.has( scene ) === false ) {\n\n\t\t\tlist = new WebGLRenderList( properties );\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= lists.get( scene ).length ) {\n\n\t\t\t\tlist = new WebGLRenderList( properties );\n\t\t\t\tlists.get( scene ).push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = lists.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\n\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights() {\n\n\t\tlights.setup( lightsArray );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tlet renderState;\n\n\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStates.get( scene ).length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStates.get( scene ).push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates.get( scene )[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n/**\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterials = [],\n\t\t_distanceMaterials = [],\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\n\t\tdefines: {\n\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t},\n\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vsm_vert,\n\n\t\tfragmentShader: vsm_frag\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tconst pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tconst pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _depthMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_depthMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\tconst index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\tlet material = _distanceMaterials[ index ];\n\n\t\tif ( material === undefined ) {\n\n\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\tskinning: useSkinning\n\n\t\t\t} );\n\n\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t}\n\n\t\treturn material;\n\n\t}\n\n\tfunction getDepthMaterial( object, geometry, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\tlet result = null;\n\n\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\tif ( light.isPointLight === true ) {\n\n\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( customMaterial === undefined ) {\n\n\t\t\tlet useMorphing = false;\n\n\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t}\n\n\t\t\tlet useSkinning = false;\n\n\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst useInstancing = object.isInstancedMesh === true;\n\n\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, geometry, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tlet enabledCapabilities = {};\n\n\tlet xrFramebuffer = null;\n\tlet currentBoundFramebuffers = {};\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( 35661 );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst currentScissor = new Vector4( 0, 0, gl.canvas.width, gl.canvas.height );\n\tconst currentViewport = new Vector4( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindXRFramebuffer( framebuffer ) {\n\n\t\tif ( framebuffer !== xrFramebuffer ) {\n\n\t\t\tgl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\txrFramebuffer = framebuffer;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( framebuffer === null && xrFramebuffer !== null ) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// 36009 is equivalent to 36160\n\n\t\t\t\tif ( target === 36009 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36160 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === 36160 ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ 36009 ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: 32774,\n\t\t[ SubtractEquation ]: 32778,\n\t\t[ ReverseSubtractEquation ]: 32779\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = 32775;\n\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: 0,\n\t\t[ OneFactor ]: 1,\n\t\t[ SrcColorFactor ]: 768,\n\t\t[ SrcAlphaFactor ]: 770,\n\t\t[ SrcAlphaSaturateFactor ]: 776,\n\t\t[ DstColorFactor ]: 774,\n\t\t[ DstAlphaFactor ]: 772,\n\t\t[ OneMinusSrcColorFactor ]: 769,\n\t\t[ OneMinusSrcAlphaFactor ]: 771,\n\t\t[ OneMinusDstColorFactor ]: 775,\n\t\t[ OneMinusDstAlphaFactor ]: 773\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( 32926 )\n\t\t\t: disable( 32926 );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( 3042 );\n\t\tgl.disable( 2884 );\n\t\tgl.disable( 2929 );\n\t\tgl.disable( 32823 );\n\t\tgl.disable( 3089 );\n\t\tgl.disable( 2960 );\n\t\tgl.disable( 32926 );\n\n\t\tgl.blendEquation( 32774 );\n\t\tgl.blendFunc( 1, 0 );\n\t\tgl.blendFuncSeparate( 1, 0, 1, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( 513 );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( 519, 0, 0xffffffff );\n\t\tgl.stencilOp( 7680, 7680, 7680 );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( 1029 );\n\t\tgl.frontFace( 2305 );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( 33984 );\n\n\t\tgl.bindFramebuffer( 36160, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( 36009, null );\n\t\t\tgl.bindFramebuffer( 36008, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\txrFramebuffer = null;\n\t\tcurrentBoundFramebuffers = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tbindXRFramebuffer: bindXRFramebuffer,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\ttextureProperties.__maxMipLevel = Math.log2( Math.max( width, height ) );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: 10497,\n\t\t[ ClampToEdgeWrapping ]: 33071,\n\t\t[ MirroredRepeatWrapping ]: 33648\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: 9728,\n\t\t[ NearestMipmapNearestFilter ]: 9984,\n\t\t[ NearestMipmapLinearFilter ]: 9986,\n\n\t\t[ LinearFilter ]: 9729,\n\t\t[ LinearMipmapNearestFilter ]: 9985,\n\t\t[ LinearMipmapLinearFilter ]: 9987\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\tconst image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format );\n\n\t\tlet glType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tlet mipmap;\n\t\tconst mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\tglInternalFormat = 35056;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tglInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// validation checks for WebGL 1\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( textureType, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\t\t_gl.pixelStorei( 37443, 0 );\n\n\t\tconst isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );\n\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\tconst cubeImage = [];\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t} else {\n\n\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst image = cubeImage[ 0 ],\n\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\tlet mipmaps;\n\n\t\tif ( isCompressed ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t// We assume images for cube map have the same size.\n\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst glFormat = utils.convert( texture.format );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\tif ( textureTarget === 32879 || textureTarget === 35866 ) {\n\n\t\t\tstate.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t} else {\n\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = 33189;\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = 33190;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\tconst glType = utils.convert( texture.type );\n\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\ttextureProperties.__version = texture.version;\n\n\t\tinfo.memory.textures ++;\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Handles WebGL2 RGBFormat fallback - #18858\n\n\t\tif ( isWebGL2 && texture.format === RGBFormat && ( texture.type === FloatType || texture.type === HalfFloatType ) ) {\n\n\t\t\ttexture.format = RGBAFormat;\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );\n\n\t\t}\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tlet glTextureType = 3553;\n\n\t\t\tif ( isRenderTarget3D ) {\n\n\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\tglTextureType = isTexture3D ? 32879 : 35866;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, glTextureType );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\n\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tconst width = renderTarget.width;\n\t\t\t\tconst height = renderTarget.height;\n\t\t\t\tlet mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tstate.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\tstate.bindFramebuffer( 36008, null );\n\t\t\t\tstate.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tlet warnedTexture2D = false;\n\tlet warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLCubeRenderTarget ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.' );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\n\t\tsetTextureCube( texture, slot );\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedIntegerFormat ) return 36244;\n\t\tif ( p === RGFormat ) return 33319;\n\t\tif ( p === RGIntegerFormat ) return 33320;\n\t\tif ( p === RGBIntegerFormat ) return 36248;\n\t\tif ( p === RGBAIntegerFormat ) return 36249;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||\n\t\t\tp === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\t// TODO Complete?\n\n\t\t\t\treturn p;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nArrayCamera.prototype.isArrayCamera = true;\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nGroup.prototype.isGroup = true;\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\t\t\t\t\t\t// ??\n\t\t\t\t\t\thand.add( joint );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst joint = hand.joints[ inputjoint.jointName ];\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\t\tconst state = renderer.state;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\n\t\tlet pose = null;\n\n\t\tconst controllers = [];\n\t\tconst inputSourcesMap = new Map();\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraVR = new ArrayCamera();\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controller = inputSourcesMap.get( event.inputSource );\n\n\t\t\tif ( controller ) {\n\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tinputSourcesMap.forEach( function ( controller, inputSource ) {\n\n\t\t\t\tcontroller.disconnect( inputSource );\n\n\t\t\t} );\n\n\t\t\tinputSourcesMap.clear();\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\tstate.bindXRFramebuffer( null );\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() );\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn referenceSpace;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tconst layerInit = {\n\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t};\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tconst baseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\tsession.updateRenderState( { baseLayer: baseLayer } );\n\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t// Assign inputSources to available controllers\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tinputSourcesMap.set( inputSources[ i ], controllers[ i ] );\n\n\t\t\t}\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\t\t\t\t\tinputSourcesMap.delete( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\t\t\t\tconst controller = inputSourcesMap.get( inputSource );\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t_currentDepthFar = cameraVR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraVR.cameras;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\t\t\tcamera.matrix.copy( cameraVR.matrix );\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\n\t\t\tconst children = camera.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\t\t\t\tconst baseLayer = session.renderState.baseLayer;\n\n\t\t\t\tstate.bindXRFramebuffer( baseLayer.framebuffer );\n\n\t\t\t\tlet cameraVRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\tif ( views.length !== cameraVR.cameras.length ) {\n\n\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\tcameraVRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\t\t\t\t\tconst viewport = baseLayer.getViewport( view );\n\n\t\t\t\t\tconst camera = cameras[ i ];\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraVRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraVR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst inputSources = session.inputSources;\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst controller = controllers[ i ];\n\t\t\t\tconst inputSource = inputSources[ i ];\n\n\t\t\t\tcontroller.update( inputSource, frame, referenceSpace );\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( properties ) {\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsLambert( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material );\n\n\t\t\t} else {\n\n\t\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDepth( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsNormal( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap._needsFlipEnvMap ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tconst maxMipLevel = properties.get( envMap ).__maxMipLevel;\n\n\t\t\tif ( maxMipLevel !== undefined ) {\n\n\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. displacementMap map\n\t\t// 4. normal map\n\t\t// 5. bump map\n\t\t// 6. roughnessMap map\n\t\t// 7. metalnessMap map\n\t\t// 8. alphaMap map\n\t\t// 9. emissiveMap map\n\t\t// 10. clearcoat map\n\t\t// 11. clearcoat normal map\n\t\t// 12. clearcoat roughnessMap map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t} else if ( material.clearcoatMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatMap;\n\n\t\t} else if ( material.clearcoatNormalMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\n\t\t} else if ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities for uv2\n\t\t// 1. ao map\n\t\t// 2. light map\n\n\t\tlet uv2ScaleMap;\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuv2ScaleMap = material.aoMap;\n\n\t\t} else if ( material.lightMap ) {\n\n\t\t\tuv2ScaleMap = material.lightMap;\n\n\t\t}\n\n\t\tif ( uv2ScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uv2ScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uv2ScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuv2ScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. alpha map\n\n\t\tlet uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\tif ( material.sheen ) uniforms.sheen.value.copy( material.sheen );\n\n\t\tif ( material.clearcoatMap ) {\n\n\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t}\n\n\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.transmission.value = material.transmission;\n\n\t\tif ( material.transmissionMap ) {\n\n\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nfunction WebGLRenderer( parameters ) {\n\n\tparameters = parameters || {};\n\n\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\tlet currentRenderList = null;\n\tlet currentRenderState = null;\n\n\t// render() can be called from within a callback triggered by another render.\n\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\tconst renderListStack = [];\n\tconst renderStateStack = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.outputEncoding = LinearEncoding;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = NoToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\n\t// internal properties\n\n\tconst _this = this;\n\n\tlet _isContextLost = false;\n\n\t// internal state cache\n\n\tlet _currentActiveCubeFace = 0;\n\tlet _currentActiveMipmapLevel = 0;\n\tlet _currentRenderTarget = null;\n\tlet _currentMaterialId = - 1;\n\n\tlet _currentCamera = null;\n\n\tconst _currentViewport = new Vector4();\n\tconst _currentScissor = new Vector4();\n\tlet _currentScissorTest = null;\n\n\t//\n\n\tlet _width = _canvas.width;\n\tlet _height = _canvas.height;\n\n\tlet _pixelRatio = 1;\n\tlet _opaqueSort = null;\n\tlet _transparentSort = null;\n\n\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\tlet _scissorTest = false;\n\n\t// frustum\n\n\tconst _frustum = new Frustum();\n\n\t// clipping\n\n\tlet _clippingEnabled = false;\n\tlet _localClippingEnabled = false;\n\n\t// camera matrices cache\n\n\tconst _projScreenMatrix = new Matrix4();\n\n\tconst _vector3 = new Vector3();\n\n\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tlet _gl = _context;\n\n\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\tconst contextName = contextNames[ i ];\n\t\t\tconst context = _canvas.getContext( contextName, contextAttributes );\n\t\t\tif ( context !== null ) return context;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\ttry {\n\n\t\tconst contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\tcontextNames.shift();\n\n\t\t\t}\n\n\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tlet extensions, capabilities, state, info;\n\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tlet utils, bindingStates;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\textensions.init( capabilities );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tclipping = new WebGLClipping( properties );\n\t\tprogramCache = new WebGLPrograms( _this, cubemaps, extensions, capabilities, bindingStates, clipping );\n\t\tmaterials = new WebGLMaterials( properties );\n\t\trenderLists = new WebGLRenderLists( properties );\n\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\tbackground = new WebGLBackground( _this, cubemaps, state, objects, _premultipliedAlpha );\n\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.shadowMap = shadowMap;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// xr\n\n\tconst xr = new WebXRManager( _this, _gl );\n\n\tthis.xr = xr;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( xr.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\tthis.setOpaqueSort = function ( method ) {\n\n\t\t_opaqueSort = method;\n\n\t};\n\n\tthis.setTransparentSort = function ( method ) {\n\n\t\t_transparentSort = method;\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getClearColor() now requires a Color as an argument' );\n\n\t\t\ttarget = new Color();\n\n\t\t}\n\n\t\treturn target.copy( background.getClearColor() );\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tlet bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tcubemaps.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\n\t\txr.dispose();\n\n\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tconst infoAutoReset = info.autoReset;\n\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\tconst shadowMapType = shadowMap.type;\n\n\t\tinitGLContext();\n\n\t\tinfo.autoReset = infoAutoReset;\n\t\tshadowMap.enabled = shadowMapEnabled;\n\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\tshadowMap.type = shadowMapType;\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tconst material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReferences( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\tconst programs = properties.get( material ).programs;\n\n\t\tif ( programs !== undefined ) {\n\n\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tconst buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t//\n\n\t\tlet index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\n\t\t//\n\n\t\tif ( index === null ) {\n\n\t\t\tif ( position === undefined || position.count === 0 ) return;\n\n\t\t} else if ( index.count === 0 ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\tlet rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( material.morphTargets || material.morphNormals ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\tlet attribute;\n\t\tlet renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tconst dataCount = ( index !== null ) ? index.count : position.count;\n\n\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tconst drawStart = Math.max( rangeStart, groupStart );\n\t\tconst drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tconst drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\tconst instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\n\n\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tconst material = object.material;\n\n\t\t\tif ( material ) {\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\tgetProgram( material2, scene, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tlet onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tfunction onXRSessionStart() {\n\n\t\tanimation.stop();\n\n\t}\n\n\tfunction onXRSessionEnd() {\n\n\t\tanimation.start();\n\n\t}\n\n\tconst animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\txr.setAnimationLoop( callback );\n\n\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t};\n\n\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera ) {\n\n\t\tlet renderTarget, forceClear;\n\n\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}\n\n\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost === true ) return;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\tcamera = xr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\tcurrentRenderState.init();\n\n\t\trenderStateStack.push( currentRenderState );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\tcurrentRenderList.init();\n\n\t\trenderListStack.push( currentRenderList );\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tcurrentRenderList.finish();\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights();\n\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\t// _gl.finish();\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\trenderStateStack.pop();\n\n\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderState = null;\n\n\t\t}\n\n\t\trenderListStack.pop();\n\n\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t} else {\n\n\t\t\tcurrentRenderList = null;\n\n\t\t}\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\tconst object = renderItem.object;\n\t\t\tconst geometry = renderItem.geometry;\n\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\tconst group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLightsView( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tconst program = setProgram( camera, scene, material, object );\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction getProgram( material, scene, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tconst lights = currentRenderState.state.lights;\n\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tconst lightsStateVersion = lights.state.version;\n\n\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\tlet programs = materialProperties.programs;\n\n\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tmaterialProperties.fog = scene.fog;\n\t\tmaterialProperties.envMap = cubemaps.get( material.envMap || materialProperties.environment );\n\n\t\tif ( programs === undefined ) {\n\n\t\t\t// new material\n\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tprograms = new Map();\n\t\t\tmaterialProperties.programs = programs;\n\n\t\t}\n\n\t\tlet program = programs.get( programCacheKey );\n\n\t\tif ( program !== undefined ) {\n\n\t\t\t// early out if program and light state is identical\n\n\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\treturn program;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\tmaterial.onBuild( parameters, _this );\n\n\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t}\n\n\t\tconst uniforms = materialProperties.uniforms;\n\n\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t}\n\n\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tconst progUniforms = program.getUniforms();\n\t\tconst uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.currentProgram = program;\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\treturn program;\n\n\t}\n\n\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\tmaterialProperties.instancing = parameters.instancing;\n\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\n\t}\n\n\tfunction setProgram( camera, scene, material, object ) {\n\n\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\ttextures.resetTextureUnits();\n\n\t\tconst fog = scene.fog;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\tconst encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\tconst envMap = cubemaps.get( material.envMap || environment );\n\t\tconst vertexAlphas = material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4;\n\n\t\tconst materialProperties = properties.get( material );\n\t\tconst lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled === true ) {\n\n\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\tconst useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet needsProgramChange = false;\n\n\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.outputEncoding !== encoding ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\tneedsProgramChange = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tneedsProgramChange = true;\n\t\t\tmaterialProperties.__version = material.version;\n\n\t\t}\n\n\t\t//\n\n\t\tlet program = materialProperties.currentProgram;\n\n\t\tif ( needsProgramChange === true ) {\n\n\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t}\n\n\t\tlet refreshProgram = false;\n\t\tlet refreshMaterial = false;\n\t\tlet refreshLights = false;\n\n\t\tconst p_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.isShadowMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tconst bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === null ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tlet size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height );\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\tfunction materialNeedsLights( material ) {\n\n\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t}\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipmapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tlet framebuffer = null;\n\t\tlet isCube = false;\n\t\tlet isRenderTarget3D = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tconst texture = renderTarget.texture;\n\n\t\t\tif ( texture.isDataTexture3D || texture.isDataTexture2DArray ) {\n\n\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t}\n\n\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t_gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\ttry {\n\n\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\tstate.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\tconst levelScale = Math.pow( 2, - level );\n\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\tconst height = Math.floor( texture.image.height * levelScale );\n\t\tconst glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tconst width = srcTexture.image.width;\n\t\tconst height = srcTexture.image.height;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t// As another texture upload may have changed pixelStorei\n\t\t// parameters, make sure they are correct for the dstTexture\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t_gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst { width, height, data } = srcTexture.image;\n\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\tconst glType = utils.convert( dstTexture.type );\n\t\tlet glTarget;\n\n\t\tif ( dstTexture.isDataTexture3D ) {\n\n\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\tglTarget = 32879;\n\n\t\t} else if ( dstTexture.isDataTexture2DArray ) {\n\n\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\tglTarget = 35866;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_gl.pixelStorei( 37440, dstTexture.flipY );\n\t\t_gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, dstTexture.unpackAlignment );\n\n\t\tconst unpackRowLen = _gl.getParameter( 3314 );\n\t\tconst unpackImageHeight = _gl.getParameter( 32878 );\n\t\tconst unpackSkipPixels = _gl.getParameter( 3316 );\n\t\tconst unpackSkipRows = _gl.getParameter( 3315 );\n\t\tconst unpackSkipImages = _gl.getParameter( 32877 );\n\n\t\t_gl.pixelStorei( 3314, width );\n\t\t_gl.pixelStorei( 32878, height );\n\t\t_gl.pixelStorei( 3316, sourceBox.min.x );\n\t\t_gl.pixelStorei( 3315, sourceBox.min.y );\n\t\t_gl.pixelStorei( 32877, sourceBox.min.z );\n\n\t\t_gl.texSubImage3D(\n\t\t\tglTarget,\n\t\t\tlevel,\n\t\t\tposition.x,\n\t\t\tposition.y,\n\t\t\tposition.z,\n\t\t\tsourceBox.max.x - sourceBox.min.x + 1,\n\t\t\tsourceBox.max.y - sourceBox.min.y + 1,\n\t\t\tsourceBox.max.z - sourceBox.min.z + 1,\n\t\t\tglFormat,\n\t\t\tglType,\n\t\t\tdata\n\t\t);\n\n\t\t_gl.pixelStorei( 3314, unpackRowLen );\n\t\t_gl.pixelStorei( 32878, unpackImageHeight );\n\t\t_gl.pixelStorei( 3316, unpackSkipPixels );\n\t\t_gl.pixelStorei( 3315, unpackSkipRows );\n\t\t_gl.pixelStorei( 32877, unpackSkipImages );\n\n\t\t// Generate mipmaps only when copying level 0\n\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.initTexture = function ( texture ) {\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\tstate.unbindTexture();\n\n\t};\n\n\tthis.resetState = function () {\n\n\t\t_currentActiveCubeFace = 0;\n\t\t_currentActiveMipmapLevel = 0;\n\t\t_currentRenderTarget = null;\n\n\t\tstate.reset();\n\t\tbindingStates.reset();\n\n\t};\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nFog.prototype.isFog = true;\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.environment !== null ) data.object.environment = this.environment.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nScene.prototype.isScene = true;\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.onUploadCallback = function () {};\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new InterleavedBuffer( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\nconst _vector$6 = new /*@__PURE__*/ Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.x = this.getX( i );\n\t\t\t_vector$6.y = this.getY( i );\n\t\t\t_vector$6.z = this.getZ( i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t}\n\n\tgetY( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t}\n\n\tgetZ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t}\n\n\tgetW( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// deinterleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interlaved attribtue\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSprite.prototype.isSprite = true;\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\treturn this;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tboneTransform( index, target ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.fromBufferAttribute( geometry.attributes.position, index ).applyMatrix4( this.bindMatrix );\n\n\t\ttarget.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\ttarget.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn target.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nSkinnedMesh.prototype.isSkinnedMesh = true;\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nBone.prototype.isBone = true;\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\t\tthis.boneTextureSize = 0;\n\n\t\tthis.frame = - 1;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _mesh = /*@__PURE__*/ new Mesh();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.frustumCulled = false;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh.geometry = this.geometry;\n\t\t_mesh.material = this.material;\n\n\t\tif ( _mesh.material === undefined ) return;\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new BufferAttribute( new Float32Array( this.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nInstancedMesh.prototype.isInstancedMesh = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nLine.prototype.isLine = true;\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t// we assume non-indexed geometry\n\n\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\tconst lineDistances = [];\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t}\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineSegments.prototype.isLineSegments = true;\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nLineLoop.prototype.isLineLoop = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.material = source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\tconst keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nPoints.prototype.isPoints = true;\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.format = format !== undefined ? format : RGBFormat;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nVideoTexture.prototype.isVideoTexture = true;\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nCanvasTexture.prototype.isCanvasTexture = true;\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\n}\n\nDepthTexture.prototype.isDepthTexture = true;\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices, indices, radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nconst _v0 = new Vector3();\nconst _v1$1 = new Vector3();\nconst _normal = new Vector3();\nconst _triangle = new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry, thresholdAngle ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\tif ( geometry.isGeometry === true ) {\n\n\t\t\tconsole.error( 'THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst precisionPoints = 4;\n\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\tconst indexAttr = geometry.getIndex();\n\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\tconst indexArr = [ 0, 0, 0 ];\n\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\tconst hashes = new Array( 3 );\n\n\t\tconst edgeData = {};\n\t\tconst vertices = [];\n\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\tif ( indexAttr ) {\n\n\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t} else {\n\n\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t}\n\n\t\t\tconst { a, b, c } = _triangle;\n\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t// create hashes for the edge from the vertices\n\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t// skip degenerate triangles\n\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// iterate over every edge\n\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\tfor ( const key in edgeData ) {\n\n\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.2)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tlet p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\tarea( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\tif ( outerNode ) {\n\n\t\tconst b = splitPolygon( outerNode, hole );\n\n\t\t// filter collinear points around the cuts\n\t\tfilterPoints( outerNode, outerNode.next );\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode;\n\tconst hx = hole.x;\n\tconst hy = hole.y;\n\tlet qx = - Infinity, m;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n\t\t( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n\t\t( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n\t\tequals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes, options ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tlet depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points, segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tconst normals = this.attributes.normal.array;\n\t\t\tconst n1 = new Vector3();\n\t\t\tconst n2 = new Vector3();\n\t\t\tconst n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tconst base = segments * points.length * 3;\n\n\t\t\tfor ( let i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\n/**\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\nclass ParametricGeometry extends BufferGeometry {\n\n\tconstructor( func, slices, stacks ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tconst EPS = 0.00001;\n\n\t\tconst normal = new Vector3();\n\n\t\tconst p0 = new Vector3(), p1 = new Vector3();\n\t\tconst pu = new Vector3(), pv = new Vector3();\n\n\t\tif ( func.length < 3 ) {\n\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t\t}\n\n\t\t// generate vertices, normals and uvs\n\n\t\tconst sliceCount = slices + 1;\n\n\t\tfor ( let i = 0; i <= stacks; i ++ ) {\n\n\t\t\tconst v = i / stacks;\n\n\t\t\tfor ( let j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tconst u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tfunc( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < slices; j ++ ) {\n\n\t\t\t\tconst a = i * sliceCount + j;\n\t\t\t\tconst b = i * sliceCount + j + 1;\n\t\t\t\tconst c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\tconst d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes, curveSegments = 12 ) {\n\n\t\tsuper();\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n}\n\n/**\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\nclass TextGeometry extends ExtrudeGeometry {\n\n\tconstructor( text, parameters = {} ) {\n\n\t\tconst font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\t\tsuper( shapes, parameters );\n\n\t\tthis.type = 'TextGeometry';\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry ) {\n\n\t\tsuper();\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tif ( geometry.isGeometry === true ) {\n\n\t\t\tconsole.error( 'THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\n\t\t// helper variables\n\n\t\tconst edge = [ 0, 0 ], edges = {};\n\n\t\tconst vertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst indices = geometry.index;\n\t\t\tlet groups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor ( let i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tconst edge1 = indices.getX( i + j );\n\t\t\t\t\t\tconst edge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tconst key = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( const key in edges ) {\n\n\t\t\t\tconst e = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\n/**\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t}\n\n}\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.vertexTangents = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.vertexTangents = source.vertexTangents;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n/**\n * parameters = {\n *  clearcoat: <float>,\n *  clearcoatMap: new THREE.Texture( <Image> ),\n *  clearcoatRoughness: <float>,\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\n *  clearcoatNormalScale: <Vector2>,\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n *\n *  reflectivity: <float>,\n *  ior: <float>,\n *\n *  sheen: <Color>,\n *\n *  transmission: <float>,\n *  transmissionMap: new THREE.Texture( <Image> )\n * }\n */\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tObject.defineProperty( this, 'ior', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( 1 + 0.4 * this.reflectivity ) / ( 1 - 0.4 * this.reflectivity );\n\n\t\t\t},\n\t\t\tset: function ( ior ) {\n\n\t\t\t\tthis.reflectivity = clamp( 2.5 * ( ior - 1 ) / ( ior + 1 ), 0, 1 );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\tthis.transmission = 0.0;\n\t\tthis.transmissionMap = null;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tif ( source.sheen ) {\n\n\t\t\tthis.sheen = ( this.sheen || new Color() ).copy( source.sheen );\n\n\t\t} else {\n\n\t\t\tthis.sheen = null;\n\n\t\t}\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.MultiplyOperation,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *\n *  map: new THREE.Texture( <Image> ),\n *  gradientMap: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n/**\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>,\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n *\n *  flatShading: <bool>\n * }\n */\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n/**\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\nconst AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tconst n = times.length;\n\t\tconst result = new Array( n );\n\t\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tconst nValues = values.length;\n\t\tconst result = new values.constructor( nValues );\n\n\t\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tconst srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tlet i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tlet value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t},\n\n\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\t\tconst clip = sourceClip.clone();\n\n\t\tclip.name = name;\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tconst track = clip.tracks[ i ];\n\t\t\tconst valueSize = track.getValueSize();\n\n\t\t\tconst times = [];\n\t\t\tconst values = [];\n\n\t\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( times.length === 0 ) continue;\n\n\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\tclip.tracks = tracks;\n\n\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\tlet minStartTime = Infinity;\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// shift all tracks such that clip begins at t=0\n\n\t\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t}\n\n\t\tclip.resetDuration();\n\n\t\treturn clip;\n\n\t},\n\n\tmakeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\t\tif ( fps <= 0 ) fps = 30;\n\n\t\tconst numTracks = referenceClip.tracks.length;\n\t\tconst referenceTime = referenceFrame / fps;\n\n\t\t// Make each track's values relative to the values at the reference frame\n\t\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t\t// Skip this track if it's non-numeric\n\t\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t\t} );\n\n\t\t\tif ( targetTrack === undefined ) continue;\n\n\t\t\tlet referenceOffset = 0;\n\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t\t}\n\n\t\t\tlet targetOffset = 0;\n\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t\t}\n\n\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\tlet referenceValue;\n\n\t\t\t// Find the value to subtract out of the track\n\t\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\n\n\t\t\t} else {\n\n\t\t\t\t// Interpolate to the reference value\n\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\t\treferenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\n\n\t\t\t}\n\n\t\t\t// Conjugate the quaternion\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t\t}\n\n\t\t\t// Subtract the reference value from all of the track values\n\n\t\t\tconst numTimes = targetTrack.times.length;\n\t\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart,\n\t\t\t\t\t\treferenceValue,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\t\tvalueStart\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\t\treturn targetClip;\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n// ALIAS DEFINITIONS\n\nInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\nInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = AnimationUtils.arraySlice( this.times ),\n\t\t\tvalues = AnimationUtils.arraySlice( this.values ),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tconst values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nconst loading = {};\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tconst dataUriRegexResult = url.match( dataUriRegex );\n\t\tlet request;\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tconst mimeType = dataUriRegexResult[ 1 ];\n\t\t\tconst isBase64 = !! dataUriRegexResult[ 2 ];\n\n\t\t\tlet data = dataUriRegexResult[ 3 ];\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tlet response;\n\t\t\t\tconst responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tconst view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\trequest = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tconst response = this.response;\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( const header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tconst texData = scope.parse( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.encoding !== undefined ) {\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tconst isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = new Vector3();\nconst px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n/**\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineCurve.prototype.isLineCurve = true;\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineCurve3';\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nSplineCurve.prototype.isSplineCurve = true;\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLight.prototype.isLight = true;\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nHemisphereLight.prototype.isHemisphereLight = true;\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLightShadow.prototype.isSpotLightShadow = true;\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nSpotLight.prototype.isSpotLight = true;\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nPointLightShadow.prototype.isPointLightShadow = true;\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 1 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// intensity = power per solid angle.\n\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nPointLight.prototype.isPointLight = true;\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nOrthographicCamera.prototype.isOrthographicCamera = true;\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n}\n\nDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nDirectionalLight.prototype.isDirectionalLight = true;\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nAmbientLight.prototype.isAmbientLight = true;\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\nRectAreaLight.prototype.isRectAreaLight = true;\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nLightProbe.prototype.isLightProbe = true;\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = new Color().setHex( json.sheen );\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.morphNormals !== undefined ) material.morphNormals = json.morphNormals;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\n\t\tif ( json.vertexTangents !== undefined ) material.vertexTangents = json.vertexTangents;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON( this );\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute ) {\n\n\t\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON()\t{\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tif ( attribute.updateRange !== undefined ) {\n\n\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ] instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\t\tlet geometryShapes;\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.' );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor ( let j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tconst material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timages[ image.uuid ].push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timages[ image.uuid ].push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\n\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\timages[ image.uuid ] = deserializedImage;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tlet texture;\n\t\t\t\tconst image = images[ data.image ];\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( image );\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture( image.data, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new BufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/* DEPRECATED */\n\n\tsetTexturePath( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tconst toChange = [];\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Font {\n\n\tconstructor( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tgenerateShapes( text, size = 100 ) {\n\n\t\tconst shapes = [];\n\t\tconst paths = createPaths( text, size, this.data );\n\n\t\tfor ( let p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nfunction createPaths( text, size, data ) {\n\n\tconst chars = Array.from( text );\n\tconst scale = size / data.resolution;\n\tconst line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tconst paths = [];\n\n\tlet offsetX = 0, offsetY = 0;\n\n\tfor ( let i = 0; i < chars.length; i ++ ) {\n\n\t\tconst char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tconst ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tconst glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) {\n\n\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\treturn;\n\n\t}\n\n\tconst path = new ShapePath();\n\n\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tconst outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( let i = 0, l = outline.length; i < l; ) {\n\n\t\t\tconst action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\nFont.prototype.isFont = true;\n\nclass FontLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tconst font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\treturn new Font( json );\n\n\t}\n\n}\n\nlet _context;\n\nconst AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\t_context = value;\n\n\t}\n\n};\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n}\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\nclass AmbientLightProbe extends LightProbe {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tconst color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n}\n\nAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( ! matches ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera && camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera && camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = false, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = false, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nBox2.prototype.isBox2 = true;\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass ImmediateRenderObject extends Object3D {\n\n\tconstructor( material ) {\n\n\t\tsuper();\n\n\t\tthis.material = material;\n\t\tthis.render = function ( /* renderCallback */ ) {};\n\n\t\tthis.hasPositions = false;\n\t\tthis.hasNormals = false;\n\t\tthis.hasColors = false;\n\t\tthis.hasUvs = false;\n\n\t\tthis.positionArray = null;\n\t\tthis.normalArray = null;\n\t\tthis.colorArray = null;\n\t\tthis.uvArray = null;\n\n\t\tthis.count = 0;\n\n\t}\n\n}\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'SkeletonHelper';\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the radials\n\n\t\tfor ( let i = 0; i <= radials; i ++ ) {\n\n\t\t\tconst v = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( let i = 0; i <= circles; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / circles * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _floatView = new Float32Array( 1 );\nconst _int32View = new Int32Array( _floatView.buffer );\n\nclass DataUtils {\n\n\t// Converts float32 to float16 (stored as uint16 value).\n\n\tstatic toHalfFloat( val ) {\n\n\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t* by James Tursa?s half-precision code. */\n\n\t\t_floatView[ 0 ] = val;\n\t\tconst x = _int32View[ 0 ];\n\n\t\tlet bits = ( x >> 16 ) & 0x8000; /* Get the sign */\n\t\tlet m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\n\t\tconst e = ( x >> 23 ) & 0xff; /* Using int is faster here */\n\n\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t* half, return signed zero. */\n\t\tif ( e < 103 ) return bits;\n\n\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\t\tif ( e > 142 ) {\n\n\t\t\tbits |= 0x7c00;\n\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\t\t\tbits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\t/* If exponent underflows but not too much, return a denormal */\n\t\tif ( e < 113 ) {\n\n\t\t\tm |= 0x0800;\n\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t* to 1, which is OK. */\n\t\t\tbits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\n\t\t\treturn bits;\n\n\t\t}\n\n\t\tbits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\n\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t* the exponent, which is OK. */\n\t\tbits += m & 1;\n\t\treturn bits;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\nconst LOD_MAX = 8;\nconst SIZE_MAX = Math.pow( 2, LOD_MAX );\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\nconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst ENCODINGS = {\n\t[ LinearEncoding ]: 0,\n\t[ sRGBEncoding ]: 1,\n\t[ RGBEEncoding ]: 2,\n\t[ RGBM7Encoding ]: 3,\n\t[ RGBM16Encoding ]: 4,\n\t[ RGBDEncoding ]: 5,\n\t[ GammaEncoding ]: 6\n};\n\nconst backgroundMaterial = new MeshBasicMaterial( {\n\tside: BackSide,\n\tdepthWrite: false,\n\tdepthTest: false,\n} );\nconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst { _lodPlanes, _sizeLods, _sigmas } = /*@__PURE__*/ _createPlanes();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nfunction convertLinearToRGBE( color ) {\n\n\tconst maxComponent = Math.max( color.r, color.g, color.b );\n\tconst fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );\n\tcolor.multiplyScalar( Math.pow( 2.0, - fExp ) );\n\n\tconst alpha = ( fExp + 128.0 ) / 255.0;\n\treturn alpha;\n\n}\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._blurMaterial = _getBlurShader( MAX_SAMPLES );\n\t\tthis._equirectShader = null;\n\t\tthis._cubemapShader = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular ) {\n\n\t\treturn this._fromTexture( equirectangular );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap ) {\n\n\t\treturn this._fromTexture( cubemap );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapShader === null ) {\n\n\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\tthis._compileMaterial( this._cubemapShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectShader === null ) {\n\n\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\tthis._compileMaterial( this._equirectShader );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._blurMaterial.dispose();\n\n\t\tif ( this._cubemapShader !== null ) this._cubemapShader.dispose();\n\t\tif ( this._equirectShader !== null ) this._equirectShader.dispose();\n\n\t\tfor ( let i = 0; i < _lodPlanes.length; i ++ ) {\n\n\t\t\t_lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t// private interface\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._pingPongRenderTarget.dispose();\n\t\tthis._renderer.setRenderTarget( _oldTarget );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\tconst cubeUVRenderTarget = this._allocateTargets( texture );\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets( texture ) { // warning: null texture is valid\n\n\t\tconst params = {\n\t\t\tmagFilter: NearestFilter,\n\t\t\tminFilter: NearestFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: UnsignedByteType,\n\t\t\tformat: RGBEFormat,\n\t\t\tencoding: _isLDR( texture ) ? texture.encoding : RGBEEncoding,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( params );\n\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\tthis._pingPongRenderTarget = _createRenderTarget( params );\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( _lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst outputEncoding = renderer.outputEncoding;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.outputEncoding = LinearEncoding;\n\t\trenderer.autoClear = false;\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background ).convertSRGBToLinear();\n\t\t\t\tscene.background = null;\n\n\t\t\t\tconst alpha = convertLinearToRGBE( backgroundMaterial.color );\n\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor ).convertSRGBToLinear();\n\n\t\t\tconst alpha = convertLinearToRGBE( backgroundMaterial.color );\n\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\t\t\tif ( col == 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col == 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\t_setViewport( cubeUVRenderTarget,\n\t\t\t\tcol * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.outputEncoding = outputEncoding;\n\t\trenderer.autoClear = originalAutoClear;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tif ( texture.isCubeTexture ) {\n\n\t\t\tif ( this._cubemapShader == null ) {\n\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( this._equirectShader == null ) {\n\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\tconst mesh = new Mesh( _lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tif ( ! texture.isCubeTexture ) {\n\n\t\t\tuniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );\n\n\t\t}\n\n\t\tuniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];\n\t\tuniforms[ 'outputEncoding' ].value = ENCODINGS[ cubeUVRenderTarget.texture.encoding ];\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < TOTAL_LODS; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( _sigmas[ i ] * _sigmas[ i ] - _sigmas[ i - 1 ] * _sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( _lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = _sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i == 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;\n\t\tblurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\t\tblurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];\n\n\t\tconst outputSize = _sizeLods[ lodOut ];\n\t\tconst x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );\n\t\tconst y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) + 2 * outputSize * ( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\nfunction _isLDR( texture ) {\n\n\tif ( texture === undefined || texture.type !== UnsignedByteType ) return false;\n\n\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\n}\n\nfunction _createPlanes() {\n\n\tconst _lodPlanes = [];\n\tconst _sizeLods = [];\n\tconst _sigmas = [];\n\n\tlet lod = LOD_MAX;\n\n\tfor ( let i = 0; i < TOTAL_LODS; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\t_sizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > LOD_MAX - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];\n\n\t\t} else if ( i == 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\t_sigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 1 );\n\t\tconst min = - texelSize / 2;\n\t\tconst max = 1 + texelSize / 2;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\t_lodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { _lodPlanes, _sizeLods, _sigmas };\n\n}\n\nfunction _createRenderTarget( params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( maxSamples ) {\n\n\tconst weights = new Float32Array( maxSamples );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: { 'n': maxSamples },\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectShader() {\n\n\tconst texelSize = new Vector2( 1, 1 );\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'texelSize': { value: texelSize },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCubemapShader() {\n\n\tconst shaderMaterial = new RawShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },\n\t\t\t'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${ _getEncodings() }\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction _getEncodings() {\n\n\treturn /* glsl */`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`;\n\n}\n\nconst LineStrip = 0;\nconst LinePieces = 1;\nconst NoColors = 0;\nconst FaceColors = 1;\nconst VertexColors = 2;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials = [] ) {\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nPath.prototype.fromPoints = function ( points ) {\n\n\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\treturn this.setFromPoints( points );\n\n};\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nLoader.prototype.extractUrlBase = function ( url ) {\n\n\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\treturn LoaderUtils.extractUrlBase( url );\n\n};\n\nLoader.Handlers = {\n\n\tadd: function ( /* regex, loader */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t},\n\n\tget: function ( /* file */ ) {\n\n\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t}\n\n};\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nBox2.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox2.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox2.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox2.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nBox3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nBox3.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\nBox3.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nBox3.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\nBox3.prototype.size = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\treturn this.getSize( optionalTarget );\n\n};\n\n//\n\nSphere.prototype.empty = function () {\n\n\tconsole.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\n\treturn this.isEmpty();\n\n};\n\n//\n\nFrustum.prototype.setFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\n\treturn this.setFromProjectionMatrix( m );\n\n};\n\n//\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\n//\n\nMatrix3.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix3.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\treturn vector.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\n\treturn attribute.applyMatrix3( this );\n\n};\n\nMatrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix3.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nMatrix4.prototype.extractPosition = function ( m ) {\n\n\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\treturn this.copyPosition( m );\n\n};\n\nMatrix4.prototype.flattenToArrayOffset = function ( array, offset ) {\n\n\tconsole.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\n\treturn this.toArray( array, offset );\n\n};\n\nMatrix4.prototype.getPosition = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n};\n\nMatrix4.prototype.setRotationFromQuaternion = function ( q ) {\n\n\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\treturn this.makeRotationFromQuaternion( q );\n\n};\n\nMatrix4.prototype.multiplyToArray = function () {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n};\n\nMatrix4.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector4 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.multiplyVector3Array = function ( /* a */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateAxis = function ( v ) {\n\n\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\tv.transformDirection( this );\n\n};\n\nMatrix4.prototype.crossVector = function ( vector ) {\n\n\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\treturn vector.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.translate = function () {\n\n\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateX = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateY = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateZ = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n};\n\nMatrix4.prototype.rotateByAxis = function () {\n\n\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n};\n\nMatrix4.prototype.applyToBufferAttribute = function ( attribute ) {\n\n\tconsole.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\n\treturn attribute.applyMatrix4( this );\n\n};\n\nMatrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\n\n\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n};\n\nMatrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {\n\n\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n};\n\nMatrix4.prototype.getInverse = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\n\treturn this.copy( matrix ).invert();\n\n};\n\n//\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\n//\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nQuaternion.prototype.inverse = function ( ) {\n\n\tconsole.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\n\treturn this.invert();\n\n};\n\n//\n\nRay.prototype.isIntersectionBox = function ( box ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\treturn this.intersectsBox( box );\n\n};\n\nRay.prototype.isIntersectionPlane = function ( plane ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\treturn this.intersectsPlane( plane );\n\n};\n\nRay.prototype.isIntersectionSphere = function ( sphere ) {\n\n\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\treturn this.intersectsSphere( sphere );\n\n};\n\n//\n\nTriangle.prototype.area = function () {\n\n\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\treturn this.getArea();\n\n};\n\nTriangle.prototype.barycoordFromPoint = function ( point, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn this.getBarycoord( point, target );\n\n};\n\nTriangle.prototype.midpoint = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\treturn this.getMidpoint( target );\n\n};\n\nTriangle.prototypenormal = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn this.getNormal( target );\n\n};\n\nTriangle.prototype.plane = function ( target ) {\n\n\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\treturn this.getPlane( target );\n\n};\n\nTriangle.barycoordFromPoint = function ( point, a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n};\n\nTriangle.normal = function ( a, b, c, target ) {\n\n\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\treturn Triangle.getNormal( a, b, c, target );\n\n};\n\n//\n\nShape.prototype.extractAllPoints = function ( divisions ) {\n\n\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\treturn this.extractPoints( divisions );\n\n};\n\nShape.prototype.extrude = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\treturn new ExtrudeGeometry( this, options );\n\n};\n\nShape.prototype.makeGeometry = function ( options ) {\n\n\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\treturn new ShapeGeometry( this, options );\n\n};\n\n//\n\nVector2.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector2.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector2.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector3.prototype.setEulerFromRotationMatrix = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n};\n\nVector3.prototype.setEulerFromQuaternion = function () {\n\n\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n};\n\nVector3.prototype.getPositionFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\treturn this.setFromMatrixPosition( m );\n\n};\n\nVector3.prototype.getScaleFromMatrix = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\treturn this.setFromMatrixScale( m );\n\n};\n\nVector3.prototype.getColumnFromMatrix = function ( index, matrix ) {\n\n\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\treturn this.setFromMatrixColumn( matrix, index );\n\n};\n\nVector3.prototype.applyProjection = function ( m ) {\n\n\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\treturn this.applyMatrix4( m );\n\n};\n\nVector3.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector3.prototype.distanceToManhattan = function ( v ) {\n\n\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\treturn this.manhattanDistanceTo( v );\n\n};\n\nVector3.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nVector4.prototype.fromAttribute = function ( attribute, index, offset ) {\n\n\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\treturn this.fromBufferAttribute( attribute, index, offset );\n\n};\n\nVector4.prototype.lengthManhattan = function () {\n\n\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\treturn this.manhattanLength();\n\n};\n\n//\n\nObject3D.prototype.getChildByName = function ( name ) {\n\n\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\treturn this.getObjectByName( name );\n\n};\n\nObject3D.prototype.renderDepth = function () {\n\n\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n};\n\nObject3D.prototype.translate = function ( distance, axis ) {\n\n\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\treturn this.translateOnAxis( axis, distance );\n\n};\n\nObject3D.prototype.getWorldRotation = function () {\n\n\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n};\n\nObject3D.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nMesh.prototype.setDrawMode = function () {\n\n\tconsole.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n};\n\nObject.defineProperties( Mesh.prototype, {\n\n\tdrawMode: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\n\t\t\treturn TrianglesDrawMode;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\n\n\t\t}\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\n\t\t\t'Use .setFocalLength and .filmGauge for a photographic setup.' );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tdynamic: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t}\n\t}\n\n} );\n\nBufferAttribute.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nBufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n},\n\nBufferAttribute.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nBufferGeometry.prototype.addIndex = function ( index ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\tthis.setIndex( index );\n\n};\n\nBufferGeometry.prototype.addAttribute = function ( name, attribute ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t}\n\n\tif ( name === 'index' ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\tthis.setIndex( attribute );\n\n\t\treturn this;\n\n\t}\n\n\treturn this.setAttribute( name, attribute );\n\n};\n\nBufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {\n\n\tif ( indexOffset !== undefined ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t}\n\n\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\tthis.addGroup( start, count );\n\n};\n\nBufferGeometry.prototype.clearDrawCalls = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\tthis.clearGroups();\n\n};\n\nBufferGeometry.prototype.computeOffsets = function () {\n\n\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n};\n\nBufferGeometry.prototype.removeAttribute = function ( name ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\treturn this.deleteAttribute( name );\n\n};\n\nBufferGeometry.prototype.applyMatrix = function ( matrix ) {\n\n\tconsole.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\n\treturn this.applyMatrix4( matrix );\n\n};\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\nInterleavedBuffer.prototype.setDynamic = function ( value ) {\n\n\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\treturn this;\n\n};\n\nInterleavedBuffer.prototype.setArray = function ( /* array */ ) {\n\n\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n};\n\n//\n\nExtrudeGeometry.prototype.getArrays = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShapeList = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );\n\n};\n\nExtrudeGeometry.prototype.addShape = function () {\n\n\tconsole.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );\n\n};\n\n//\n\nScene.prototype.dispose = function () {\n\n\tconsole.error( 'THREE.Scene: .dispose() has been removed.' );\n\n};\n\n//\n\nUniform.prototype.onUpdate = function () {\n\n\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\treturn this;\n\n};\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t},\n\n\tstencilMask: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\treturn this.stencilFuncMask;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\tthis.stencilFuncMask = value;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nWebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\tthis.setRenderTarget( renderTarget );\n\tthis.clear( color, depth, stencil );\n\n};\n\nWebGLRenderer.prototype.animate = function ( callback ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\tthis.setAnimationLoop( callback );\n\n};\n\nWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\treturn this.getRenderTarget();\n\n};\n\nWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\treturn this.capabilities.getMaxAnisotropy();\n\n};\n\nWebGLRenderer.prototype.getPrecision = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\treturn this.capabilities.precision;\n\n};\n\nWebGLRenderer.prototype.resetGLState = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\treturn this.state.reset();\n\n};\n\nWebGLRenderer.prototype.supportsFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_float' );\n\n};\n\nWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\treturn this.extensions.get( 'OES_texture_half_float' );\n\n};\n\nWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n};\n\nWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n};\n\nWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n};\n\nWebGLRenderer.prototype.supportsVertexTextures = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\treturn this.capabilities.vertexTextures;\n\n};\n\nWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n};\n\nWebGLRenderer.prototype.enableScissorTest = function ( boolean ) {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\tthis.setScissorTest( boolean );\n\n};\n\nWebGLRenderer.prototype.initMaterial = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPrePlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.addPostPlugin = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.updateShadowMap = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setFaceCulling = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.allocTextureUnit = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTexture2D = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.setTextureCube = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n};\n\nWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\n\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\treturn this.getActiveMipmapLevel();\n\n};\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\tcontext: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\treturn this.getContext();\n\n\t\t}\n\t},\n\tvr: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\n\t\t\treturn this.xr;\n\n\t\t}\n\t},\n\tgammaInput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\n\n\t\t}\n\t},\n\tgammaOutput: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\n\t\t\tthis.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\n\n\t\t}\n\t},\n\ttoneMappingWhitePoint: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\t\t\treturn 1.0;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\n\n\t\t}\n\t},\n\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tconsole.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\n\treturn new WebGLCubeRenderTarget( width, options );\n\n}\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tconst scope = this;\n\tconst audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\nCubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\n\treturn this.renderTarget.clear( renderer, color, depth, stencil );\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tconst loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tconst loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tconst texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nconst SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t/* eslint-disable no-undef */\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\t/* eslint-enable no-undef */\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GammaEncoding, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LogLuvEncoding, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry as ParametricBufferGeometry, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDEncoding, RGBEEncoding, RGBEFormat, RGBFormat, RGBIntegerFormat, RGBM16Encoding, RGBM7Encoding, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, SRGB8_ALPHA8_ASTC_10x10_Format, SRGB8_ALPHA8_ASTC_10x5_Format, SRGB8_ALPHA8_ASTC_10x6_Format, SRGB8_ALPHA8_ASTC_10x8_Format, SRGB8_ALPHA8_ASTC_12x10_Format, SRGB8_ALPHA8_ASTC_12x12_Format, SRGB8_ALPHA8_ASTC_4x4_Format, SRGB8_ALPHA8_ASTC_5x4_Format, SRGB8_ALPHA8_ASTC_5x5_Format, SRGB8_ALPHA8_ASTC_6x5_Format, SRGB8_ALPHA8_ASTC_6x6_Format, SRGB8_ALPHA8_ASTC_8x5_Format, SRGB8_ALPHA8_ASTC_8x6_Format, SRGB8_ALPHA8_ASTC_8x8_Format, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry as TextBufferGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGLCubeRenderTarget, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'touchstart', onTouchStart );\n\t\t\tscope.domElement.removeEventListener( 'touchend', onTouchEnd );\n\t\t\tscope.domElement.removeEventListener( 'touchmove', onTouchMove );\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseUp( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan( event );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\tconst dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\tfunction handleTouchEnd( /*event*/ ) {\n\n\t\t\t// no-op\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseDown( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseMove( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tswitch ( event.pointerType ) {\n\n\t\t\t\tcase 'mouse':\n\t\t\t\tcase 'pen':\n\t\t\t\t\tonMouseUp( event );\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO touch\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\t// Prevent the browser from scrolling.\n\t\t\tevent.preventDefault();\n\n\t\t\t// Manually set the focus since calling preventDefault above\n\t\t\t// prevents the browser from setting it automatically.\n\n\t\t\tscope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.ownerDocument.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp( event ) {\n\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.ownerDocument.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleMouseUp( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate( event );\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault(); // prevent scrolling\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\thandleTouchEnd( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\tscope.domElement.addEventListener( 'touchstart', onTouchStart, { passive: false } );\n\t\tscope.domElement.addEventListener( 'touchend', onTouchEnd );\n\t\tscope.domElement.addEventListener( 'touchmove', onTouchMove, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3\n} from 'three';\n\nclass BufferGeometryUtils {\n\n\tstatic computeTangents( geometry ) {\n\n\t\tgeometry.computeTangents();\n\t\tconsole.warn( 'THREE.BufferGeometryUtils: .computeTangents() has been removed. Use BufferGeometry.computeTangents() instead.' );\n\n\t}\n\n\t/**\n\t * @param  {Array<BufferGeometry>} geometries\n\t * @param  {Boolean} useGroups\n\t * @return {BufferGeometry}\n\t */\n\tstatic mergeBufferGeometries( geometries, useGroups = false ) {\n\n\t\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\t\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\t\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\t\tconst attributes = {};\n\t\tconst morphAttributes = {};\n\n\t\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\t\tconst mergedGeometry = new BufferGeometry();\n\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst geometry = geometries[ i ];\n\t\t\tlet attributesCount = 0;\n\n\t\t\t// ensure that all geometries are indexed, or none\n\n\t\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// gather attributes, exit early if they're different\n\n\t\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\t\tattributesCount ++;\n\n\t\t\t}\n\n\t\t\t// ensure geometries have the same number of attributes\n\n\t\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// gather morph attributes, exit early if they're different\n\n\t\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t\t}\n\n\t\t\t// gather .userData\n\n\t\t\tmergedGeometry.userData.mergedUserData = mergedGeometry.userData.mergedUserData || [];\n\t\t\tmergedGeometry.userData.mergedUserData.push( geometry.userData );\n\n\t\t\tif ( useGroups ) {\n\n\t\t\t\tlet count;\n\n\t\t\t\tif ( isIndexed ) {\n\n\t\t\t\t\tcount = geometry.index.count;\n\n\t\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\t\toffset += count;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// merge indices\n\n\t\tif ( isIndexed ) {\n\n\t\t\tlet indexOffset = 0;\n\t\t\tconst mergedIndex = [];\n\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\t\tconst index = geometries[ i ].index;\n\n\t\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t\t}\n\n\t\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t\t}\n\n\t\t// merge attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst mergedAttribute = this.mergeBufferAttributes( attributes[ name ] );\n\n\t\t\tif ( ! mergedAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t\t}\n\n\t\t// merge morph attributes\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\t\tif ( numMorphTargets === 0 ) break;\n\n\t\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tconst mergedMorphAttribute = this.mergeBufferAttributes( morphAttributesToMerge );\n\n\t\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn mergedGeometry;\n\n\t}\n\n\t/**\n\t * @param {Array<BufferAttribute>} attributes\n\t * @return {BufferAttribute}\n\t */\n\tstatic mergeBufferAttributes( attributes ) {\n\n\t\tlet TypedArray;\n\t\tlet itemSize;\n\t\tlet normalized;\n\t\tlet arrayLength = 0;\n\n\t\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\t\tconst attribute = attributes[ i ];\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tarrayLength += attribute.array.length;\n\n\t\t}\n\n\t\tconst array = new TypedArray( arrayLength );\n\t\tlet offset = 0;\n\n\t\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\t\tarray.set( attributes[ i ].array, offset );\n\n\t\t\toffset += attributes[ i ].array.length;\n\n\t\t}\n\n\t\treturn new BufferAttribute( array, itemSize, normalized );\n\n\t}\n\n\t/**\n\t * @param {Array<BufferAttribute>} attributes\n\t * @return {Array<InterleavedBufferAttribute>}\n\t */\n\tstatic interleaveAttributes( attributes ) {\n\n\t\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t\t// a set of InterleavedBufferAttributes for each attribute\n\t\tlet TypedArray;\n\t\tlet arrayLength = 0;\n\t\tlet stride = 0;\n\n\t\t// calculate the the length and type of the interleavedBuffer\n\t\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\t\tconst attribute = attributes[ i ];\n\n\t\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tarrayLength += attribute.array.length;\n\t\t\tstride += attribute.itemSize;\n\n\t\t}\n\n\t\t// Create the set of buffer attributes\n\t\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\t\tlet offset = 0;\n\t\tconst res = [];\n\t\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\t\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\t\tconst attribute = attributes[ j ];\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst count = attribute.count;\n\t\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\t\tres.push( iba );\n\n\t\t\toffset += itemSize;\n\n\t\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t\t// at the appropriate offset\n\t\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn res;\n\n\t}\n\n\t/**\n\t * @param {Array<BufferGeometry>} geometry\n\t * @return {number}\n\t */\n\tstatic estimateBytesUsed( geometry ) {\n\n\t\t// Return the estimated memory used by this geometry in bytes\n\t\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t\t// for InterleavedBufferAttributes.\n\t\tlet mem = 0;\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tconst attr = geometry.getAttribute( name );\n\t\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t\t}\n\n\t\tconst indices = geometry.getIndex();\n\t\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\t\treturn mem;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {number} tolerance\n\t * @return {BufferGeometry>}\n\t */\n\tstatic mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\t\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t\t// if it's already available.\n\t\tconst hashToIndex = {};\n\t\tconst indices = geometry.getIndex();\n\t\tconst positions = geometry.getAttribute( 'position' );\n\t\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t\t// next value for triangle indices\n\t\tlet nextIndex = 0;\n\n\t\t// attributes and new attribute arrays\n\t\tconst attributeNames = Object.keys( geometry.attributes );\n\t\tconst attrArrays = {};\n\t\tconst morphAttrsArrays = {};\n\t\tconst newIndices = [];\n\t\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\n\t\t// initialize the arrays\n\t\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\t\tconst name = attributeNames[ i ];\n\n\t\t\tattrArrays[ name ] = [];\n\n\t\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\t\tif ( morphAttr ) {\n\n\t\t\t\tmorphAttrsArrays[ name ] = new Array( morphAttr.length ).fill().map( () => [] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// convert the error tolerance to an amount of decimal places to truncate to\n\t\tconst decimalShift = Math.log10( 1 / tolerance );\n\t\tconst shiftMultiplier = Math.pow( 10, decimalShift );\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\t\tlet hash = '';\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * shiftMultiplier ) },`;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add another reference to the vertex if it's already\n\t\t\t// used by another index\n\t\t\tif ( hash in hashToIndex ) {\n\n\t\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t\t} else {\n\n\t\t\t\t// copy data to the new index in the attribute arrays\n\t\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\t\tconst morphAttr = geometry.morphAttributes[ name ];\n\t\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\t\tconst newarray = attrArrays[ name ];\n\t\t\t\t\tconst newMorphArrays = morphAttrsArrays[ name ];\n\n\t\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\t\tnewarray.push( attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\t\tif ( morphAttr ) {\n\n\t\t\t\t\t\t\tfor ( let m = 0, ml = morphAttr.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\t\tnewMorphArrays[ m ].push( morphAttr[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\t\tnewIndices.push( nextIndex );\n\t\t\t\tnextIndex ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Generate typed arrays from new attribute arrays and update\n\t\t// the attributeBuffers\n\t\tconst result = geometry.clone();\n\t\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\t\tconst name = attributeNames[ i ];\n\t\t\tconst oldAttribute = geometry.getAttribute( name );\n\n\t\t\tconst buffer = new oldAttribute.array.constructor( attrArrays[ name ] );\n\t\t\tconst attribute = new BufferAttribute( buffer, oldAttribute.itemSize, oldAttribute.normalized );\n\n\t\t\tresult.setAttribute( name, attribute );\n\n\t\t\t// Update the attribute arrays\n\t\t\tif ( name in morphAttrsArrays ) {\n\n\t\t\t\tfor ( let j = 0; j < morphAttrsArrays[ name ].length; j ++ ) {\n\n\t\t\t\t\tconst oldMorphAttribute = geometry.morphAttributes[ name ][ j ];\n\n\t\t\t\t\tconst buffer = new oldMorphAttribute.array.constructor( morphAttrsArrays[ name ][ j ] );\n\t\t\t\t\tconst morphAttribute = new BufferAttribute( buffer, oldMorphAttribute.itemSize, oldMorphAttribute.normalized );\n\t\t\t\t\tresult.morphAttributes[ name ][ j ] = morphAttribute;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tresult.setIndex( newIndices );\n\n\t\treturn result;\n\n\t}\n\n\t/**\n\t * @param {BufferGeometry} geometry\n\t * @param {number} drawMode\n\t * @return {BufferGeometry>}\n\t */\n\tstatic toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\t\tlet index = geometry.getIndex();\n\n\t\t\t// generate index if not present\n\n\t\t\tif ( index === null ) {\n\n\t\t\t\tconst indices = [];\n\n\t\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\t\tif ( position !== undefined ) {\n\n\t\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\t\tindices.push( i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\t\treturn geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst numberOfTriangles = index.count - 2;\n\t\t\tconst newIndices = [];\n\n\t\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t\t}\n\n\t\t\t// build final geometry\n\n\t\t\tconst newGeometry = geometry.clone();\n\t\t\tnewGeometry.setIndex( newIndices );\n\t\t\tnewGeometry.clearGroups();\n\n\t\t\treturn newGeometry;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n\t * Helpful for Raytracing or Decals.\n\t * @param {Mesh | Line | Points} object An instance of Mesh, Line or Points.\n\t * @return {Object} An Object with original position/normal attributes and morphed ones.\n\t */\n\tstatic computeMorphedAttributes( object ) {\n\n\t\tif ( object.geometry.isBufferGeometry !== true ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: Geometry is not of type BufferGeometry.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst _vA = new Vector3();\n\t\tconst _vB = new Vector3();\n\t\tconst _vC = new Vector3();\n\n\t\tconst _tempA = new Vector3();\n\t\tconst _tempB = new Vector3();\n\t\tconst _tempC = new Vector3();\n\n\t\tconst _morphA = new Vector3();\n\t\tconst _morphB = new Vector3();\n\t\tconst _morphC = new Vector3();\n\n\t\tfunction _calculateMorphedAttributeData(\n\t\t\tobject,\n\t\t\tmaterial,\n\t\t\tattribute,\n\t\t\tmorphAttribute,\n\t\t\tmorphTargetsRelative,\n\t\t\ta,\n\t\t\tb,\n\t\t\tc,\n\t\t\tmodifiedAttributeArray\n\t\t) {\n\n\t\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( material.morphTargets && morphAttribute && morphInfluences ) {\n\n\t\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_vA.add( _morphA );\n\t\t\t\t_vB.add( _morphB );\n\t\t\t\t_vC.add( _morphC );\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tobject.boneTransform( a, _vA );\n\t\t\t\tobject.boneTransform( b, _vB );\n\t\t\t\tobject.boneTransform( c, _vC );\n\n\t\t\t}\n\n\t\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t\t}\n\n\t\tconst geometry = object.geometry;\n\t\tconst material = object.material;\n\n\t\tlet a, b, c;\n\t\tconst index = geometry.index;\n\t\tconst positionAttribute = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst normalAttribute = geometry.attributes.normal;\n\t\tconst morphNormal = geometry.morphAttributes.position;\n\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\t\tlet i, j, il, jl;\n\t\tlet group, groupMaterial;\n\t\tlet start, end;\n\n\t\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\t\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\t\tobject,\n\t\t\t\t\t\t\tgroupMaterial,\n\t\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\t\tobject,\n\t\t\t\t\t\t\tgroupMaterial,\n\t\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tmaterial,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tmaterial,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( positionAttribute !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\ta = j;\n\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\t\tobject,\n\t\t\t\t\t\t\tgroupMaterial,\n\t\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\t\tobject,\n\t\t\t\t\t\t\tgroupMaterial,\n\t\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\ta = i;\n\t\t\t\t\tb = i + 1;\n\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tmaterial,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tmaterial,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\t\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\t\treturn {\n\n\t\t\tpositionAttribute: positionAttribute,\n\t\t\tnormalAttribute: normalAttribute,\n\t\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t\t};\n\n\t}\n\n}\n\nexport { BufferGeometryUtils };\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * The Ease class provides a collection of easing functions for use with tween.js.\n */\nvar Easing = {\n    Linear: {\n        None: function (amount) {\n            return amount;\n        },\n    },\n    Quadratic: {\n        In: function (amount) {\n            return amount * amount;\n        },\n        Out: function (amount) {\n            return amount * (2 - amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount;\n            }\n            return -0.5 * (--amount * (amount - 2) - 1);\n        },\n    },\n    Cubic: {\n        In: function (amount) {\n            return amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount + 2);\n        },\n    },\n    Quartic: {\n        In: function (amount) {\n            return amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return 1 - --amount * amount * amount * amount;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount;\n            }\n            return -0.5 * ((amount -= 2) * amount * amount * amount - 2);\n        },\n    },\n    Quintic: {\n        In: function (amount) {\n            return amount * amount * amount * amount * amount;\n        },\n        Out: function (amount) {\n            return --amount * amount * amount * amount * amount + 1;\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return 0.5 * amount * amount * amount * amount * amount;\n            }\n            return 0.5 * ((amount -= 2) * amount * amount * amount * amount + 2);\n        },\n    },\n    Sinusoidal: {\n        In: function (amount) {\n            return 1 - Math.cos((amount * Math.PI) / 2);\n        },\n        Out: function (amount) {\n            return Math.sin((amount * Math.PI) / 2);\n        },\n        InOut: function (amount) {\n            return 0.5 * (1 - Math.cos(Math.PI * amount));\n        },\n    },\n    Exponential: {\n        In: function (amount) {\n            return amount === 0 ? 0 : Math.pow(1024, amount - 1);\n        },\n        Out: function (amount) {\n            return amount === 1 ? 1 : 1 - Math.pow(2, -10 * amount);\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            if ((amount *= 2) < 1) {\n                return 0.5 * Math.pow(1024, amount - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (amount - 1)) + 2);\n        },\n    },\n    Circular: {\n        In: function (amount) {\n            return 1 - Math.sqrt(1 - amount * amount);\n        },\n        Out: function (amount) {\n            return Math.sqrt(1 - --amount * amount);\n        },\n        InOut: function (amount) {\n            if ((amount *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - amount * amount) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (amount -= 2) * amount) + 1);\n        },\n    },\n    Elastic: {\n        In: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return -Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n        },\n        Out: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            return Math.pow(2, -10 * amount) * Math.sin((amount - 0.1) * 5 * Math.PI) + 1;\n        },\n        InOut: function (amount) {\n            if (amount === 0) {\n                return 0;\n            }\n            if (amount === 1) {\n                return 1;\n            }\n            amount *= 2;\n            if (amount < 1) {\n                return -0.5 * Math.pow(2, 10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI);\n            }\n            return 0.5 * Math.pow(2, -10 * (amount - 1)) * Math.sin((amount - 1.1) * 5 * Math.PI) + 1;\n        },\n    },\n    Back: {\n        In: function (amount) {\n            var s = 1.70158;\n            return amount * amount * ((s + 1) * amount - s);\n        },\n        Out: function (amount) {\n            var s = 1.70158;\n            return --amount * amount * ((s + 1) * amount + s) + 1;\n        },\n        InOut: function (amount) {\n            var s = 1.70158 * 1.525;\n            if ((amount *= 2) < 1) {\n                return 0.5 * (amount * amount * ((s + 1) * amount - s));\n            }\n            return 0.5 * ((amount -= 2) * amount * ((s + 1) * amount + s) + 2);\n        },\n    },\n    Bounce: {\n        In: function (amount) {\n            return 1 - Easing.Bounce.Out(1 - amount);\n        },\n        Out: function (amount) {\n            if (amount < 1 / 2.75) {\n                return 7.5625 * amount * amount;\n            }\n            else if (amount < 2 / 2.75) {\n                return 7.5625 * (amount -= 1.5 / 2.75) * amount + 0.75;\n            }\n            else if (amount < 2.5 / 2.75) {\n                return 7.5625 * (amount -= 2.25 / 2.75) * amount + 0.9375;\n            }\n            else {\n                return 7.5625 * (amount -= 2.625 / 2.75) * amount + 0.984375;\n            }\n        },\n        InOut: function (amount) {\n            if (amount < 0.5) {\n                return Easing.Bounce.In(amount * 2) * 0.5;\n            }\n            return Easing.Bounce.Out(amount * 2 - 1) * 0.5 + 0.5;\n        },\n    },\n};\n\nvar now;\n// Include a performance.now polyfill.\n// In node.js, use process.hrtime.\n// eslint-disable-next-line\n// @ts-ignore\nif (typeof self === 'undefined' && typeof process !== 'undefined' && process.hrtime) {\n    now = function () {\n        // eslint-disable-next-line\n        // @ts-ignore\n        var time = process.hrtime();\n        // Convert [seconds, nanoseconds] to milliseconds.\n        return time[0] * 1000 + time[1] / 1000000;\n    };\n}\n// In a browser, use self.performance.now if it is available.\nelse if (typeof self !== 'undefined' && self.performance !== undefined && self.performance.now !== undefined) {\n    // This must be bound, because directly assigning this function\n    // leads to an invocation exception in Chrome.\n    now = self.performance.now.bind(self.performance);\n}\n// Use Date.now if it is available.\nelse if (Date.now !== undefined) {\n    now = Date.now;\n}\n// Otherwise, use 'new Date().getTime()'.\nelse {\n    now = function () {\n        return new Date().getTime();\n    };\n}\nvar now$1 = now;\n\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tween\n */\nvar Group = /** @class */ (function () {\n    function Group() {\n        this._tweens = {};\n        this._tweensAddedDuringUpdate = {};\n    }\n    Group.prototype.getAll = function () {\n        var _this = this;\n        return Object.keys(this._tweens).map(function (tweenId) {\n            return _this._tweens[tweenId];\n        });\n    };\n    Group.prototype.removeAll = function () {\n        this._tweens = {};\n    };\n    Group.prototype.add = function (tween) {\n        this._tweens[tween.getId()] = tween;\n        this._tweensAddedDuringUpdate[tween.getId()] = tween;\n    };\n    Group.prototype.remove = function (tween) {\n        delete this._tweens[tween.getId()];\n        delete this._tweensAddedDuringUpdate[tween.getId()];\n    };\n    Group.prototype.update = function (time, preserve) {\n        if (time === void 0) { time = now$1(); }\n        if (preserve === void 0) { preserve = false; }\n        var tweenIds = Object.keys(this._tweens);\n        if (tweenIds.length === 0) {\n            return false;\n        }\n        // Tweens are updated in \"batches\". If you add a new tween during an\n        // update, then the new tween will be updated in the next batch.\n        // If you remove a tween during an update, it may or may not be updated.\n        // However, if the removed tween was added during the current batch,\n        // then it will not be updated.\n        while (tweenIds.length > 0) {\n            this._tweensAddedDuringUpdate = {};\n            for (var i = 0; i < tweenIds.length; i++) {\n                var tween = this._tweens[tweenIds[i]];\n                var autoStart = !preserve;\n                if (tween && tween.update(time, autoStart) === false && !preserve) {\n                    delete this._tweens[tweenIds[i]];\n                }\n            }\n            tweenIds = Object.keys(this._tweensAddedDuringUpdate);\n        }\n        return true;\n    };\n    return Group;\n}());\n\n/**\n *\n */\nvar Interpolation = {\n    Linear: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.Linear;\n        if (k < 0) {\n            return fn(v[0], v[1], f);\n        }\n        if (k > 1) {\n            return fn(v[m], v[m - 1], m - f);\n        }\n        return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n    },\n    Bezier: function (v, k) {\n        var b = 0;\n        var n = v.length - 1;\n        var pw = Math.pow;\n        var bn = Interpolation.Utils.Bernstein;\n        for (var i = 0; i <= n; i++) {\n            b += pw(1 - k, n - i) * pw(k, i) * v[i] * bn(n, i);\n        }\n        return b;\n    },\n    CatmullRom: function (v, k) {\n        var m = v.length - 1;\n        var f = m * k;\n        var i = Math.floor(f);\n        var fn = Interpolation.Utils.CatmullRom;\n        if (v[0] === v[m]) {\n            if (k < 0) {\n                i = Math.floor((f = m * (1 + k)));\n            }\n            return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n        }\n        else {\n            if (k < 0) {\n                return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n            }\n            if (k > 1) {\n                return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n            }\n            return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n        }\n    },\n    Utils: {\n        Linear: function (p0, p1, t) {\n            return (p1 - p0) * t + p0;\n        },\n        Bernstein: function (n, i) {\n            var fc = Interpolation.Utils.Factorial;\n            return fc(n) / fc(i) / fc(n - i);\n        },\n        Factorial: (function () {\n            var a = [1];\n            return function (n) {\n                var s = 1;\n                if (a[n]) {\n                    return a[n];\n                }\n                for (var i = n; i > 1; i--) {\n                    s *= i;\n                }\n                a[n] = s;\n                return s;\n            };\n        })(),\n        CatmullRom: function (p0, p1, p2, p3, t) {\n            var v0 = (p2 - p0) * 0.5;\n            var v1 = (p3 - p1) * 0.5;\n            var t2 = t * t;\n            var t3 = t * t2;\n            return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n        },\n    },\n};\n\n/**\n * Utils\n */\nvar Sequence = /** @class */ (function () {\n    function Sequence() {\n    }\n    Sequence.nextId = function () {\n        return Sequence._nextId++;\n    };\n    Sequence._nextId = 0;\n    return Sequence;\n}());\n\nvar mainGroup = new Group();\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar Tween = /** @class */ (function () {\n    function Tween(_object, _group) {\n        if (_group === void 0) { _group = mainGroup; }\n        this._object = _object;\n        this._group = _group;\n        this._isPaused = false;\n        this._pauseStart = 0;\n        this._valuesStart = {};\n        this._valuesEnd = {};\n        this._valuesStartRepeat = {};\n        this._duration = 1000;\n        this._initialRepeat = 0;\n        this._repeat = 0;\n        this._yoyo = false;\n        this._isPlaying = false;\n        this._reversed = false;\n        this._delayTime = 0;\n        this._startTime = 0;\n        this._easingFunction = Easing.Linear.None;\n        this._interpolationFunction = Interpolation.Linear;\n        this._chainedTweens = [];\n        this._onStartCallbackFired = false;\n        this._id = Sequence.nextId();\n        this._isChainStopped = false;\n        this._goToEnd = false;\n    }\n    Tween.prototype.getId = function () {\n        return this._id;\n    };\n    Tween.prototype.isPlaying = function () {\n        return this._isPlaying;\n    };\n    Tween.prototype.isPaused = function () {\n        return this._isPaused;\n    };\n    Tween.prototype.to = function (properties, duration) {\n        // TODO? restore this, then update the 07_dynamic_to example to set fox\n        // tween's to on each update. That way the behavior is opt-in (there's\n        // currently no opt-out).\n        // for (const prop in properties) this._valuesEnd[prop] = properties[prop]\n        this._valuesEnd = Object.create(properties);\n        if (duration !== undefined) {\n            this._duration = duration;\n        }\n        return this;\n    };\n    Tween.prototype.duration = function (d) {\n        this._duration = d;\n        return this;\n    };\n    Tween.prototype.start = function (time) {\n        if (this._isPlaying) {\n            return this;\n        }\n        // eslint-disable-next-line\n        this._group && this._group.add(this);\n        this._repeat = this._initialRepeat;\n        if (this._reversed) {\n            // If we were reversed (f.e. using the yoyo feature) then we need to\n            // flip the tween direction back to forward.\n            this._reversed = false;\n            for (var property in this._valuesStartRepeat) {\n                this._swapEndStartRepeatValues(property);\n                this._valuesStart[property] = this._valuesStartRepeat[property];\n            }\n        }\n        this._isPlaying = true;\n        this._isPaused = false;\n        this._onStartCallbackFired = false;\n        this._isChainStopped = false;\n        this._startTime = time !== undefined ? (typeof time === 'string' ? now$1() + parseFloat(time) : time) : now$1();\n        this._startTime += this._delayTime;\n        this._setupProperties(this._object, this._valuesStart, this._valuesEnd, this._valuesStartRepeat);\n        return this;\n    };\n    Tween.prototype._setupProperties = function (_object, _valuesStart, _valuesEnd, _valuesStartRepeat) {\n        for (var property in _valuesEnd) {\n            var startValue = _object[property];\n            var startValueIsArray = Array.isArray(startValue);\n            var propType = startValueIsArray ? 'array' : typeof startValue;\n            var isInterpolationList = !startValueIsArray && Array.isArray(_valuesEnd[property]);\n            // If `to()` specifies a property that doesn't exist in the source object,\n            // we should not set that property in the object\n            if (propType === 'undefined' || propType === 'function') {\n                continue;\n            }\n            // Check if an Array was provided as property value\n            if (isInterpolationList) {\n                var endValues = _valuesEnd[property];\n                if (endValues.length === 0) {\n                    continue;\n                }\n                // handle an array of relative values\n                endValues = endValues.map(this._handleRelativeValue.bind(this, startValue));\n                // Create a local copy of the Array with the start value at the front\n                _valuesEnd[property] = [startValue].concat(endValues);\n            }\n            // handle the deepness of the values\n            if ((propType === 'object' || startValueIsArray) && startValue && !isInterpolationList) {\n                _valuesStart[property] = startValueIsArray ? [] : {};\n                // eslint-disable-next-line\n                for (var prop in startValue) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property][prop] = startValue[prop];\n                }\n                _valuesStartRepeat[property] = startValueIsArray ? [] : {}; // TODO? repeat nested values? And yoyo? And array values?\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._setupProperties(startValue, _valuesStart[property], _valuesEnd[property], _valuesStartRepeat[property]);\n            }\n            else {\n                // Save the starting value, but only once.\n                if (typeof _valuesStart[property] === 'undefined') {\n                    _valuesStart[property] = startValue;\n                }\n                if (!startValueIsArray) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStart[property] *= 1.0; // Ensures we're using numbers, not strings\n                }\n                if (isInterpolationList) {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _valuesStartRepeat[property] = _valuesEnd[property].slice().reverse();\n                }\n                else {\n                    _valuesStartRepeat[property] = _valuesStart[property] || 0;\n                }\n            }\n        }\n    };\n    Tween.prototype.stop = function () {\n        if (!this._isChainStopped) {\n            this._isChainStopped = true;\n            this.stopChainedTweens();\n        }\n        if (!this._isPlaying) {\n            return this;\n        }\n        // eslint-disable-next-line\n        this._group && this._group.remove(this);\n        this._isPlaying = false;\n        this._isPaused = false;\n        if (this._onStopCallback) {\n            this._onStopCallback(this._object);\n        }\n        return this;\n    };\n    Tween.prototype.end = function () {\n        this._goToEnd = true;\n        this.update(Infinity);\n        return this;\n    };\n    Tween.prototype.pause = function (time) {\n        if (time === void 0) { time = now$1(); }\n        if (this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = true;\n        this._pauseStart = time;\n        // eslint-disable-next-line\n        this._group && this._group.remove(this);\n        return this;\n    };\n    Tween.prototype.resume = function (time) {\n        if (time === void 0) { time = now$1(); }\n        if (!this._isPaused || !this._isPlaying) {\n            return this;\n        }\n        this._isPaused = false;\n        this._startTime += time - this._pauseStart;\n        this._pauseStart = 0;\n        // eslint-disable-next-line\n        this._group && this._group.add(this);\n        return this;\n    };\n    Tween.prototype.stopChainedTweens = function () {\n        for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n            this._chainedTweens[i].stop();\n        }\n        return this;\n    };\n    Tween.prototype.group = function (group) {\n        this._group = group;\n        return this;\n    };\n    Tween.prototype.delay = function (amount) {\n        this._delayTime = amount;\n        return this;\n    };\n    Tween.prototype.repeat = function (times) {\n        this._initialRepeat = times;\n        this._repeat = times;\n        return this;\n    };\n    Tween.prototype.repeatDelay = function (amount) {\n        this._repeatDelayTime = amount;\n        return this;\n    };\n    Tween.prototype.yoyo = function (yoyo) {\n        this._yoyo = yoyo;\n        return this;\n    };\n    Tween.prototype.easing = function (easingFunction) {\n        this._easingFunction = easingFunction;\n        return this;\n    };\n    Tween.prototype.interpolation = function (interpolationFunction) {\n        this._interpolationFunction = interpolationFunction;\n        return this;\n    };\n    Tween.prototype.chain = function () {\n        var tweens = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tweens[_i] = arguments[_i];\n        }\n        this._chainedTweens = tweens;\n        return this;\n    };\n    Tween.prototype.onStart = function (callback) {\n        this._onStartCallback = callback;\n        return this;\n    };\n    Tween.prototype.onUpdate = function (callback) {\n        this._onUpdateCallback = callback;\n        return this;\n    };\n    Tween.prototype.onRepeat = function (callback) {\n        this._onRepeatCallback = callback;\n        return this;\n    };\n    Tween.prototype.onComplete = function (callback) {\n        this._onCompleteCallback = callback;\n        return this;\n    };\n    Tween.prototype.onStop = function (callback) {\n        this._onStopCallback = callback;\n        return this;\n    };\n    /**\n     * @returns true if the tween is still playing after the update, false\n     * otherwise (calling update on a paused tween still returns true because\n     * it is still playing, just paused).\n     */\n    Tween.prototype.update = function (time, autoStart) {\n        if (time === void 0) { time = now$1(); }\n        if (autoStart === void 0) { autoStart = true; }\n        if (this._isPaused)\n            return true;\n        var property;\n        var elapsed;\n        var endTime = this._startTime + this._duration;\n        if (!this._goToEnd && !this._isPlaying) {\n            if (time > endTime)\n                return false;\n            if (autoStart)\n                this.start(time);\n        }\n        this._goToEnd = false;\n        if (time < this._startTime) {\n            return true;\n        }\n        if (this._onStartCallbackFired === false) {\n            if (this._onStartCallback) {\n                this._onStartCallback(this._object);\n            }\n            this._onStartCallbackFired = true;\n        }\n        elapsed = (time - this._startTime) / this._duration;\n        elapsed = this._duration === 0 || elapsed > 1 ? 1 : elapsed;\n        var value = this._easingFunction(elapsed);\n        // properties transformations\n        this._updateProperties(this._object, this._valuesStart, this._valuesEnd, value);\n        if (this._onUpdateCallback) {\n            this._onUpdateCallback(this._object, elapsed);\n        }\n        if (elapsed === 1) {\n            if (this._repeat > 0) {\n                if (isFinite(this._repeat)) {\n                    this._repeat--;\n                }\n                // Reassign starting values, restart by making startTime = now\n                for (property in this._valuesStartRepeat) {\n                    if (!this._yoyo && typeof this._valuesEnd[property] === 'string') {\n                        this._valuesStartRepeat[property] =\n                            // eslint-disable-next-line\n                            // @ts-ignore FIXME?\n                            this._valuesStartRepeat[property] + parseFloat(this._valuesEnd[property]);\n                    }\n                    if (this._yoyo) {\n                        this._swapEndStartRepeatValues(property);\n                    }\n                    this._valuesStart[property] = this._valuesStartRepeat[property];\n                }\n                if (this._yoyo) {\n                    this._reversed = !this._reversed;\n                }\n                if (this._repeatDelayTime !== undefined) {\n                    this._startTime = time + this._repeatDelayTime;\n                }\n                else {\n                    this._startTime = time + this._delayTime;\n                }\n                if (this._onRepeatCallback) {\n                    this._onRepeatCallback(this._object);\n                }\n                return true;\n            }\n            else {\n                if (this._onCompleteCallback) {\n                    this._onCompleteCallback(this._object);\n                }\n                for (var i = 0, numChainedTweens = this._chainedTweens.length; i < numChainedTweens; i++) {\n                    // Make the chained tweens start exactly at the time they should,\n                    // even if the `update()` method was called way past the duration of the tween\n                    this._chainedTweens[i].start(this._startTime + this._duration);\n                }\n                this._isPlaying = false;\n                return false;\n            }\n        }\n        return true;\n    };\n    Tween.prototype._updateProperties = function (_object, _valuesStart, _valuesEnd, value) {\n        for (var property in _valuesEnd) {\n            // Don't update properties that do not exist in the source object\n            if (_valuesStart[property] === undefined) {\n                continue;\n            }\n            var start = _valuesStart[property] || 0;\n            var end = _valuesEnd[property];\n            var startIsArray = Array.isArray(_object[property]);\n            var endIsArray = Array.isArray(end);\n            var isInterpolationList = !startIsArray && endIsArray;\n            if (isInterpolationList) {\n                _object[property] = this._interpolationFunction(end, value);\n            }\n            else if (typeof end === 'object' && end) {\n                // eslint-disable-next-line\n                // @ts-ignore FIXME?\n                this._updateProperties(_object[property], start, end, value);\n            }\n            else {\n                // Parses relative end values with start as base (e.g.: +10, -3)\n                end = this._handleRelativeValue(start, end);\n                // Protect against non numeric properties.\n                if (typeof end === 'number') {\n                    // eslint-disable-next-line\n                    // @ts-ignore FIXME?\n                    _object[property] = start + (end - start) * value;\n                }\n            }\n        }\n    };\n    Tween.prototype._handleRelativeValue = function (start, end) {\n        if (typeof end !== 'string') {\n            return end;\n        }\n        if (end.charAt(0) === '+' || end.charAt(0) === '-') {\n            return start + parseFloat(end);\n        }\n        else {\n            return parseFloat(end);\n        }\n    };\n    Tween.prototype._swapEndStartRepeatValues = function (property) {\n        var tmp = this._valuesStartRepeat[property];\n        var endValue = this._valuesEnd[property];\n        if (typeof endValue === 'string') {\n            this._valuesStartRepeat[property] = this._valuesStartRepeat[property] + parseFloat(endValue);\n        }\n        else {\n            this._valuesStartRepeat[property] = this._valuesEnd[property];\n        }\n        this._valuesEnd[property] = tmp;\n    };\n    return Tween;\n}());\n\nvar VERSION = '18.6.4';\n\n/**\n * Tween.js - Licensed under the MIT license\n * https://github.com/tweenjs/tween.js\n * ----------------------------------------------\n *\n * See https://github.com/tweenjs/tween.js/graphs/contributors for the full list of contributors.\n * Thank you all, you're awesome!\n */\nvar nextId = Sequence.nextId;\n/**\n * Controlling groups of tweens\n *\n * Using the TWEEN singleton to manage your tweens can cause issues in large apps with many components.\n * In these cases, you may want to create your own smaller groups of tweens.\n */\nvar TWEEN = mainGroup;\n// This is the best way to export things in a way that's compatible with both ES\n// Modules and CommonJS, without build hacks, and so as not to break the\n// existing API.\n// https://github.com/rollup/rollup/issues/1961#issuecomment-423037881\nvar getAll = TWEEN.getAll.bind(TWEEN);\nvar removeAll = TWEEN.removeAll.bind(TWEEN);\nvar add = TWEEN.add.bind(TWEEN);\nvar remove = TWEEN.remove.bind(TWEEN);\nvar update = TWEEN.update.bind(TWEEN);\nvar exports = {\n    Easing: Easing,\n    Group: Group,\n    Interpolation: Interpolation,\n    now: now$1,\n    Sequence: Sequence,\n    nextId: nextId,\n    Tween: Tween,\n    VERSION: VERSION,\n    getAll: getAll,\n    removeAll: removeAll,\n    add: add,\n    remove: remove,\n    update: update,\n};\n\nexport default exports;\nexport { Easing, Group, Interpolation, Sequence, Tween, VERSION, add, getAll, nextId, now$1 as now, remove, removeAll, update };\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=\"undefined\"!=typeof globalThis?globalThis:t||self).turf={})}(this,(function(t){\"use strict\";function e(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=Array(e);n<e;n++)r[n]=t[n];return r}function n(t){if(Array.isArray(t))return t}function r(t,e,n){return e=l(e),function(t,e){if(e&&(\"object\"==typeof e||\"function\"==typeof e))return e;if(void 0!==e)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t)}(t,c()?Reflect.construct(e,n||[],l(t).constructor):e.apply(t,n))}function i(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,y(r.key),r)}}function s(t,e,n){return e&&o(t.prototype,e),n&&o(t,n),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function a(t,e){var n=\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(!n){if(Array.isArray(t)||(n=_(t))||e){n&&(t=n);var r=0,i=function(){};return{s:i,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,s=!0,a=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return s=t.done,t},e:function(t){a=!0,o=t},f:function(){try{s||null==n.return||n.return()}finally{if(a)throw o}}}}function u(t,e,n){return(e=y(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},l(t)}function h(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,\"prototype\",{writable:!1}),e&&p(t,e)}function c(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(c=function(){return!!t})()}function f(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}function g(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}function p(t,e){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},p(t,e)}function v(t,e){return n(t)||function(t,e){var n=null==t?null:\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(null!=n){var r,i,o,s,a=[],u=!0,l=!1;try{if(o=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=o.call(n)).done)&&(a.push(r.value),a.length!==e);u=!0);}catch(t){l=!0,i=t}finally{try{if(!u&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(l)throw i}}return a}}(t,e)||_(t,e)||g()}function d(t){return function(t){if(Array.isArray(t))return e(t)}(t)||f(t)||_(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function y(t){var e=function(t,e){if(\"object\"!=typeof t||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,e||\"default\");if(\"object\"!=typeof r)return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===e?String:Number)(t)}(t,\"string\");return\"symbol\"==typeof e?e:e+\"\"}function m(t){return m=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},m(t)}function _(t,n){if(t){if(\"string\"==typeof t)return e(t,n);var r={}.toString.call(t).slice(8,-1);return\"Object\"===r&&t.constructor&&(r=t.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(t):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}var x=6371008.8,E={centimeters:100*x,centimetres:100*x,degrees:360/(2*Math.PI),feet:3.28084*x,inches:39.37*x,kilometers:x/1e3,kilometres:x/1e3,meters:x,metres:x,miles:x/1609.344,millimeters:1e3*x,millimetres:1e3*x,nauticalmiles:x/1852,radians:1,yards:1.0936*x},k={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,nauticalmiles:2.9155334959812285e-7,millimeters:1e6,millimetres:1e6,yards:1.195990046};function b(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r={type:\"Feature\"};return(0===n.id||n.id)&&(r.id=n.id),n.bbox&&(r.bbox=n.bbox),r.properties=e||{},r.geometry=t,r}function w(t,e){switch(t){case\"Point\":return I(e).geometry;case\"LineString\":return L(e).geometry;case\"Polygon\":return S(e).geometry;case\"MultiPoint\":return O(e).geometry;case\"MultiLineString\":return T(e).geometry;case\"MultiPolygon\":return R(e).geometry;default:throw new Error(t+\" is invalid\")}}function I(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t)throw new Error(\"coordinates is required\");if(!Array.isArray(t))throw new Error(\"coordinates must be an Array\");if(t.length<2)throw new Error(\"coordinates must be at least 2 numbers long\");if(!U(t[0])||!U(t[1]))throw new Error(\"coordinates must contain numbers\");return b({type:\"Point\",coordinates:t},e,n)}function N(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return C(t.map((function(t){return I(t,e)})),n)}function S(t,e){var n,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},i=a(t);try{for(i.s();!(n=i.n()).done;){var o=n.value;if(o.length<4)throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");if(o[o.length-1].length!==o[0].length)throw new Error(\"First and last Position are not equivalent.\");for(var s=0;s<o[o.length-1].length;s++)if(o[o.length-1][s]!==o[0][s])throw new Error(\"First and last Position are not equivalent.\")}}catch(t){i.e(t)}finally{i.f()}return b({type:\"Polygon\",coordinates:t},e,r)}function M(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return C(t.map((function(t){return S(t,e)})),n)}function L(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(t.length<2)throw new Error(\"coordinates must be an array of two or more positions\");return b({type:\"LineString\",coordinates:t},e,n)}function P(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return C(t.map((function(t){return L(t,e)})),n)}function C(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={type:\"FeatureCollection\"};return e.id&&(n.id=e.id),e.bbox&&(n.bbox=e.bbox),n.features=t,n}function T(t,e){return b({type:\"MultiLineString\",coordinates:t},e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}function O(t,e){return b({type:\"MultiPoint\",coordinates:t},e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}function R(t,e){return b({type:\"MultiPolygon\",coordinates:t},e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}function A(t,e){return b({type:\"GeometryCollection\",geometries:t},e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}function D(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;if(e&&!(e>=0))throw new Error(\"precision must be a positive number\");var n=Math.pow(10,e||0);return Math.round(t*n)/n}function F(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"kilometers\",n=E[e];if(!n)throw new Error(e+\" units is invalid\");return t*n}function q(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"kilometers\",n=E[e];if(!n)throw new Error(e+\" units is invalid\");return t/n}function V(t,e){return Y(q(t,e))}function G(t){var e=t%360;return e<0&&(e+=360),e}function B(t){return(t%=360)>180?t-360:t<-180?t+360:t}function Y(t){return 180*(t%(2*Math.PI))/Math.PI}function z(t){return t%360*Math.PI/180}function j(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"kilometers\",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"kilometers\";if(!(t>=0))throw new Error(\"length must be a positive number\");return F(q(t,e),n)}function X(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"meters\",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"kilometers\";if(!(t>=0))throw new Error(\"area must be a positive number\");var r=k[e];if(!r)throw new Error(\"invalid original units\");var i=k[n];if(!i)throw new Error(\"invalid final units\");return t/r*i}function U(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function Z(t){return null!==t&&\"object\"===m(t)&&!Array.isArray(t)}function H(t){if(!t)throw new Error(\"bbox is required\");if(!Array.isArray(t))throw new Error(\"bbox must be an Array\");if(4!==t.length&&6!==t.length)throw new Error(\"bbox must be an Array of 4 or 6 numbers\");t.forEach((function(t){if(!U(t))throw new Error(\"bbox must only contain numbers\")}))}function W(t){if(!t)throw new Error(\"id is required\");if(-1===[\"string\",\"number\"].indexOf(m(t)))throw new Error(\"id must be a number or a string\")}var J=Object.freeze({__proto__:null,areaFactors:k,azimuthToBearing:B,bearingToAzimuth:G,convertArea:X,convertLength:j,degreesToRadians:z,earthRadius:x,factors:E,feature:b,featureCollection:C,geometry:w,geometryCollection:A,isNumber:U,isObject:Z,lengthToDegrees:V,lengthToRadians:q,lineString:L,lineStrings:P,multiLineString:T,multiPoint:O,multiPolygon:R,point:I,points:N,polygon:S,polygons:M,radiansToDegrees:Y,radiansToLength:F,round:D,validateBBox:H,validateId:W});function K(t){if(!t)throw new Error(\"coord is required\");if(!Array.isArray(t)){if(\"Feature\"===t.type&&null!==t.geometry&&\"Point\"===t.geometry.type)return d(t.geometry.coordinates);if(\"Point\"===t.type)return d(t.coordinates)}if(Array.isArray(t)&&t.length>=2&&!Array.isArray(t[0])&&!Array.isArray(t[1]))return d(t);throw new Error(\"coord must be GeoJSON Point or an Array of numbers\")}function Q(t){if(Array.isArray(t))return t;if(\"Feature\"===t.type){if(null!==t.geometry)return t.geometry.coordinates}else if(t.coordinates)return t.coordinates;throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\")}function $(t){if(t.length>1&&U(t[0])&&U(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return $(t[0]);throw new Error(\"coordinates must only contain numbers\")}function tt(t,e,n){if(!e||!n)throw new Error(\"type and name required\");if(!t||t.type!==e)throw new Error(\"Invalid input to \"+n+\": must be a \"+e+\", given \"+t.type)}function et(t,e,n){if(!t)throw new Error(\"No feature passed\");if(!n)throw new Error(\".featureOf() requires a name\");if(!t||\"Feature\"!==t.type||!t.geometry)throw new Error(\"Invalid input to \"+n+\", Feature with geometry required\");if(!t.geometry||t.geometry.type!==e)throw new Error(\"Invalid input to \"+n+\": must be a \"+e+\", given \"+t.geometry.type)}function nt(t,e,n){if(!t)throw new Error(\"No featureCollection passed\");if(!n)throw new Error(\".collectionOf() requires a name\");if(!t||\"FeatureCollection\"!==t.type)throw new Error(\"Invalid input to \"+n+\", FeatureCollection required\");var r,i=a(t.features);try{for(i.s();!(r=i.n()).done;){var o=r.value;if(!o||\"Feature\"!==o.type||!o.geometry)throw new Error(\"Invalid input to \"+n+\", Feature with geometry required\");if(!o.geometry||o.geometry.type!==e)throw new Error(\"Invalid input to \"+n+\": must be a \"+e+\", given \"+o.geometry.type)}}catch(t){i.e(t)}finally{i.f()}}function rt(t){return\"Feature\"===t.type?t.geometry:t}function it(t,e){return\"FeatureCollection\"===t.type?\"FeatureCollection\":\"GeometryCollection\"===t.type?\"GeometryCollection\":\"Feature\"===t.type&&null!==t.geometry?t.geometry.type:t.type}var ot=Object.freeze({__proto__:null,collectionOf:nt,containsNumber:$,featureOf:et,geojsonType:tt,getCoord:K,getCoords:Q,getGeom:rt,getType:it});function st(t,e){if(!0===(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).final)return function(t,e){var n=st(e,t);return n=(n+180)%360}(t,e);var n=K(t),r=K(e),i=z(n[0]),o=z(r[0]),s=z(n[1]),a=z(r[1]),u=Math.sin(o-i)*Math.cos(a),l=Math.cos(s)*Math.sin(a)-Math.sin(s)*Math.cos(a)*Math.cos(o-i);return Y(Math.atan2(u,l))}function at(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=K(t),o=z(i[0]),s=z(i[1]),a=z(n),u=q(e,r.units),l=Math.asin(Math.sin(s)*Math.cos(u)+Math.cos(s)*Math.sin(u)*Math.cos(a));return I([Y(o+Math.atan2(Math.sin(a)*Math.sin(u)*Math.cos(s),Math.cos(u)-Math.sin(s)*Math.sin(l))),Y(l)],r.properties)}function ut(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=K(t),i=K(e),o=z(i[1]-r[1]),s=z(i[0]-r[0]),a=z(r[1]),u=z(i[1]),l=Math.pow(Math.sin(o/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(a)*Math.cos(u);return F(2*Math.atan2(Math.sqrt(l),Math.sqrt(1-l)),n.units)}function lt(t,e){var n;return(n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).final?ht(K(e),K(t)):ht(K(t),K(e)))>180?-(360-n):n}function ht(t,e){var n=z(t[1]),r=z(e[1]),i=z(e[0]-t[0]);i>Math.PI&&(i-=2*Math.PI),i<-Math.PI&&(i+=2*Math.PI);var o=Math.log(Math.tan(r/2+Math.PI/4)/Math.tan(n/2+Math.PI/4));return(Y(Math.atan2(i,o))+360)%360}function ct(t,e,n){if(null!==t)for(var r,i,o,s,a,u,l,h,c=0,f=0,g=t.type,p=\"FeatureCollection\"===g,v=\"Feature\"===g,d=p?t.features.length:1,y=0;y<d;y++){a=(h=!!(l=p?t.features[y].geometry:v?t.geometry:t)&&\"GeometryCollection\"===l.type)?l.geometries.length:1;for(var m=0;m<a;m++){var _=0,x=0;if(null!==(s=h?l.geometries[m]:l)){u=s.coordinates;var E=s.type;switch(c=!n||\"Polygon\"!==E&&\"MultiPolygon\"!==E?0:1,E){case null:break;case\"Point\":if(!1===e(u,f,y,_,x))return!1;f++,_++;break;case\"LineString\":case\"MultiPoint\":for(r=0;r<u.length;r++){if(!1===e(u[r],f,y,_,x))return!1;f++,\"MultiPoint\"===E&&_++}\"LineString\"===E&&_++;break;case\"Polygon\":case\"MultiLineString\":for(r=0;r<u.length;r++){for(i=0;i<u[r].length-c;i++){if(!1===e(u[r][i],f,y,_,x))return!1;f++}\"MultiLineString\"===E&&_++,\"Polygon\"===E&&x++}\"Polygon\"===E&&_++;break;case\"MultiPolygon\":for(r=0;r<u.length;r++){for(x=0,i=0;i<u[r].length;i++){for(o=0;o<u[r][i].length-c;o++){if(!1===e(u[r][i][o],f,y,_,x))return!1;f++}x++}_++}break;case\"GeometryCollection\":for(r=0;r<s.geometries.length;r++)if(!1===ct(s.geometries[r],e,n))return!1;break;default:throw new Error(\"Unknown Geometry Type\")}}}}}function ft(t,e,n,r){var i=n;return ct(t,(function(t,r,o,s,a){i=0===r&&void 0===n?t:e(i,t,r,o,s,a)}),r),i}function gt(t,e){var n;switch(t.type){case\"FeatureCollection\":for(n=0;n<t.features.length&&!1!==e(t.features[n].properties,n);n++);break;case\"Feature\":e(t.properties,0)}}function pt(t,e,n){var r=n;return gt(t,(function(t,i){r=0===i&&void 0===n?t:e(r,t,i)})),r}function vt(t,e){if(\"Feature\"===t.type)e(t,0);else if(\"FeatureCollection\"===t.type)for(var n=0;n<t.features.length&&!1!==e(t.features[n],n);n++);}function dt(t,e,n){var r=n;return vt(t,(function(t,i){r=0===i&&void 0===n?t:e(r,t,i)})),r}function yt(t){var e=[];return ct(t,(function(t){e.push(t)})),e}function mt(t,e){var n,r,i,o,s,a,u,l,h,c,f=0,g=\"FeatureCollection\"===t.type,p=\"Feature\"===t.type,v=g?t.features.length:1;for(n=0;n<v;n++){for(a=g?t.features[n].geometry:p?t.geometry:t,l=g?t.features[n].properties:p?t.properties:{},h=g?t.features[n].bbox:p?t.bbox:void 0,c=g?t.features[n].id:p?t.id:void 0,s=(u=!!a&&\"GeometryCollection\"===a.type)?a.geometries.length:1,i=0;i<s;i++)if(null!==(o=u?a.geometries[i]:a))switch(o.type){case\"Point\":case\"LineString\":case\"MultiPoint\":case\"Polygon\":case\"MultiLineString\":case\"MultiPolygon\":if(!1===e(o,f,l,h,c))return!1;break;case\"GeometryCollection\":for(r=0;r<o.geometries.length;r++)if(!1===e(o.geometries[r],f,l,h,c))return!1;break;default:throw new Error(\"Unknown Geometry Type\")}else if(!1===e(null,f,l,h,c))return!1;f++}}function _t(t,e,n){var r=n;return mt(t,(function(t,i,o,s,a){r=0===i&&void 0===n?t:e(r,t,i,o,s,a)})),r}function xt(t,e){mt(t,(function(t,n,r,i,o){var s,a=null===t?null:t.type;switch(a){case null:case\"Point\":case\"LineString\":case\"Polygon\":return!1!==e(b(t,r,{bbox:i,id:o}),n,0)&&void 0}switch(a){case\"MultiPoint\":s=\"Point\";break;case\"MultiLineString\":s=\"LineString\";break;case\"MultiPolygon\":s=\"Polygon\"}for(var u=0;u<t.coordinates.length;u++){var l=t.coordinates[u];if(!1===e(b({type:s,coordinates:l},r),n,u))return!1}}))}function Et(t,e,n){var r=n;return xt(t,(function(t,i,o){r=0===i&&0===o&&void 0===n?t:e(r,t,i,o)})),r}function kt(t,e){xt(t,(function(t,n,r){var i=0;if(t.geometry){var o=t.geometry.type;if(\"Point\"!==o&&\"MultiPoint\"!==o){var s,a=0,u=0,l=0;return!1!==ct(t,(function(o,h,c,f,g){if(void 0===s||n>a||f>u||g>l)return s=o,a=n,u=f,l=g,void(i=0);var p=L([s,o],t.properties);if(!1===e(p,n,r,g,i))return!1;i++,s=o}))&&void 0}}}))}function bt(t,e,n){var r=n,i=!1;return kt(t,(function(t,o,s,a,u){r=!1===i&&void 0===n?t:e(r,t,o,s,a,u),i=!0})),r}function wt(t,e){if(!t)throw new Error(\"geojson is required\");xt(t,(function(t,n,r){if(null!==t.geometry){var i=t.geometry.type,o=t.geometry.coordinates;switch(i){case\"LineString\":if(!1===e(t,n,r,0,0))return!1;break;case\"Polygon\":for(var s=0;s<o.length;s++)if(!1===e(L(o[s],t.properties),n,r,s))return!1}}}))}function It(t,e,n){var r=n;return wt(t,(function(t,i,o,s){r=0===i&&void 0===n?t:e(r,t,i,o,s)})),r}function Nt(t,e){if(!Z(e=e||{}))throw new Error(\"options is invalid\");var n,r=e.featureIndex||0,i=e.multiFeatureIndex||0,o=e.geometryIndex||0,s=e.segmentIndex||0,a=e.properties;switch(t.type){case\"FeatureCollection\":r<0&&(r=t.features.length+r),a=a||t.features[r].properties,n=t.features[r].geometry;break;case\"Feature\":a=a||t.properties,n=t.geometry;break;case\"Point\":case\"MultiPoint\":return null;case\"LineString\":case\"Polygon\":case\"MultiLineString\":case\"MultiPolygon\":n=t;break;default:throw new Error(\"geojson is invalid\")}if(null===n)return null;var u=n.coordinates;switch(n.type){case\"Point\":case\"MultiPoint\":return null;case\"LineString\":return s<0&&(s=u.length+s-1),L([u[s],u[s+1]],a,e);case\"Polygon\":return o<0&&(o=u.length+o),s<0&&(s=u[o].length+s-1),L([u[o][s],u[o][s+1]],a,e);case\"MultiLineString\":return i<0&&(i=u.length+i),s<0&&(s=u[i].length+s-1),L([u[i][s],u[i][s+1]],a,e);case\"MultiPolygon\":return i<0&&(i=u.length+i),o<0&&(o=u[i].length+o),s<0&&(s=u[i][o].length-s-1),L([u[i][o][s],u[i][o][s+1]],a,e)}throw new Error(\"geojson is invalid\")}function St(t,e){if(!Z(e=e||{}))throw new Error(\"options is invalid\");var n,r=e.featureIndex||0,i=e.multiFeatureIndex||0,o=e.geometryIndex||0,s=e.coordIndex||0,a=e.properties;switch(t.type){case\"FeatureCollection\":r<0&&(r=t.features.length+r),a=a||t.features[r].properties,n=t.features[r].geometry;break;case\"Feature\":a=a||t.properties,n=t.geometry;break;case\"Point\":case\"MultiPoint\":return null;case\"LineString\":case\"Polygon\":case\"MultiLineString\":case\"MultiPolygon\":n=t;break;default:throw new Error(\"geojson is invalid\")}if(null===n)return null;var u=n.coordinates;switch(n.type){case\"Point\":return I(u,a,e);case\"MultiPoint\":return i<0&&(i=u.length+i),I(u[i],a,e);case\"LineString\":return s<0&&(s=u.length+s),I(u[s],a,e);case\"Polygon\":return o<0&&(o=u.length+o),s<0&&(s=u[o].length+s),I(u[o][s],a,e);case\"MultiLineString\":return i<0&&(i=u.length+i),s<0&&(s=u[i].length+s),I(u[i][s],a,e);case\"MultiPolygon\":return i<0&&(i=u.length+i),o<0&&(o=u[i].length+o),s<0&&(s=u[i][o].length-s),I(u[i][o][s],a,e)}throw new Error(\"geojson is invalid\")}var Mt=Object.freeze({__proto__:null,coordAll:yt,coordEach:ct,coordReduce:ft,featureEach:vt,featureReduce:dt,findPoint:St,findSegment:Nt,flattenEach:xt,flattenReduce:Et,geomEach:mt,geomReduce:_t,lineEach:wt,lineReduce:It,propEach:gt,propReduce:pt,segmentEach:kt,segmentReduce:bt});function Lt(t){return _t(t,(function(t,e){return t+function(t){var e,n=0;switch(t.type){case\"Polygon\":return Pt(t.coordinates);case\"MultiPolygon\":for(e=0;e<t.coordinates.length;e++)n+=Pt(t.coordinates[e]);return n;case\"Point\":case\"MultiPoint\":case\"LineString\":case\"MultiLineString\":return 0}return 0}(e)}),0)}function Pt(t){var e=0;if(t&&t.length>0){e+=Math.abs(Ot(t[0]));for(var n=1;n<t.length;n++)e-=Math.abs(Ot(t[n]))}return e}var Ct=x*x/2,Tt=Math.PI/180;function Ot(t){var e=t.length-1;if(e<=2)return 0;for(var n=0,r=0;r<e;){var i=t[r],o=t[r+1===e?0:r+1],s=t[r+2>=e?(r+2)%e:r+2],a=i[0]*Tt,u=o[1]*Tt;n+=(s[0]*Tt-a)*Math.sin(u),r++}return n*Ct}function Rt(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null!=t.bbox&&!0!==e.recompute)return t.bbox;var n=[1/0,1/0,-1/0,-1/0];return ct(t,(function(t){n[0]>t[0]&&(n[0]=t[0]),n[1]>t[1]&&(n[1]=t[1]),n[2]<t[0]&&(n[2]=t[0]),n[3]<t[1]&&(n[3]=t[1])})),n}function At(t,e){var n,r,i,o,s,a,u;for(r=1;r<=8;r*=2){for(n=[],o=!(Ft(i=t[t.length-1],e)&r),s=0;s<t.length;s++)(u=!(Ft(a=t[s],e)&r))!==o&&n.push(Dt(i,a,r,e)),u&&n.push(a),i=a,o=u;if(!(t=n).length)break}return n}function Dt(t,e,n,r){return 8&n?[t[0]+(e[0]-t[0])*(r[3]-t[1])/(e[1]-t[1]),r[3]]:4&n?[t[0]+(e[0]-t[0])*(r[1]-t[1])/(e[1]-t[1]),r[1]]:2&n?[r[2],t[1]+(e[1]-t[1])*(r[2]-t[0])/(e[0]-t[0])]:1&n?[r[0],t[1]+(e[1]-t[1])*(r[0]-t[0])/(e[0]-t[0])]:null}function Ft(t,e){var n=0;return t[0]<e[0]?n|=1:t[0]>e[2]&&(n|=2),t[1]<e[1]?n|=4:t[1]>e[3]&&(n|=8),n}function qt(t,e){var n,r=[],i=a(t);try{for(i.s();!(n=i.n()).done;){var o=At(n.value,e);o.length>0&&(o[0][0]===o[o.length-1][0]&&o[0][1]===o[o.length-1][1]||o.push(o[0]),o.length>=4&&r.push(o))}}catch(t){i.e(t)}finally{i.f()}return r}function Vt(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=Number(t[0]),r=Number(t[1]),i=Number(t[2]),o=Number(t[3]);if(6===t.length)throw new Error(\"@turf/bbox-polygon does not support BBox with 6 positions\");var s=[n,r];return S([[s,[i,r],[i,o],[n,o],s]],e.properties,{bbox:t,id:e.id})}var Gt=function(){return s((function t(e){i(this,t),this.points=e.points||[],this.duration=e.duration||1e4,this.sharpness=e.sharpness||.85,this.centers=[],this.controls=[],this.stepLength=e.stepLength||60,this.length=this.points.length,this.delay=0;for(var n=0;n<this.length;n++)this.points[n].z=this.points[n].z||0;for(var r=0;r<this.length-1;r++){var o=this.points[r],s=this.points[r+1];this.centers.push({x:(o.x+s.x)/2,y:(o.y+s.y)/2,z:(o.z+s.z)/2})}this.controls.push([this.points[0],this.points[0]]);for(var a=0;a<this.centers.length-1;a++){var u=this.points[a+1].x-(this.centers[a].x+this.centers[a+1].x)/2,l=this.points[a+1].y-(this.centers[a].y+this.centers[a+1].y)/2,h=this.points[a+1].z-(this.centers[a].y+this.centers[a+1].z)/2;this.controls.push([{x:(1-this.sharpness)*this.points[a+1].x+this.sharpness*(this.centers[a].x+u),y:(1-this.sharpness)*this.points[a+1].y+this.sharpness*(this.centers[a].y+l),z:(1-this.sharpness)*this.points[a+1].z+this.sharpness*(this.centers[a].z+h)},{x:(1-this.sharpness)*this.points[a+1].x+this.sharpness*(this.centers[a+1].x+u),y:(1-this.sharpness)*this.points[a+1].y+this.sharpness*(this.centers[a+1].y+l),z:(1-this.sharpness)*this.points[a+1].z+this.sharpness*(this.centers[a+1].z+h)}])}return this.controls.push([this.points[this.length-1],this.points[this.length-1]]),this.steps=this.cacheSteps(this.stepLength),this}),[{key:\"cacheSteps\",value:function(t){var e=[],n=this.pos(0);e.push(0);for(var r=0;r<this.duration;r+=10){var i=this.pos(r);Math.sqrt((i.x-n.x)*(i.x-n.x)+(i.y-n.y)*(i.y-n.y)+(i.z-n.z)*(i.z-n.z))>t&&(e.push(r),n=i)}return e}},{key:\"vector\",value:function(t){var e=this.pos(t+10),n=this.pos(t-10);return{angle:180*Math.atan2(e.y-n.y,e.x-n.x)/3.14,speed:Math.sqrt((n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y)+(n.z-e.z)*(n.z-e.z))}}},{key:\"pos\",value:function(t){var e=t-this.delay;e<0&&(e=0),e>this.duration&&(e=this.duration-1);var n=e/this.duration;if(n>=1)return this.points[this.length-1];var r=Math.floor((this.points.length-1)*n);return function(t,e,n,r,i){var o=function(t){var e=t*t,n=e*t;return[n,3*e*(1-t),3*t*(1-t)*(1-t),(1-t)*(1-t)*(1-t)]}(t),s={x:i.x*o[0]+r.x*o[1]+n.x*o[2]+e.x*o[3],y:i.y*o[0]+r.y*o[1]+n.y*o[2]+e.y*o[3],z:i.z*o[0]+r.z*o[1]+n.z*o[2]+e.z*o[3]};return s}((this.length-1)*n-r,this.points[r],this.controls[r][1],this.controls[r+1][0],this.points[r+1])}}])}();function Bt(t){for(var e,n,r=Q(t),i=0,o=1;o<r.length;)e=n||r[0],i+=((n=r[o])[0]-e[0])*(n[1]+e[1]),o++;return i>0}function Yt(t,e){for(var n=0,r=0,i=0,o=0,s=0,a=0,u=0,l=0,h=null,c=null,f=t[0],g=t[1],p=e.length;n<p;n++){r=0;var v=e[n].length-1,d=e[n];if((h=d[0])[0]!==d[v][0]&&h[1]!==d[v][1])throw new Error(\"First and last coordinates in a ring must be the same\");for(s=h[0]-f,a=h[1]-g;r<v;r++)if(l=(c=d[r+1])[1]-g,a<0&&l<0||a>0&&l>0)a=l,s=(h=c)[0]-f;else{if(u=c[0]-t[0],l>0&&a<=0){if((o=s*l-u*a)>0)i+=1;else if(0===o)return 0}else if(a>0&&l<=0){if((o=s*l-u*a)<0)i+=1;else if(0===o)return 0}else if(0===l&&a<0){if(0===(o=s*l-u*a))return 0}else if(0===a&&l<0){if(0===(o=s*l-u*a))return 0}else if(0===a&&0===l){if(u<=0&&s>=0)return 0;if(s<=0&&u>=0)return 0}h=c,a=l,s=u}}return i%2!=0}function zt(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t)throw new Error(\"point is required\");if(!e)throw new Error(\"polygon is required\");var r=K(t),i=rt(e),o=i.type,s=e.bbox,a=i.coordinates;if(s&&!1===function(t,e){return e[0]<=t[0]&&e[1]<=t[1]&&e[2]>=t[0]&&e[3]>=t[1]}(r,s))return!1;\"Polygon\"===o&&(a=[a]);for(var u=!1,l=0;l<a.length;++l){var h=Yt(r,a[l]);if(0===h)return!n.ignoreBoundary;h&&(u=!0)}return u}function jt(t,e){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=K(t),i=Q(e),o=0;o<i.length-1;o++){var s=!1;if(n.ignoreEndVertices&&(0===o&&(s=\"start\"),o===i.length-2&&(s=\"end\"),0===o&&o+1===i.length-1&&(s=\"both\")),Xt(i[o],i[o+1],r,s,void 0===n.epsilon?null:n.epsilon))return!0}return!1}function Xt(t,e,n,r,i){var o=n[0],s=n[1],a=t[0],u=t[1],l=e[0],h=e[1],c=l-a,f=h-u,g=(n[0]-a)*f-(n[1]-u)*c;if(null!==i){if(Math.abs(g)>i)return!1}else if(0!==g)return!1;return Math.abs(c)===Math.abs(f)&&0===Math.abs(c)?!r&&(n[0]===t[0]&&n[1]===t[1]):r?\"start\"===r?Math.abs(c)>=Math.abs(f)?c>0?a<o&&o<=l:l<=o&&o<a:f>0?u<s&&s<=h:h<=s&&s<u:\"end\"===r?Math.abs(c)>=Math.abs(f)?c>0?a<=o&&o<l:l<o&&o<=a:f>0?u<=s&&s<h:h<s&&s<=u:\"both\"===r&&(Math.abs(c)>=Math.abs(f)?c>0?a<o&&o<l:l<o&&o<a:f>0?u<s&&s<h:h<s&&s<u):Math.abs(c)>=Math.abs(f)?c>0?a<=o&&o<=l:l<=o&&o<=a:f>0?u<=s&&s<=h:h<=s&&s<=u}function Ut(t,e){if(\"Feature\"===t.type&&null===t.geometry)return!1;if(\"Feature\"===e.type&&null===e.geometry)return!1;if(!Zt(Rt(t),Rt(e)))return!1;var n,r=a(rt(e).coordinates);try{for(r.s();!(n=r.n()).done;){var i,o=a(n.value);try{for(o.s();!(i=o.n()).done;){if(!zt(i.value,t))return!1}}catch(t){o.e(t)}finally{o.f()}}}catch(t){r.e(t)}finally{r.f()}return!0}function Zt(t,e){return!(t[0]>e[0])&&(!(t[2]<e[2])&&(!(t[1]>e[1])&&!(t[3]<e[3])))}function Ht(t,e){return t[0]===e[0]&&t[1]===e[1]}function Wt(t,e){return[(t[0]+e[0])/2,(t[1]+e[1])/2]}var Jt=function(){return s((function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Kt;if(i(this,t),this.data=e,this.length=this.data.length,this.compare=n,this.length>0)for(var r=(this.length>>1)-1;r>=0;r--)this._down(r)}),[{key:\"push\",value:function(t){this.data.push(t),this.length++,this._up(this.length-1)}},{key:\"pop\",value:function(){if(0!==this.length){var t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}}},{key:\"peek\",value:function(){return this.data[0]}},{key:\"_up\",value:function(t){for(var e=this.data,n=this.compare,r=e[t];t>0;){var i=t-1>>1,o=e[i];if(n(r,o)>=0)break;e[t]=o,t=i}e[t]=r}},{key:\"_down\",value:function(t){for(var e=this.data,n=this.compare,r=this.length>>1,i=e[t];t<r;){var o=1+(t<<1),s=e[o],a=o+1;if(a<this.length&&n(e[a],s)<0&&(o=a,s=e[a]),n(s,i)>=0)break;e[t]=s,t=o}e[t]=i}}])}();function Kt(t,e){return t<e?-1:t>e?1:0}function Qt(t,e){return t.p.x>e.p.x?1:t.p.x<e.p.x?-1:t.p.y!==e.p.y?t.p.y>e.p.y?1:-1:1}function $t(t,e){return t.rightSweepEvent.p.x>e.rightSweepEvent.p.x?1:t.rightSweepEvent.p.x<e.rightSweepEvent.p.x?-1:t.rightSweepEvent.p.y!==e.rightSweepEvent.p.y?t.rightSweepEvent.p.y<e.rightSweepEvent.p.y?1:-1:1}var te=function(){return s((function t(e,n,r,o){i(this,t),this.p={x:e[0],y:e[1]},this.featureId=n,this.ringId=r,this.eventId=o,this.otherEvent=null,this.isLeftEndpoint=null}),[{key:\"isSamePoint\",value:function(t){return this.p.x===t.p.x&&this.p.y===t.p.y}}])}();var ee=0,ne=0,re=0;function ie(t,e){var n=\"Feature\"===t.type?t.geometry:t,r=n.coordinates;\"Polygon\"!==n.type&&\"MultiLineString\"!==n.type||(r=[r]),\"LineString\"===n.type&&(r=[[r]]);for(var i=0;i<r.length;i++)for(var o=0;o<r[i].length;o++){var s=r[i][o][0],a=null;ne+=1;for(var u=0;u<r[i][o].length-1;u++){a=r[i][o][u+1];var l=new te(s,ee,ne,re),h=new te(a,ee,ne,re+1);l.otherEvent=h,h.otherEvent=l,Qt(l,h)>0?(h.isLeftEndpoint=!0,l.isLeftEndpoint=!1):(l.isLeftEndpoint=!0,h.isLeftEndpoint=!1),e.push(l),e.push(h),s=a,re+=1}}ee+=1}var oe=s((function t(e){i(this,t),this.leftSweepEvent=e,this.rightSweepEvent=e.otherEvent}));function se(t,e){if(null===t||null===e)return!1;if(t.leftSweepEvent.ringId===e.leftSweepEvent.ringId&&(t.rightSweepEvent.isSamePoint(e.leftSweepEvent)||t.rightSweepEvent.isSamePoint(e.leftSweepEvent)||t.rightSweepEvent.isSamePoint(e.rightSweepEvent)||t.leftSweepEvent.isSamePoint(e.leftSweepEvent)||t.leftSweepEvent.isSamePoint(e.rightSweepEvent)))return!1;var n=t.leftSweepEvent.p.x,r=t.leftSweepEvent.p.y,i=t.rightSweepEvent.p.x,o=t.rightSweepEvent.p.y,s=e.leftSweepEvent.p.x,a=e.leftSweepEvent.p.y,u=e.rightSweepEvent.p.x,l=e.rightSweepEvent.p.y,h=(l-a)*(i-n)-(u-s)*(o-r),c=(u-s)*(r-a)-(l-a)*(n-s),f=(i-n)*(r-a)-(o-r)*(n-s);if(0===h)return!1;var g=c/h,p=f/h;return g>=0&&g<=1&&p>=0&&p<=1&&[n+g*(i-n),r+g*(o-r)]}var ae=function(t,e){var n=new Jt([],Qt);return function(t,e){if(\"FeatureCollection\"===t.type)for(var n=t.features,r=0;r<n.length;r++)ie(n[r],e);else ie(t,e)}(t,n),function(t,e){e=e||!1;for(var n=[],r=new Jt([],$t);t.length;){var i=t.pop();if(i.isLeftEndpoint){for(var o=new oe(i),s=0;s<r.data.length;s++){var a=r.data[s];if(!e||a.leftSweepEvent.featureId!==i.featureId){var u=se(o,a);!1!==u&&n.push(u)}}r.push(o)}else!1===i.isLeftEndpoint&&r.pop()}return n}(n,e)};function ue(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.removeDuplicates,i=void 0===r||r,o=n.ignoreSelfIntersections,s=void 0===o||o,a=[];\"FeatureCollection\"===t.type?a=a.concat(t.features):\"Feature\"===t.type?a.push(t):\"LineString\"!==t.type&&\"Polygon\"!==t.type&&\"MultiLineString\"!==t.type&&\"MultiPolygon\"!==t.type||a.push(b(t)),\"FeatureCollection\"===e.type?a=a.concat(e.features):\"Feature\"===e.type?a.push(e):\"LineString\"!==e.type&&\"Polygon\"!==e.type&&\"MultiLineString\"!==e.type&&\"MultiPolygon\"!==e.type||a.push(b(e));var u=ae(C(a),s),l=[];if(i){var h={};u.forEach((function(t){var e=t.join(\",\");h[e]||(h[e]=!0,l.push(t))}))}else l=u;return C(l.map((function(t){return I(t)})))}function le(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=rt(t);switch(e.properties||\"Feature\"!==t.type||(e.properties=t.properties),n.type){case\"Polygon\":return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=rt(t),r=n.coordinates,i=e.properties?e.properties:\"Feature\"===t.type?t.properties:{};return he(r,i)}(n,e);case\"MultiPolygon\":return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=rt(t),r=n.coordinates,i=e.properties?e.properties:\"Feature\"===t.type?t.properties:{},o=[];return r.forEach((function(t){o.push(he(t,i))})),C(o)}(n,e);default:throw new Error(\"invalid poly\")}}function he(t,e){return t.length>1?T(t,e):L(t[0],e)}function ce(t,e){var n=rt(t),r=rt(e),i=n.type,o=r.type;switch(i){case\"MultiPoint\":switch(o){case\"LineString\":return fe(n,r);case\"Polygon\":return pe(n,r);default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"LineString\":switch(o){case\"MultiPoint\":return fe(r,n);case\"LineString\":return function(t,e){if(ue(t,e).features.length>0)for(var n=0;n<t.coordinates.length-1;n++)for(var r=0;r<e.coordinates.length-1;r++){var i=!0;if(0!==r&&r!==e.coordinates.length-2||(i=!1),ve(t.coordinates[n],t.coordinates[n+1],e.coordinates[r],i))return!0}return!1}(n,r);case\"Polygon\":return ge(n,r);default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"Polygon\":switch(o){case\"MultiPoint\":return pe(r,n);case\"LineString\":return ge(r,n);default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}default:throw new Error(\"feature1 \"+i+\" geometry not supported\")}}function fe(t,e){for(var n=!1,r=!1,i=t.coordinates.length,o=0;o<i&&!n&&!r;){for(var s=0;s<e.coordinates.length-1;s++){var a=!0;0!==s&&s!==e.coordinates.length-2||(a=!1),ve(e.coordinates[s],e.coordinates[s+1],t.coordinates[o],a)?n=!0:r=!0}o++}return n&&r}function ge(t,e){return ue(t,le(e)).features.length>0}function pe(t,e){for(var n=!1,r=!1,i=t.coordinates.length,o=0;o<i&&(!n||!r);o++)zt(I(t.coordinates[o]),e)?n=!0:r=!0;return r&&n}function ve(t,e,n,r){var i=n[0]-t[0],o=n[1]-t[1],s=e[0]-t[0],a=e[1]-t[1];return 0==i*a-o*s&&(r?Math.abs(s)>=Math.abs(a)?s>0?t[0]<=n[0]&&n[0]<=e[0]:e[0]<=n[0]&&n[0]<=t[0]:a>0?t[1]<=n[1]&&n[1]<=e[1]:e[1]<=n[1]&&n[1]<=t[1]:Math.abs(s)>=Math.abs(a)?s>0?t[0]<n[0]&&n[0]<e[0]:e[0]<n[0]&&n[0]<t[0]:a>0?t[1]<n[1]&&n[1]<e[1]:e[1]<n[1]&&n[1]<t[1])}function de(t,e){var n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{ignoreSelfIntersections:!0}).ignoreSelfIntersections,r=void 0===n||n,i=!0;return xt(t,(function(t){xt(e,(function(e){if(!1===i)return!1;i=function(t,e,n){switch(t.type){case\"Point\":switch(e.type){case\"Point\":return r=t.coordinates,i=e.coordinates,!(r[0]===i[0]&&r[1]===i[1]);case\"LineString\":return!ye(e,t);case\"Polygon\":return!zt(t,e)}break;case\"LineString\":switch(e.type){case\"Point\":return!ye(t,e);case\"LineString\":return!function(t,e,n){var r=ue(t,e,{ignoreSelfIntersections:n});if(r.features.length>0)return!0;return!1}(t,e,n);case\"Polygon\":return!me(e,t,n)}break;case\"Polygon\":switch(e.type){case\"Point\":return!zt(e,t);case\"LineString\":return!me(t,e,n);case\"Polygon\":return!function(t,e,n){var r,i=a(t.coordinates[0]);try{for(i.s();!(r=i.n()).done;){if(zt(r.value,e))return!0}}catch(t){i.e(t)}finally{i.f()}var o,s=a(e.coordinates[0]);try{for(s.s();!(o=s.n()).done;){if(zt(o.value,t))return!0}}catch(t){s.e(t)}finally{s.f()}var u=ue(le(t),le(e),{ignoreSelfIntersections:n});if(u.features.length>0)return!0;return!1}(e,t,n)}}var r,i;return!1}(t.geometry,e.geometry,r)}))})),i}function ye(t,e){for(var n=0;n<t.coordinates.length-1;n++)if(_e(t.coordinates[n],t.coordinates[n+1],e.coordinates))return!0;return!1}function me(t,e,n){var r,i=a(e.coordinates);try{for(i.s();!(r=i.n()).done;){if(zt(r.value,t))return!0}}catch(t){i.e(t)}finally{i.f()}return ue(e,le(t),{ignoreSelfIntersections:n}).features.length>0}function _e(t,e,n){var r=n[0]-t[0],i=n[1]-t[1],o=e[0]-t[0],s=e[1]-t[1];return 0==r*s-i*o&&(Math.abs(o)>=Math.abs(s)?o>0?t[0]<=n[0]&&n[0]<=e[0]:e[0]<=n[0]&&n[0]<=t[0]:s>0?t[1]<=n[1]&&n[1]<=e[1]:e[1]<=n[1]&&n[1]<=t[1])}var xe=Object.defineProperty,Ee=function(t,e){return xe(t,\"name\",{value:e,configurable:!0})},ke=function(){return s((function t(e){var n,r,o;i(this,t),this.direction=!1,this.compareProperties=!0,this.precision=Math.pow(10,-(null!=(n=null==e?void 0:e.precision)?n:17)),this.direction=null!=(r=null==e?void 0:e.direction)&&r,this.compareProperties=null==(o=null==e?void 0:e.compareProperties)||o}),[{key:\"compare\",value:function(t,e){var n=this;if(t.type!==e.type)return!1;if(!we(t,e))return!1;switch(t.type){case\"Point\":return this.compareCoord(t.coordinates,e.coordinates);case\"LineString\":return this.compareLine(t.coordinates,e.coordinates);case\"Polygon\":return this.comparePolygon(t,e);case\"GeometryCollection\":return this.compareGeometryCollection(t,e);case\"Feature\":return this.compareFeature(t,e);case\"FeatureCollection\":return this.compareFeatureCollection(t,e);default:if(t.type.startsWith(\"Multi\")){var r=Ie(t),i=Ie(e);return r.every((function(t){return i.some((function(e){return n.compare(t,e)}))}))}}return!1}},{key:\"compareCoord\",value:function(t,e){var n=this;return t.length===e.length&&t.every((function(t,r){return Math.abs(t-e[r])<n.precision}))}},{key:\"compareLine\",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(!we(t,e))return!1;var i=t,o=e;if(r&&!this.compareCoord(i[0],o[0])){var s=this.fixStartIndex(o,i);if(!s)return!1;o=s}var a=this.compareCoord(i[n],o[n]);return this.direction||a?this.comparePath(i,o):!!this.compareCoord(i[n],o[o.length-(1+n)])&&this.comparePath(i.slice().reverse(),o)}},{key:\"fixStartIndex\",value:function(t,e){for(var n,r=-1,i=0;i<t.length;i++)if(this.compareCoord(t[i],e[0])){r=i;break}return r>=0&&(n=[].concat(t.slice(r,t.length),t.slice(1,r+1))),n}},{key:\"comparePath\",value:function(t,e){var n=this;return t.every((function(t,r){return n.compareCoord(t,e[r])}))}},{key:\"comparePolygon\",value:function(t,e){var n=this;if(this.compareLine(t.coordinates[0],e.coordinates[0],1,!0)){var r=t.coordinates.slice(1,t.coordinates.length),i=e.coordinates.slice(1,e.coordinates.length);return r.every((function(t){return i.some((function(e){return n.compareLine(t,e,1,!0)}))}))}return!1}},{key:\"compareGeometryCollection\",value:function(t,e){var n=this;return we(t.geometries,e.geometries)&&this.compareBBox(t,e)&&t.geometries.every((function(t,r){return n.compare(t,e.geometries[r])}))}},{key:\"compareFeature\",value:function(t,e){return t.id===e.id&&(!this.compareProperties||Se(t.properties,e.properties))&&this.compareBBox(t,e)&&this.compare(t.geometry,e.geometry)}},{key:\"compareFeatureCollection\",value:function(t,e){var n=this;return we(t.features,e.features)&&this.compareBBox(t,e)&&t.features.every((function(t,r){return n.compare(t,e.features[r])}))}},{key:\"compareBBox\",value:function(t,e){return Boolean(!t.bbox&&!e.bbox)||!(!t.bbox||!e.bbox)&&this.compareCoord(t.bbox,e.bbox)}}])}();Ee(ke,\"GeojsonEquality\");var be=ke;function we(t,e){return t.coordinates?t.coordinates.length===e.coordinates.length:t.length===e.length}function Ie(t){return t.coordinates.map((function(e){return{type:t.type.replace(\"Multi\",\"\"),coordinates:e}}))}function Ne(t,e,n){return new be(n).compare(t,e)}function Se(t,e){if(null===t&&null===e)return!0;if(null===t||null===e)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(var i=0,o=n;i<o.length;i++){var s=o[i],a=t[s],u=e[s],l=Me(a)&&Me(u);if(l&&!Se(a,u)||!l&&a!==u)return!1}return!0}Ee(we,\"sameLength\"),Ee(Ie,\"explode\"),Ee(Ne,\"geojsonEquality\"),Ee(Se,\"equal\");var Me=Ee((function(t){return null!=t&&\"object\"===m(t)}),\"isObject\");function Le(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=\"object\"===m(e)?e.mutate:e;if(!t)throw new Error(\"geojson is required\");var r=it(t),i=[];switch(r){case\"LineString\":i=Pe(t,r);break;case\"MultiLineString\":case\"Polygon\":Q(t).forEach((function(t){i.push(Pe(t,r))}));break;case\"MultiPolygon\":Q(t).forEach((function(t){var e=[];t.forEach((function(t){e.push(Pe(t,r))})),i.push(e)}));break;case\"Point\":return t;case\"MultiPoint\":var o={};Q(t).forEach((function(t){var e=t.join(\"-\");Object.prototype.hasOwnProperty.call(o,e)||(i.push(t),o[e]=!0)}));break;default:throw new Error(r+\" geometry not supported\")}return t.coordinates?!0===n?(t.coordinates=i,t):{type:r,coordinates:i}:!0===n?(t.geometry.coordinates=i,t):b({type:r,coordinates:i},t.properties,{bbox:t.bbox,id:t.id})}function Pe(t,e){var n=Q(t);if(2===n.length&&!Ce(n[0],n[1]))return n;var r=[],i=n.length-1,o=r.length;r.push(n[0]);for(var s=1;s<i;s++){var a=r[r.length-1];n[s][0]===a[0]&&n[s][1]===a[1]||(r.push(n[s]),(o=r.length)>2&&Te(r[o-3],r[o-1],r[o-2])&&r.splice(r.length-2,1))}if(r.push(n[n.length-1]),o=r.length,(\"Polygon\"===e||\"MultiPolygon\"===e)&&Ce(n[0],n[n.length-1])&&o<4)throw new Error(\"invalid polygon\");return\"LineString\"===e&&o<3||Te(r[o-3],r[o-1],r[o-2])&&r.splice(r.length-2,1),r}function Ce(t,e){return t[0]===e[0]&&t[1]===e[1]}function Te(t,e,n){var r=n[0],i=n[1],o=t[0],s=t[1],a=e[0],u=e[1],l=a-o,h=u-s;return 0===(r-o)*h-(i-s)*l&&(Math.abs(l)>=Math.abs(h)?l>0?o<=r&&r<=a:a<=r&&r<=o:h>0?s<=i&&i<=u:u<=i&&i<=s)}function Oe(t,e){var n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).ignoreSelfIntersections,r=void 0===n||n,i=!1;return xt(t,(function(t){xt(e,(function(e){if(!0===i)return!0;i=!de(t.geometry,e.geometry,{ignoreSelfIntersections:r})}))})),i}function Re(t,e,n,r,i){Ae(t,e,n||0,r||t.length-1,i||Fe)}function Ae(t,e,n,r,i){for(;r>n;){if(r-n>600){var o=r-n+1,s=e-n+1,a=Math.log(o),u=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*u*(o-u)/o)*(s-o/2<0?-1:1);Ae(t,e,Math.max(n,Math.floor(e-s*u/o+l)),Math.min(r,Math.floor(e+(o-s)*u/o+l)),i)}var h=t[e],c=n,f=r;for(De(t,n,e),i(t[r],h)>0&&De(t,n,r);c<f;){for(De(t,c,f),c++,f--;i(t[c],h)<0;)c++;for(;i(t[f],h)>0;)f--}0===i(t[n],h)?De(t,n,f):De(t,++f,r),f<=e&&(n=f+1),e<=f&&(r=f-1)}}function De(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function Fe(t,e){return t<e?-1:t>e?1:0}var qe=function(){return s((function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:9;i(this,t),this._maxEntries=Math.max(4,e),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}),[{key:\"all\",value:function(){return this._all(this.data,[])}},{key:\"search\",value:function(t){var e=this.data,n=[];if(!He(t,e))return n;for(var r=this.toBBox,i=[];e;){for(var o=0;o<e.children.length;o++){var s=e.children[o],a=e.leaf?r(s):s;He(t,a)&&(e.leaf?n.push(s):Ze(t,a)?this._all(s,n):i.push(s))}e=i.pop()}return n}},{key:\"collides\",value:function(t){var e=this.data;if(!He(t,e))return!1;for(var n=[];e;){for(var r=0;r<e.children.length;r++){var i=e.children[r],o=e.leaf?this.toBBox(i):i;if(He(t,o)){if(e.leaf||Ze(t,o))return!0;n.push(i)}}e=n.pop()}return!1}},{key:\"load\",value:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0;e<t.length;e++)this.insert(t[e]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this}},{key:\"insert\",value:function(t){return t&&this._insert(t,this.data.height-1),this}},{key:\"clear\",value:function(){return this.data=We([]),this}},{key:\"remove\",value:function(t,e){if(!t)return this;for(var n,r,i,o=this.data,s=this.toBBox(t),a=[],u=[];o||a.length;){if(o||(o=a.pop(),r=a[a.length-1],n=u.pop(),i=!0),o.leaf){var l=Ve(t,o.children,e);if(-1!==l)return o.children.splice(l,1),a.push(o),this._condense(a),this}i||o.leaf||!Ze(o,s)?r?(n++,o=r.children[n],i=!1):o=null:(a.push(o),u.push(n),n=0,r=o,o=o.children[0])}return this}},{key:\"toBBox\",value:function(t){return t}},{key:\"compareMinX\",value:function(t,e){return t.minX-e.minX}},{key:\"compareMinY\",value:function(t,e){return t.minY-e.minY}},{key:\"toJSON\",value:function(){return this.data}},{key:\"fromJSON\",value:function(t){return this.data=t,this}},{key:\"_all\",value:function(t,e){for(var n=[];t;)t.leaf?e.push.apply(e,d(t.children)):n.push.apply(n,d(t.children)),t=n.pop();return e}},{key:\"_build\",value:function(t,e,n,r){var i,o=n-e+1,s=this._maxEntries;if(o<=s)return Ge(i=We(t.slice(e,n+1)),this.toBBox),i;r||(r=Math.ceil(Math.log(o)/Math.log(s)),s=Math.ceil(o/Math.pow(s,r-1))),(i=We([])).leaf=!1,i.height=r;var a=Math.ceil(o/s),u=a*Math.ceil(Math.sqrt(s));Je(t,e,n,u,this.compareMinX);for(var l=e;l<=n;l+=u){var h=Math.min(l+u-1,n);Je(t,l,h,a,this.compareMinY);for(var c=l;c<=h;c+=a){var f=Math.min(c+a-1,h);i.children.push(this._build(t,c,f,r-1))}}return Ge(i,this.toBBox),i}},{key:\"_chooseSubtree\",value:function(t,e,n,r){for(;r.push(e),!e.leaf&&r.length-1!==n;){for(var i=1/0,o=1/0,s=void 0,a=0;a<e.children.length;a++){var u=e.children[a],l=Xe(u),h=(c=t,f=u,(Math.max(f.maxX,c.maxX)-Math.min(f.minX,c.minX))*(Math.max(f.maxY,c.maxY)-Math.min(f.minY,c.minY))-l);h<o?(o=h,i=l<i?l:i,s=u):h===o&&l<i&&(i=l,s=u)}e=s||e.children[0]}var c,f;return e}},{key:\"_insert\",value:function(t,e,n){var r=n?t:this.toBBox(t),i=[],o=this._chooseSubtree(r,this.data,e,i);for(o.children.push(t),Ye(o,r);e>=0&&i[e].children.length>this._maxEntries;)this._split(i,e),e--;this._adjustParentBBoxes(r,i,e)}},{key:\"_split\",value:function(t,e){var n=t[e],r=n.children.length,i=this._minEntries;this._chooseSplitAxis(n,i,r);var o=this._chooseSplitIndex(n,i,r),s=We(n.children.splice(o,n.children.length-o));s.height=n.height,s.leaf=n.leaf,Ge(n,this.toBBox),Ge(s,this.toBBox),e?t[e-1].children.push(s):this._splitRoot(n,s)}},{key:\"_splitRoot\",value:function(t,e){this.data=We([t,e]),this.data.height=t.height+1,this.data.leaf=!1,Ge(this.data,this.toBBox)}},{key:\"_chooseSplitIndex\",value:function(t,e,n){for(var r,i,o,s,a,u,l,h=1/0,c=1/0,f=e;f<=n-e;f++){var g=Be(t,0,f,this.toBBox),p=Be(t,f,n,this.toBBox),v=(i=g,o=p,s=void 0,a=void 0,u=void 0,l=void 0,s=Math.max(i.minX,o.minX),a=Math.max(i.minY,o.minY),u=Math.min(i.maxX,o.maxX),l=Math.min(i.maxY,o.maxY),Math.max(0,u-s)*Math.max(0,l-a)),d=Xe(g)+Xe(p);v<h?(h=v,r=f,c=d<c?d:c):v===h&&d<c&&(c=d,r=f)}return r||n-e}},{key:\"_chooseSplitAxis\",value:function(t,e,n){var r=t.leaf?this.compareMinX:ze,i=t.leaf?this.compareMinY:je;this._allDistMargin(t,e,n,r)<this._allDistMargin(t,e,n,i)&&t.children.sort(r)}},{key:\"_allDistMargin\",value:function(t,e,n,r){t.children.sort(r);for(var i=this.toBBox,o=Be(t,0,e,i),s=Be(t,n-e,n,i),a=Ue(o)+Ue(s),u=e;u<n-e;u++){var l=t.children[u];Ye(o,t.leaf?i(l):l),a+=Ue(o)}for(var h=n-e-1;h>=e;h--){var c=t.children[h];Ye(s,t.leaf?i(c):c),a+=Ue(s)}return a}},{key:\"_adjustParentBBoxes\",value:function(t,e,n){for(var r=n;r>=0;r--)Ye(e[r],t)}},{key:\"_condense\",value:function(t){for(var e,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(e=t[n-1].children).splice(e.indexOf(t[n]),1):this.clear():Ge(t[n],this.toBBox)}}])}();function Ve(t,e,n){if(!n)return e.indexOf(t);for(var r=0;r<e.length;r++)if(n(t,e[r]))return r;return-1}function Ge(t,e){Be(t,0,t.children.length,e,t)}function Be(t,e,n,r,i){i||(i=We(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o=e;o<n;o++){var s=t.children[o];Ye(i,t.leaf?r(s):s)}return i}function Ye(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function ze(t,e){return t.minX-e.minX}function je(t,e){return t.minY-e.minY}function Xe(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function Ue(t){return t.maxX-t.minX+(t.maxY-t.minY)}function Ze(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function He(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function We(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function Je(t,e,n,r,i){for(var o=[e,n];o.length;)if(!((n=o.pop())-(e=o.pop())<=r)){var s=e+Math.ceil((n-e)/r/2)*r;Re(t,s,e,n,i),o.push(e,s,s,n)}}var Ke=Object.freeze({__proto__:null,default:qe});function Qe(t){var e=new qe(t);return e.insert=function(t){if(\"Feature\"!==t.type)throw new Error(\"invalid feature\");return t.bbox=t.bbox?t.bbox:Rt(t),qe.prototype.insert.call(this,t)},e.load=function(t){var e=[];return Array.isArray(t)?t.forEach((function(t){if(\"Feature\"!==t.type)throw new Error(\"invalid features\");t.bbox=t.bbox?t.bbox:Rt(t),e.push(t)})):vt(t,(function(t){if(\"Feature\"!==t.type)throw new Error(\"invalid features\");t.bbox=t.bbox?t.bbox:Rt(t),e.push(t)})),qe.prototype.load.call(this,e)},e.remove=function(t,e){if(\"Feature\"!==t.type)throw new Error(\"invalid feature\");return t.bbox=t.bbox?t.bbox:Rt(t),qe.prototype.remove.call(this,t,e)},e.clear=function(){return qe.prototype.clear.call(this)},e.search=function(t){return C(qe.prototype.search.call(this,this.toBBox(t)))},e.collides=function(t){return qe.prototype.collides.call(this,this.toBBox(t))},e.all=function(){return C(qe.prototype.all.call(this))},e.toJSON=function(){return qe.prototype.toJSON.call(this)},e.fromJSON=function(t){return qe.prototype.fromJSON.call(this,t)},e.toBBox=function(t){var e;if(t.bbox)e=t.bbox;else if(Array.isArray(t)&&4===t.length)e=t;else if(Array.isArray(t)&&6===t.length)e=[t[0],t[1],t[3],t[4]];else if(\"Feature\"===t.type)e=Rt(t);else{if(\"FeatureCollection\"!==t.type)throw new Error(\"invalid geojson\");e=Rt(t)}return{minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}},e}function $e(t){if(!t)throw new Error(\"geojson is required\");var e=[];return xt(t,(function(t){!function(t,e){var n=[],r=t.geometry;if(null!==r){switch(r.type){case\"Polygon\":n=Q(r);break;case\"LineString\":n=[Q(r)]}n.forEach((function(n){var r=function(t,e){var n=[];return t.reduce((function(t,r){var i=L([t,r],e);return i.bbox=function(t,e){var n=t[0],r=t[1],i=e[0],o=e[1],s=n<i?n:i,a=r<o?r:o,u=n>i?n:i,l=r>o?r:o;return[s,a,u,l]}(t,r),n.push(i),r})),n}(n,t.properties);r.forEach((function(t){t.id=e.length,e.push(t)}))}))}}(t,e)})),C(e)}var tn,en,nn=Object.defineProperty,rn=Object.defineProperties,on=Object.getOwnPropertyDescriptors,sn=Object.getOwnPropertySymbols,an=Object.prototype.hasOwnProperty,un=Object.prototype.propertyIsEnumerable,ln=function(t,e,n){return e in t?nn(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n},hn=function(t,e){for(var n in e||(e={}))an.call(e,n)&&ln(t,n,e[n]);if(sn){var r,i=a(sn(e));try{for(i.s();!(r=i.n()).done;){n=r.value;un.call(e,n)&&ln(t,n,e[n])}}catch(t){i.e(t)}finally{i.f()}}return t},cn=function(t,e){return rn(t,on(e))};function fn(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t||!e)throw new Error(\"lines and pt are required arguments\");var r=K(e),i=I([1/0,1/0],{dist:1/0,index:-1,multiFeatureIndex:-1,location:-1}),o=0;return xt(t,(function(t,s,a){for(var u=Q(t),l=0;l<u.length-1;l++){var h=I(u[l]);h.properties.dist=ut(e,h,n);var c=K(h),f=I(u[l+1]);f.properties.dist=ut(e,f,n);var g=K(f),p=ut(h,f,n),d=void 0,y=void 0;if(c[0]===r[0]&&c[1]===r[1]){var m=[c,void 0,!1];d=m[0],y=m[2]}else if(g[0]===r[0]&&g[1]===r[1]){var _=[g,void 0,!0];d=_[0],y=_[2]}else{var x=v(yn(h.geometry.coordinates,f.geometry.coordinates,K(e)),3);d=x[0],y=x[2]}var E=void 0;d&&(E=I(d,{dist:ut(e,d,n),multiFeatureIndex:a,location:o+ut(h,d,n)})),E&&E.properties.dist<i.properties.dist&&(i=cn(hn({},E),{properties:cn(hn({},E.properties),{index:y?l+1:l})})),o+=p}})),i}function gn(t){return Math.sqrt(Math.pow(t[0],2)+Math.pow(t[1],2)+Math.pow(t[2],2))}function pn(t,e){var n=function(t,e){var n=v(t,3),r=n[0],i=n[1],o=n[2],s=v(e,3);return r*s[0]+i*s[1]+o*s[2]}(t,e)/(gn(t)*gn(e));return Math.acos(Math.min(Math.max(n,-1),1))}function vn(t){var e=z(t[1]),n=z(t[0]);return[Math.cos(e)*Math.cos(n),Math.cos(e)*Math.sin(n),Math.sin(e)]}function dn(t){var e=v(t,3),n=e[0],r=e[1],i=e[2],o=Y(Math.asin(i));return[Y(Math.atan2(r,n)),o]}function yn(t,e,n){var r,i,o,s,a,u,l,h,c,f,g=vn(t),p=vn(e),d=v(vn(n),3),y=d[0],m=d[1],_=d[2],x=(r=p,i=v(g,3),o=i[0],s=i[1],a=i[2],u=v(r,3),l=u[0],h=u[1],c=u[2],[s*c-a*h,a*l-o*c,o*h-s*l]),E=v(x,3),k=E[0],b=E[1],w=E[2],I=b*_-w*m,N=w*y-k*_,S=k*m-b*y,M=S*b-N*w,L=I*w-S*k,P=N*k-I*b,C=1/Math.sqrt(Math.pow(M,2)+Math.pow(L,2)+Math.pow(P,2)),T=[M*C,L*C,P*C],O=[-1*M*C,-1*L*C,-1*P*C],R=pn(g,p),A=pn(g,T),D=pn(p,T),F=pn(g,O),q=pn(p,O);return pn(g,f=A<F&&A<q||D<F&&D<q?T:O)>R||pn(p,f)>R?ut(dn(f),dn(g))<=ut(dn(f),dn(p))?[dn(g),!0,!1]:[dn(p),!1,!0]:[dn(f),!1,!1]}function mn(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,\"default\")?t.default:t}function _n(t){if(t.__esModule)return t;var e=t.default;if(\"function\"==typeof e){var n=function t(){return this instanceof t?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};n.prototype=e.prototype}else n={};return Object.defineProperty(n,\"__esModule\",{value:!0}),Object.keys(t).forEach((function(e){var r=Object.getOwnPropertyDescriptor(t,e);Object.defineProperty(n,e,r.get?r:{enumerable:!0,get:function(){return t[e]}})})),n}var xn=(en||(en=1,tn=function t(e,n){if(e===n)return!0;if(e&&n&&\"object\"==m(e)&&\"object\"==m(n)){if(e.constructor!==n.constructor)return!1;var r,i,o;if(Array.isArray(e)){if((r=e.length)!=n.length)return!1;for(i=r;0!=i--;)if(!t(e[i],n[i]))return!1;return!0}if(e.constructor===RegExp)return e.source===n.source&&e.flags===n.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===n.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===n.toString();if((r=(o=Object.keys(e)).length)!==Object.keys(n).length)return!1;for(i=r;0!=i--;)if(!Object.prototype.hasOwnProperty.call(n,o[i]))return!1;for(i=r;0!=i--;){var s=o[i];if(!t(e[s],n[s]))return!1}return!0}return e!=e&&n!=n}),tn),En=mn(xn);function kn(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!Z(n=n||{}))throw new Error(\"options is invalid\");var r,i=n.tolerance||0,o=[],s=Qe(),a=$e(t);s.load(a);var u=[];return kt(e,(function(t){var e=!1;t&&(vt(s.search(t),(function(n){if(!1===e){var o=Q(t).sort(),s=Q(n).sort();if(En(o,s))e=!0,r=r?bn(r,t)||r:t;else if(0===i?jt(o[0],n)&&jt(o[1],n):fn(n,o[0]).properties.dist<=i&&fn(n,o[1]).properties.dist<=i)e=!0,r=r?bn(r,t)||r:t;else if(0===i?jt(s[0],t)&&jt(s[1],t):fn(t,s[0]).properties.dist<=i&&fn(t,s[1]).properties.dist<=i)if(r){var a=bn(r,n);a?r=a:u.push(n)}else r=n}})),!1===e&&r&&(o.push(r),u.length&&(o=o.concat(u),u=[]),r=void 0))})),r&&o.push(r),C(o)}function bn(t,e){var n=Q(e),r=Q(t),i=r[0],o=r[r.length-1],s=t.geometry.coordinates;if(En(n[0],i))s.unshift(n[1]);else if(En(n[0],o))s.push(n[1]);else if(En(n[1],i))s.unshift(n[0]);else{if(!En(n[1],o))return;s.push(n[0])}return t}function wn(t,e){var n=G(lt(t[0],t[1])),r=G(lt(e[0],e[1]));return n===r||(r-n)%180==0}function In(t,e){if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error(\"Invalid GeoJSON object for \"+e)}function Nn(t,e){return!!Sn(e.coordinates[0],t.coordinates)||!!Sn(e.coordinates[e.coordinates.length-1],t.coordinates)}function Sn(t,e){return t[0]===e[0]&&t[1]===e[1]}function Mn(t){return t[0][0]===t[t.length-1][0]&&t[0][1]===t[t.length-1][1]}function Ln(t){for(var e=0;e<t.length-1;e++)for(var n=t[e],r=e+1;r<t.length-2;r++){if(jt(n,L([t[r],t[r+1]])))return!0}return!1}function Pn(t,e,n){for(var r=S(t),i=n+1;i<e.length;i++)if(!de(r,S(e[i]))&&ce(r,L(e[i][0])))return!1;return!0}function Cn(t,e){var n=rt(t),r=rt(e),i=n.type,o=r.type;switch(i){case\"Point\":switch(o){case\"MultiPoint\":return function(t,e){var n,r=!1;for(n=0;n<e.coordinates.length;n++)if(On(e.coordinates[n],t.coordinates)){r=!0;break}return r}(n,r);case\"LineString\":return jt(n,r,{ignoreEndVertices:!0});case\"Polygon\":case\"MultiPolygon\":return zt(n,r,{ignoreBoundary:!0});default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"MultiPoint\":switch(o){case\"MultiPoint\":return function(t,e){for(var n=0;n<t.coordinates.length;n++){for(var r=!1,i=0;i<e.coordinates.length;i++)On(t.coordinates[n],e.coordinates[i])&&(r=!0);if(!r)return!1}return!0}(n,r);case\"LineString\":return function(t,e){for(var n=!1,r=0;r<t.coordinates.length;r++){if(!jt(t.coordinates[r],e))return!1;n||(n=jt(t.coordinates[r],e,{ignoreEndVertices:!0}))}return n}(n,r);case\"Polygon\":case\"MultiPolygon\":return function(t,e){for(var n=!0,r=!1,i=0;i<t.coordinates.length;i++){if(!(r=zt(t.coordinates[i],e))){n=!1;break}r=zt(t.coordinates[i],e,{ignoreBoundary:!0})}return n&&r}(n,r);default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"LineString\":switch(o){case\"LineString\":return function(t,e){for(var n=0;n<t.coordinates.length;n++)if(!jt(t.coordinates[n],e))return!1;return!0}(n,r);case\"Polygon\":case\"MultiPolygon\":return function(t,e){var n=Rt(e),r=Rt(t);if(!Tn(n,r))return!1;for(var i=!1,o=0;o<t.coordinates.length;o++){if(!zt(t.coordinates[o],e))return!1;if(i||(i=zt(t.coordinates[o],e,{ignoreBoundary:!0})),!i&&o<t.coordinates.length-1)i=zt(Rn(t.coordinates[o],t.coordinates[o+1]),e,{ignoreBoundary:!0})}return i}(n,r);default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"Polygon\":switch(o){case\"Polygon\":case\"MultiPolygon\":return function(t,e){var n=Rt(t);if(!Tn(Rt(e),n))return!1;for(var r=0;r<t.coordinates[0].length;r++)if(!zt(t.coordinates[0][r],e))return!1;return!0}(n,r);default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}default:throw new Error(\"feature1 \"+i+\" geometry not supported\")}}function Tn(t,e){return!(t[0]>e[0])&&(!(t[2]<e[2])&&(!(t[1]>e[1])&&!(t[3]<e[3])))}function On(t,e){return t[0]===e[0]&&t[1]===e[1]}function Rn(t,e){return[(t[0]+e[0])/2,(t[1]+e[1])/2]}function An(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=Rt(t);return I([(n[0]+n[2])/2,(n[1]+n[3])/2],e.properties,e)}var Dn,Fn={exports:{}};var qn=(Dn||(Dn=1,function(t,e){t.exports=function(){function t(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function e(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function n(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}function r(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&o(t,e)}function i(t){return i=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},i(t)}function o(t,e){return o=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},o(t,e)}function s(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}function a(t,e,n){return a=s()?Reflect.construct:function(t,e,n){var r=[null];r.push.apply(r,e);var i=new(Function.bind.apply(t,r));return n&&o(i,n.prototype),i},a.apply(null,arguments)}function u(t){var e=\"function\"==typeof Map?new Map:void 0;return u=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf(\"[native code]\")))return t;var n;if(\"function\"!=typeof t)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,r)}function r(){return a(t,arguments,i(this).constructor)}return r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),o(r,t)},u(t)}function l(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}function h(t,e){if(e&&(\"object\"==m(e)||\"function\"==typeof e))return e;if(void 0!==e)throw new TypeError(\"Derived constructors may only return object or undefined\");return l(t)}function c(t){var e=s();return function(){var n,r=i(t);if(e){var o=i(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return h(this,n)}}function f(t,e,n){return f=\"undefined\"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=i(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(n):o.value}},f(t,e,n||t)}function g(t){return function(t){if(Array.isArray(t))return v(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||p(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function p(t,e){if(t){if(\"string\"==typeof t)return v(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===n&&t.constructor&&(n=t.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?v(t,e):void 0}}function v(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function d(t,e){var n=\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(!n){if(Array.isArray(t)||(n=p(t))||e){n&&(t=n);var r=0,i=function(){};return{s:i,n:function(){return r>=t.length?{done:!0}:{done:!1,value:t[r++]}},e:function(t){throw t},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var o,s=!0,a=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return s=t.done,t},e:function(t){a=!0,o=t},f:function(){try{s||null==n.return||n.return()}finally{if(a)throw o}}}}var y=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getEndCapStyle\",value:function(){return this._endCapStyle}},{key:\"isSingleSided\",value:function(){return this._isSingleSided}},{key:\"setQuadrantSegments\",value:function(t){this._quadrantSegments=t,0===this._quadrantSegments&&(this._joinStyle=e.JOIN_BEVEL),this._quadrantSegments<0&&(this._joinStyle=e.JOIN_MITRE,this._mitreLimit=Math.abs(this._quadrantSegments)),t<=0&&(this._quadrantSegments=1),this._joinStyle!==e.JOIN_ROUND&&(this._quadrantSegments=e.DEFAULT_QUADRANT_SEGMENTS)}},{key:\"getJoinStyle\",value:function(){return this._joinStyle}},{key:\"setJoinStyle\",value:function(t){this._joinStyle=t}},{key:\"setSimplifyFactor\",value:function(t){this._simplifyFactor=t<0?0:t}},{key:\"getSimplifyFactor\",value:function(){return this._simplifyFactor}},{key:\"getQuadrantSegments\",value:function(){return this._quadrantSegments}},{key:\"setEndCapStyle\",value:function(t){this._endCapStyle=t}},{key:\"getMitreLimit\",value:function(){return this._mitreLimit}},{key:\"setMitreLimit\",value:function(t){this._mitreLimit=t}},{key:\"setSingleSided\",value:function(t){this._isSingleSided=t}}],[{key:\"constructor_\",value:function(){if(this._quadrantSegments=e.DEFAULT_QUADRANT_SEGMENTS,this._endCapStyle=e.CAP_ROUND,this._joinStyle=e.JOIN_ROUND,this._mitreLimit=e.DEFAULT_MITRE_LIMIT,this._isSingleSided=!1,this._simplifyFactor=e.DEFAULT_SIMPLIFY_FACTOR,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setQuadrantSegments(t)}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.setQuadrantSegments(n),this.setEndCapStyle(r)}else if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];this.setQuadrantSegments(i),this.setEndCapStyle(o),this.setJoinStyle(s),this.setMitreLimit(a)}}},{key:\"bufferDistanceError\",value:function(t){var e=Math.PI/2/t;return 1-Math.cos(e/2)}}]),e}();y.CAP_ROUND=1,y.CAP_FLAT=2,y.CAP_SQUARE=3,y.JOIN_ROUND=1,y.JOIN_MITRE=2,y.JOIN_BEVEL=3,y.DEFAULT_QUADRANT_SEGMENTS=8,y.DEFAULT_MITRE_LIMIT=5,y.DEFAULT_SIMPLIFY_FACTOR=.01;var _=function(e){r(o,e);var i=c(o);function o(e){var n;return t(this,o),(n=i.call(this,e)).name=Object.keys({Exception:o})[0],n}return n(o,[{key:\"toString\",value:function(){return this.message}}]),o}(u(Error)),x=function(e){r(i,e);var n=c(i);function i(e){var r;return t(this,i),(r=n.call(this,e)).name=Object.keys({IllegalArgumentException:i})[0],r}return i}(_),E=function(){function e(){t(this,e)}return n(e,[{key:\"filter\",value:function(t){}}]),e}();function k(){}function b(){}function w(){}var I,N,S,M,L,P,C,T,O=function(){function e(){t(this,e)}return n(e,null,[{key:\"equalsWithTolerance\",value:function(t,e,n){return Math.abs(t-e)<=n}}]),e}(),R=function(){function e(n,r){t(this,e),this.low=r||0,this.high=n||0}return n(e,null,[{key:\"toBinaryString\",value:function(t){var e,n=\"\";for(e=2147483648;e>0;e>>>=1)n+=(t.high&e)===e?\"1\":\"0\";for(e=2147483648;e>0;e>>>=1)n+=(t.low&e)===e?\"1\":\"0\";return n}}]),e}();function A(){}function D(){}A.NaN=NaN,A.isNaN=function(t){return Number.isNaN(t)},A.isInfinite=function(t){return!Number.isFinite(t)},A.MAX_VALUE=Number.MAX_VALUE,A.POSITIVE_INFINITY=Number.POSITIVE_INFINITY,A.NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY,\"function\"==typeof Float64Array&&\"function\"==typeof Int32Array?(P=2146435072,C=new Float64Array(1),T=new Int32Array(C.buffer),A.doubleToLongBits=function(t){C[0]=t;var e=0|T[0],n=0|T[1];return(n&P)===P&&0!=(1048575&n)&&0!==e&&(e=0,n=2146959360),new R(n,e)},A.longBitsToDouble=function(t){return T[0]=t.low,T[1]=t.high,C[0]}):(I=1023,N=Math.log2,S=Math.floor,M=Math.pow,L=function(){for(var t=53;t>0;t--){var e=M(2,t)-1;if(S(N(e))+1===t)return e}return 0}(),A.doubleToLongBits=function(t){var e,n,r,i,o,s,a,u,l;if(t<0||1/t===Number.NEGATIVE_INFINITY?(s=1<<31,t=-t):s=0,0===t)return new R(u=s,l=0);if(t===1/0)return new R(u=2146435072|s,l=0);if(t!=t)return new R(u=2146959360,l=0);if(i=0,l=0,(e=S(t))>1)if(e<=L)(i=S(N(e)))<=20?(l=0,u=e<<20-i&1048575):(l=e%(n=M(2,r=i-20))<<32-r,u=e/n&1048575);else for(r=e,l=0;0!==(r=S(n=r/2));)i++,l>>>=1,l|=(1&u)<<31,u>>>=1,n!==r&&(u|=524288);if(a=i+I,o=0===e,e=t-e,i<52&&0!==e)for(r=0;;){if((n=2*e)>=1?(e=n-1,o?(a--,o=!1):(r<<=1,r|=1,i++)):(e=n,o?0==--a&&(i++,o=!1):(r<<=1,i++)),20===i)u|=r,r=0;else if(52===i){l|=r;break}if(1===n){i<20?u|=r<<20-i:i<52&&(l|=r<<52-i);break}}return u|=a<<20,new R(u|=s,l)},A.longBitsToDouble=function(t){var e,n,r,i,o=t.high,s=t.low,a=o&1<<31?-1:1;for(r=((2146435072&o)>>20)-I,i=0,n=1<<19,e=1;e<=20;e++)o&n&&(i+=M(2,-e)),n>>>=1;for(n=1<<31,e=21;e<=52;e++)s&n&&(i+=M(2,-e)),n>>>=1;if(-1023===r){if(0===i)return 0*a;r=-1022}else{if(1024===r)return 0===i?a/0:NaN;i+=1}return a*i*M(2,r)});var F=function(e){r(i,e);var n=c(i);function i(e){var r;return t(this,i),(r=n.call(this,e)).name=Object.keys({RuntimeException:i})[0],r}return i}(_),q=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),e=i.call(this),o.constructor_.apply(l(e),arguments),e}return n(o,null,[{key:\"constructor_\",value:function(){if(0===arguments.length)F.constructor_.call(this);else if(1===arguments.length){var t=arguments[0];F.constructor_.call(this,t)}}}]),o}(F),V=function(){function e(){t(this,e)}return n(e,null,[{key:\"shouldNeverReachHere\",value:function(){if(0===arguments.length)e.shouldNeverReachHere(null);else if(1===arguments.length){var t=arguments[0];throw new q(\"Should never reach here\"+(null!==t?\": \"+t:\"\"))}}},{key:\"isTrue\",value:function(){if(1===arguments.length){var t=arguments[0];e.isTrue(t,null)}else if(2===arguments.length){var n=arguments[1];if(!arguments[0])throw null===n?new q:new q(n)}}},{key:\"equals\",value:function(){if(2===arguments.length){var t=arguments[0],n=arguments[1];e.equals(t,n,null)}else if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];if(!i.equals(r))throw new q(\"Expected \"+r+\" but encountered \"+i+(null!==o?\": \"+o:\"\"))}}}]),e}(),G=new ArrayBuffer(8),B=new Float64Array(G),Y=new Int32Array(G),z=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getM\",value:function(){return A.NaN}},{key:\"setOrdinate\",value:function(t,n){switch(t){case e.X:this.x=n;break;case e.Y:this.y=n;break;case e.Z:this.setZ(n);break;default:throw new x(\"Invalid ordinate index: \"+t)}}},{key:\"equals2D\",value:function(){if(1===arguments.length){var t=arguments[0];return this.x===t.x&&this.y===t.y}if(2===arguments.length){var e=arguments[0],n=arguments[1];return!!O.equalsWithTolerance(this.x,e.x,n)&&!!O.equalsWithTolerance(this.y,e.y,n)}}},{key:\"setM\",value:function(t){throw new x(\"Invalid ordinate index: \"+e.M)}},{key:\"getZ\",value:function(){return this.z}},{key:\"getOrdinate\",value:function(t){switch(t){case e.X:return this.x;case e.Y:return this.y;case e.Z:return this.getZ()}throw new x(\"Invalid ordinate index: \"+t)}},{key:\"equals3D\",value:function(t){return this.x===t.x&&this.y===t.y&&(this.getZ()===t.getZ()||A.isNaN(this.getZ())&&A.isNaN(t.getZ()))}},{key:\"equals\",value:function(t){return t instanceof e&&this.equals2D(t)}},{key:\"equalInZ\",value:function(t,e){return O.equalsWithTolerance(this.getZ(),t.getZ(),e)}},{key:\"setX\",value:function(t){this.x=t}},{key:\"compareTo\",value:function(t){var e=t;return this.x<e.x?-1:this.x>e.x?1:this.y<e.y?-1:this.y>e.y?1:0}},{key:\"getX\",value:function(){return this.x}},{key:\"setZ\",value:function(t){this.z=t}},{key:\"clone\",value:function(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return V.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\"),null;throw t}}},{key:\"copy\",value:function(){return new e(this)}},{key:\"toString\",value:function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.getZ()+\")\"}},{key:\"distance3D\",value:function(t){var e=this.x-t.x,n=this.y-t.y,r=this.getZ()-t.getZ();return Math.sqrt(e*e+n*n+r*r)}},{key:\"getY\",value:function(){return this.y}},{key:\"setY\",value:function(t){this.y=t}},{key:\"distance\",value:function(t){var e=this.x-t.x,n=this.y-t.y;return Math.sqrt(e*e+n*n)}},{key:\"hashCode\",value:function(){var t=17;return 37*(t=37*t+e.hashCode(this.x))+e.hashCode(this.y)}},{key:\"setCoordinate\",value:function(t){this.x=t.x,this.y=t.y,this.z=t.getZ()}},{key:\"interfaces_\",get:function(){return[k,b,w]}}],[{key:\"constructor_\",value:function(){if(this.x=null,this.y=null,this.z=null,0===arguments.length)e.constructor_.call(this,0,0);else if(1===arguments.length){var t=arguments[0];e.constructor_.call(this,t.x,t.y,t.getZ())}else if(2===arguments.length){var n=arguments[0],r=arguments[1];e.constructor_.call(this,n,r,e.NULL_ORDINATE)}else if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];this.x=i,this.y=o,this.z=s}}},{key:\"hashCode\",value:function(t){return B[0]=t,Y[0]^Y[1]}}]),e}(),j=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"compare\",value:function(t,n){var r=e.compare(t.x,n.x);if(0!==r)return r;var i=e.compare(t.y,n.y);return 0!==i?i:this._dimensionsToTest<=2?0:e.compare(t.getZ(),n.getZ())}},{key:\"interfaces_\",get:function(){return[D]}}],[{key:\"constructor_\",value:function(){if(this._dimensionsToTest=2,0===arguments.length)e.constructor_.call(this,2);else if(1===arguments.length){var t=arguments[0];if(2!==t&&3!==t)throw new x(\"only 2 or 3 dimensions may be specified\");this._dimensionsToTest=t}}},{key:\"compare\",value:function(t,e){return t<e?-1:t>e?1:A.isNaN(t)?A.isNaN(e)?0:-1:A.isNaN(e)?1:0}}]),e}();z.DimensionalComparator=j,z.NULL_ORDINATE=A.NaN,z.X=0,z.Y=1,z.Z=2,z.M=3;var X=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getArea\",value:function(){return this.getWidth()*this.getHeight()}},{key:\"equals\",value:function(t){if(!(t instanceof e))return!1;var n=t;return this.isNull()?n.isNull():this._maxx===n.getMaxX()&&this._maxy===n.getMaxY()&&this._minx===n.getMinX()&&this._miny===n.getMinY()}},{key:\"intersection\",value:function(t){if(this.isNull()||t.isNull()||!this.intersects(t))return new e;var n=this._minx>t._minx?this._minx:t._minx,r=this._miny>t._miny?this._miny:t._miny;return new e(n,this._maxx<t._maxx?this._maxx:t._maxx,r,this._maxy<t._maxy?this._maxy:t._maxy)}},{key:\"isNull\",value:function(){return this._maxx<this._minx}},{key:\"getMaxX\",value:function(){return this._maxx}},{key:\"covers\",value:function(){if(1===arguments.length){if(arguments[0]instanceof z){var t=arguments[0];return this.covers(t.x,t.y)}if(arguments[0]instanceof e){var n=arguments[0];return!this.isNull()&&!n.isNull()&&n.getMinX()>=this._minx&&n.getMaxX()<=this._maxx&&n.getMinY()>=this._miny&&n.getMaxY()<=this._maxy}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];return!this.isNull()&&r>=this._minx&&r<=this._maxx&&i>=this._miny&&i<=this._maxy}}},{key:\"intersects\",value:function(){if(1===arguments.length){if(arguments[0]instanceof e){var t=arguments[0];return!this.isNull()&&!t.isNull()&&!(t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny)}if(arguments[0]instanceof z){var n=arguments[0];return this.intersects(n.x,n.y)}}else if(2===arguments.length){if(arguments[0]instanceof z&&arguments[1]instanceof z){var r=arguments[0],i=arguments[1];return!(this.isNull()||(r.x<i.x?r.x:i.x)>this._maxx||(r.x>i.x?r.x:i.x)<this._minx||(r.y<i.y?r.y:i.y)>this._maxy||(r.y>i.y?r.y:i.y)<this._miny)}if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var o=arguments[0],s=arguments[1];return!this.isNull()&&!(o>this._maxx||o<this._minx||s>this._maxy||s<this._miny)}}}},{key:\"getMinY\",value:function(){return this._miny}},{key:\"getDiameter\",value:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return Math.sqrt(t*t+e*e)}},{key:\"getMinX\",value:function(){return this._minx}},{key:\"expandToInclude\",value:function(){if(1===arguments.length){if(arguments[0]instanceof z){var t=arguments[0];this.expandToInclude(t.x,t.y)}else if(arguments[0]instanceof e){var n=arguments[0];if(n.isNull())return null;this.isNull()?(this._minx=n.getMinX(),this._maxx=n.getMaxX(),this._miny=n.getMinY(),this._maxy=n.getMaxY()):(n._minx<this._minx&&(this._minx=n._minx),n._maxx>this._maxx&&(this._maxx=n._maxx),n._miny<this._miny&&(this._miny=n._miny),n._maxy>this._maxy&&(this._maxy=n._maxy))}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.isNull()?(this._minx=r,this._maxx=r,this._miny=i,this._maxy=i):(r<this._minx&&(this._minx=r),r>this._maxx&&(this._maxx=r),i<this._miny&&(this._miny=i),i>this._maxy&&(this._maxy=i))}}},{key:\"minExtent\",value:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t<e?t:e}},{key:\"getWidth\",value:function(){return this.isNull()?0:this._maxx-this._minx}},{key:\"compareTo\",value:function(t){var e=t;return this.isNull()?e.isNull()?0:-1:e.isNull()?1:this._minx<e._minx?-1:this._minx>e._minx?1:this._miny<e._miny?-1:this._miny>e._miny?1:this._maxx<e._maxx?-1:this._maxx>e._maxx?1:this._maxy<e._maxy?-1:this._maxy>e._maxy?1:0}},{key:\"translate\",value:function(t,e){if(this.isNull())return null;this.init(this.getMinX()+t,this.getMaxX()+t,this.getMinY()+e,this.getMaxY()+e)}},{key:\"copy\",value:function(){return new e(this)}},{key:\"toString\",value:function(){return\"Env[\"+this._minx+\" : \"+this._maxx+\", \"+this._miny+\" : \"+this._maxy+\"]\"}},{key:\"setToNull\",value:function(){this._minx=0,this._maxx=-1,this._miny=0,this._maxy=-1}},{key:\"disjoint\",value:function(t){return!(!this.isNull()&&!t.isNull())||t._minx>this._maxx||t._maxx<this._minx||t._miny>this._maxy||t._maxy<this._miny}},{key:\"getHeight\",value:function(){return this.isNull()?0:this._maxy-this._miny}},{key:\"maxExtent\",value:function(){if(this.isNull())return 0;var t=this.getWidth(),e=this.getHeight();return t>e?t:e}},{key:\"expandBy\",value:function(){if(1===arguments.length){var t=arguments[0];this.expandBy(t,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(this.isNull())return null;this._minx-=e,this._maxx+=e,this._miny-=n,this._maxy+=n,(this._minx>this._maxx||this._miny>this._maxy)&&this.setToNull()}}},{key:\"contains\",value:function(){if(1===arguments.length){if(arguments[0]instanceof e){var t=arguments[0];return this.covers(t)}if(arguments[0]instanceof z){var n=arguments[0];return this.covers(n)}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];return this.covers(r,i)}}},{key:\"centre\",value:function(){return this.isNull()?null:new z((this.getMinX()+this.getMaxX())/2,(this.getMinY()+this.getMaxY())/2)}},{key:\"init\",value:function(){if(0===arguments.length)this.setToNull();else if(1===arguments.length){if(arguments[0]instanceof z){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof e){var n=arguments[0];this._minx=n._minx,this._maxx=n._maxx,this._miny=n._miny,this._maxy=n._maxy}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.init(r.x,i.x,r.y,i.y)}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];o<s?(this._minx=o,this._maxx=s):(this._minx=s,this._maxx=o),a<u?(this._miny=a,this._maxy=u):(this._miny=u,this._maxy=a)}}},{key:\"getMaxY\",value:function(){return this._maxy}},{key:\"distance\",value:function(t){if(this.intersects(t))return 0;var e=0;this._maxx<t._minx?e=t._minx-this._maxx:this._minx>t._maxx&&(e=this._minx-t._maxx);var n=0;return this._maxy<t._miny?n=t._miny-this._maxy:this._miny>t._maxy&&(n=this._miny-t._maxy),0===e?n:0===n?e:Math.sqrt(e*e+n*n)}},{key:\"hashCode\",value:function(){var t=17;return 37*(t=37*(t=37*(t=37*t+z.hashCode(this._minx))+z.hashCode(this._maxx))+z.hashCode(this._miny))+z.hashCode(this._maxy)}},{key:\"interfaces_\",get:function(){return[k,w]}}],[{key:\"constructor_\",value:function(){if(this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,0===arguments.length)this.init();else if(1===arguments.length){if(arguments[0]instanceof z){var t=arguments[0];this.init(t.x,t.x,t.y,t.y)}else if(arguments[0]instanceof e){var n=arguments[0];this.init(n)}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.init(r.x,i.x,r.y,i.y)}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];this.init(o,s,a,u)}}},{key:\"intersects\",value:function(){if(3===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2];return n.x>=(t.x<e.x?t.x:e.x)&&n.x<=(t.x>e.x?t.x:e.x)&&n.y>=(t.y<e.y?t.y:e.y)&&n.y<=(t.y>e.y?t.y:e.y)}if(4===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2],s=arguments[3],a=Math.min(o.x,s.x),u=Math.max(o.x,s.x),l=Math.min(r.x,i.x),h=Math.max(r.x,i.x);return!(l>u||h<a||(a=Math.min(o.y,s.y),u=Math.max(o.y,s.y),l=Math.min(r.y,i.y),h=Math.max(r.y,i.y),l>u||h<a))}}}]),e}(),U=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"isGeometryCollection\",value:function(){return this.getTypeCode()===e.TYPECODE_GEOMETRYCOLLECTION}},{key:\"getFactory\",value:function(){return this._factory}},{key:\"getGeometryN\",value:function(t){return this}},{key:\"getArea\",value:function(){return 0}},{key:\"isRectangle\",value:function(){return!1}},{key:\"equalsExact\",value:function(t){return this===t||this.equalsExact(t,0)}},{key:\"geometryChanged\",value:function(){this.apply(e.geometryChangedFilter)}},{key:\"geometryChangedAction\",value:function(){this._envelope=null}},{key:\"equalsNorm\",value:function(t){return null!==t&&this.norm().equalsExact(t.norm())}},{key:\"getLength\",value:function(){return 0}},{key:\"getNumGeometries\",value:function(){return 1}},{key:\"compareTo\",value:function(){var t;if(1===arguments.length){var e=arguments[0];return t=e,this.getTypeCode()!==t.getTypeCode()?this.getTypeCode()-t.getTypeCode():this.isEmpty()&&t.isEmpty()?0:this.isEmpty()?-1:t.isEmpty()?1:this.compareToSameClass(e)}if(2===arguments.length){var n=arguments[0],r=arguments[1];return t=n,this.getTypeCode()!==t.getTypeCode()?this.getTypeCode()-t.getTypeCode():this.isEmpty()&&t.isEmpty()?0:this.isEmpty()?-1:t.isEmpty()?1:this.compareToSameClass(n,r)}}},{key:\"getUserData\",value:function(){return this._userData}},{key:\"getSRID\",value:function(){return this._SRID}},{key:\"getEnvelope\",value:function(){return this.getFactory().toGeometry(this.getEnvelopeInternal())}},{key:\"checkNotGeometryCollection\",value:function(t){if(t.getTypeCode()===e.TYPECODE_GEOMETRYCOLLECTION)throw new x(\"This method does not support GeometryCollection arguments\")}},{key:\"equal\",value:function(t,e,n){return 0===n?t.equals(e):t.distance(e)<=n}},{key:\"norm\",value:function(){var t=this.copy();return t.normalize(),t}},{key:\"reverse\",value:function(){var t=this.reverseInternal();return null!=this.envelope&&(t.envelope=this.envelope.copy()),t.setSRID(this.getSRID()),t}},{key:\"copy\",value:function(){var t=this.copyInternal();return t.envelope=null==this._envelope?null:this._envelope.copy(),t._SRID=this._SRID,t._userData=this._userData,t}},{key:\"getPrecisionModel\",value:function(){return this._factory.getPrecisionModel()}},{key:\"getEnvelopeInternal\",value:function(){return null===this._envelope&&(this._envelope=this.computeEnvelopeInternal()),new X(this._envelope)}},{key:\"setSRID\",value:function(t){this._SRID=t}},{key:\"setUserData\",value:function(t){this._userData=t}},{key:\"compare\",value:function(t,e){for(var n=t.iterator(),r=e.iterator();n.hasNext()&&r.hasNext();){var i=n.next(),o=r.next(),s=i.compareTo(o);if(0!==s)return s}return n.hasNext()?1:r.hasNext()?-1:0}},{key:\"hashCode\",value:function(){return this.getEnvelopeInternal().hashCode()}},{key:\"isEquivalentClass\",value:function(t){return this.getClass()===t.getClass()}},{key:\"isGeometryCollectionOrDerived\",value:function(){return this.getTypeCode()===e.TYPECODE_GEOMETRYCOLLECTION||this.getTypeCode()===e.TYPECODE_MULTIPOINT||this.getTypeCode()===e.TYPECODE_MULTILINESTRING||this.getTypeCode()===e.TYPECODE_MULTIPOLYGON}},{key:\"interfaces_\",get:function(){return[b,k,w]}},{key:\"getClass\",value:function(){return e}}],[{key:\"hasNonEmptyElements\",value:function(t){for(var e=0;e<t.length;e++)if(!t[e].isEmpty())return!0;return!1}},{key:\"hasNullElements\",value:function(t){for(var e=0;e<t.length;e++)if(null===t[e])return!0;return!1}}]),e}();U.constructor_=function(t){t&&(this._envelope=null,this._userData=null,this._factory=t,this._SRID=t.getSRID())},U.TYPECODE_POINT=0,U.TYPECODE_MULTIPOINT=1,U.TYPECODE_LINESTRING=2,U.TYPECODE_LINEARRING=3,U.TYPECODE_MULTILINESTRING=4,U.TYPECODE_POLYGON=5,U.TYPECODE_MULTIPOLYGON=6,U.TYPECODE_GEOMETRYCOLLECTION=7,U.TYPENAME_POINT=\"Point\",U.TYPENAME_MULTIPOINT=\"MultiPoint\",U.TYPENAME_LINESTRING=\"LineString\",U.TYPENAME_LINEARRING=\"LinearRing\",U.TYPENAME_MULTILINESTRING=\"MultiLineString\",U.TYPENAME_POLYGON=\"Polygon\",U.TYPENAME_MULTIPOLYGON=\"MultiPolygon\",U.TYPENAME_GEOMETRYCOLLECTION=\"GeometryCollection\",U.geometryChangedFilter={get interfaces_(){return[E]},filter:function(t){t.geometryChangedAction()}};var Z=function(){function e(){t(this,e)}return n(e,null,[{key:\"toLocationSymbol\",value:function(t){switch(t){case e.EXTERIOR:return\"e\";case e.BOUNDARY:return\"b\";case e.INTERIOR:return\"i\";case e.NONE:return\"-\"}throw new x(\"Unknown location value: \"+t)}}]),e}();Z.INTERIOR=0,Z.BOUNDARY=1,Z.EXTERIOR=2,Z.NONE=-1;var H=function(){function e(){t(this,e)}return n(e,[{key:\"add\",value:function(){}},{key:\"addAll\",value:function(){}},{key:\"isEmpty\",value:function(){}},{key:\"iterator\",value:function(){}},{key:\"size\",value:function(){}},{key:\"toArray\",value:function(){}},{key:\"remove\",value:function(){}}]),e}(),W=function(e){r(i,e);var n=c(i);function i(e){var r;return t(this,i),(r=n.call(this,e)).name=Object.keys({NoSuchElementException:i})[0],r}return i}(_),J=function(e){r(i,e);var n=c(i);function i(e){var r;return t(this,i),(r=n.call(this,e)).name=Object.keys({UnsupportedOperationException:i})[0],r}return i}(_),K=function(e){r(o,e);var i=c(o);function o(){return t(this,o),i.apply(this,arguments)}return n(o,[{key:\"contains\",value:function(){}}]),o}(H),Q=function(e,i){r(s,e);var o=c(s);function s(e){var n;return t(this,s),(n=o.call(this)).map=new Map,e instanceof H&&n.addAll(e),n}return n(s,[{key:\"contains\",value:function(t){var e=t.hashCode?t.hashCode():t;return!!this.map.has(e)}},{key:\"add\",value:function(t){var e=t.hashCode?t.hashCode():t;return!this.map.has(e)&&!!this.map.set(e,t)}},{key:\"addAll\",value:function(t){var e,n=d(t);try{for(n.s();!(e=n.n()).done;){var r=e.value;this.add(r)}}catch(t){n.e(t)}finally{n.f()}return!0}},{key:\"remove\",value:function(){throw new J}},{key:\"size\",value:function(){return this.map.size}},{key:\"isEmpty\",value:function(){return 0===this.map.size}},{key:\"toArray\",value:function(){return Array.from(this.map.values())}},{key:\"iterator\",value:function(){return new $(this.map)}},{key:i,value:function(){return this.map}}]),s}(K,Symbol.iterator),$=function(){function e(n){t(this,e),this.iterator=n.values();var r=this.iterator.next(),i=r.done,o=r.value;this.done=i,this.value=o}return n(e,[{key:\"next\",value:function(){if(this.done)throw new W;var t=this.value,e=this.iterator.next(),n=e.done,r=e.value;return this.done=n,this.value=r,t}},{key:\"hasNext\",value:function(){return!this.done}},{key:\"remove\",value:function(){throw new J}}]),e}(),tt=function(){function e(){t(this,e)}return n(e,null,[{key:\"opposite\",value:function(t){return t===e.LEFT?e.RIGHT:t===e.RIGHT?e.LEFT:t}}]),e}();tt.ON=0,tt.LEFT=1,tt.RIGHT=2;var et=function(e){r(i,e);var n=c(i);function i(e){var r;return t(this,i),(r=n.call(this,e)).name=Object.keys({EmptyStackException:i})[0],r}return i}(_),nt=function(e){r(i,e);var n=c(i);function i(e){var r;return t(this,i),(r=n.call(this,e)).name=Object.keys({IndexOutOfBoundsException:i})[0],r}return i}(_),rt=function(e){r(o,e);var i=c(o);function o(){return t(this,o),i.apply(this,arguments)}return n(o,[{key:\"get\",value:function(){}},{key:\"set\",value:function(){}},{key:\"isEmpty\",value:function(){}}]),o}(H),it=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),(e=i.call(this)).array=[],e}return n(o,[{key:\"add\",value:function(t){return this.array.push(t),!0}},{key:\"get\",value:function(t){if(t<0||t>=this.size())throw new nt;return this.array[t]}},{key:\"push\",value:function(t){return this.array.push(t),t}},{key:\"pop\",value:function(){if(0===this.array.length)throw new et;return this.array.pop()}},{key:\"peek\",value:function(){if(0===this.array.length)throw new et;return this.array[this.array.length-1]}},{key:\"empty\",value:function(){return 0===this.array.length}},{key:\"isEmpty\",value:function(){return this.empty()}},{key:\"search\",value:function(t){return this.array.indexOf(t)}},{key:\"size\",value:function(){return this.array.length}},{key:\"toArray\",value:function(){return this.array.slice()}}]),o}(rt);function ot(t,e){return t.interfaces_&&t.interfaces_.indexOf(e)>-1}var st=function(){function e(n){t(this,e),this.str=n}return n(e,[{key:\"append\",value:function(t){this.str+=t}},{key:\"setCharAt\",value:function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)}},{key:\"toString\",value:function(){return this.str}}]),e}(),at=function(){function e(n){t(this,e),this.value=n}return n(e,[{key:\"intValue\",value:function(){return this.value}},{key:\"compareTo\",value:function(t){return this.value<t?-1:this.value>t?1:0}}],[{key:\"compare\",value:function(t,e){return t<e?-1:t>e?1:0}},{key:\"isNan\",value:function(t){return Number.isNaN(t)}},{key:\"valueOf\",value:function(t){return new e(t)}}]),e}(),ut=function(){function e(){t(this,e)}return n(e,null,[{key:\"isWhitespace\",value:function(t){return t<=32&&t>=0||127===t}},{key:\"toUpperCase\",value:function(t){return t.toUpperCase()}}]),e}(),lt=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"le\",value:function(t){return this._hi<t._hi||this._hi===t._hi&&this._lo<=t._lo}},{key:\"extractSignificantDigits\",value:function(t,n){var r=this.abs(),i=e.magnitude(r._hi),o=e.TEN.pow(i);(r=r.divide(o)).gt(e.TEN)?(r=r.divide(e.TEN),i+=1):r.lt(e.ONE)&&(r=r.multiply(e.TEN),i-=1);for(var s=i+1,a=new st,u=e.MAX_PRINT_DIGITS-1,l=0;l<=u;l++){t&&l===s&&a.append(\".\");var h=Math.trunc(r._hi);if(h<0)break;var c=!1,f=0;h>9?(c=!0,f=\"9\"):f=\"0\"+h,a.append(f),r=r.subtract(e.valueOf(h)).multiply(e.TEN),c&&r.selfAdd(e.TEN);var g=!0,p=e.magnitude(r._hi);if(p<0&&Math.abs(p)>=u-l&&(g=!1),!g)break}return n[0]=i,a.toString()}},{key:\"sqr\",value:function(){return this.multiply(this)}},{key:\"doubleValue\",value:function(){return this._hi+this._lo}},{key:\"subtract\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return this.add(t.negate())}if(\"number\"==typeof arguments[0]){var n=arguments[0];return this.add(-n)}}},{key:\"equals\",value:function(){if(1===arguments.length&&arguments[0]instanceof e){var t=arguments[0];return this._hi===t._hi&&this._lo===t._lo}}},{key:\"isZero\",value:function(){return 0===this._hi&&0===this._lo}},{key:\"selfSubtract\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return this.isNaN()?this:this.selfAdd(-t._hi,-t._lo)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return this.isNaN()?this:this.selfAdd(-n,0)}}},{key:\"getSpecialNumberString\",value:function(){return this.isZero()?\"0.0\":this.isNaN()?\"NaN \":null}},{key:\"min\",value:function(t){return this.le(t)?this:t}},{key:\"selfDivide\",value:function(){if(1===arguments.length){if(arguments[0]instanceof e){var t=arguments[0];return this.selfDivide(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return this.selfDivide(n,0)}}else if(2===arguments.length){var r=arguments[0],i=arguments[1],o=null,s=null,a=null,u=null,l=null,h=null,c=null,f=null;return l=this._hi/r,f=(o=(h=e.SPLIT*l)-(o=h-l))*(a=(f=e.SPLIT*r)-(a=f-r))-(c=l*r)+o*(u=r-a)+(s=l-o)*a+s*u,f=l+(h=(this._hi-c-f+this._lo-l*i)/r),this._hi=f,this._lo=l-f+h,this}}},{key:\"dump\",value:function(){return\"DD<\"+this._hi+\", \"+this._lo+\">\"}},{key:\"divide\",value:function(){if(arguments[0]instanceof e){var t=arguments[0],n=null,r=null,i=null,o=null,s=null,a=null,u=null,l=null;return r=(s=this._hi/t._hi)-(n=(a=e.SPLIT*s)-(n=a-s)),l=n*(i=(l=e.SPLIT*t._hi)-(i=l-t._hi))-(u=s*t._hi)+n*(o=t._hi-i)+r*i+r*o,new e(l=s+(a=(this._hi-u-l+this._lo-s*t._lo)/t._hi),s-l+a)}if(\"number\"==typeof arguments[0]){var h=arguments[0];return A.isNaN(h)?e.createNaN():e.copy(this).selfDivide(h,0)}}},{key:\"ge\",value:function(t){return this._hi>t._hi||this._hi===t._hi&&this._lo>=t._lo}},{key:\"pow\",value:function(t){if(0===t)return e.valueOf(1);var n=new e(this),r=e.valueOf(1),i=Math.abs(t);if(i>1)for(;i>0;)i%2==1&&r.selfMultiply(n),(i/=2)>0&&(n=n.sqr());else r=n;return t<0?r.reciprocal():r}},{key:\"ceil\",value:function(){if(this.isNaN())return e.NaN;var t=Math.ceil(this._hi),n=0;return t===this._hi&&(n=Math.ceil(this._lo)),new e(t,n)}},{key:\"compareTo\",value:function(t){var e=t;return this._hi<e._hi?-1:this._hi>e._hi?1:this._lo<e._lo?-1:this._lo>e._lo?1:0}},{key:\"rint\",value:function(){return this.isNaN()?this:this.add(.5).floor()}},{key:\"setValue\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return this.init(t),this}if(\"number\"==typeof arguments[0]){var n=arguments[0];return this.init(n),this}}},{key:\"max\",value:function(t){return this.ge(t)?this:t}},{key:\"sqrt\",value:function(){if(this.isZero())return e.valueOf(0);if(this.isNegative())return e.NaN;var t=1/Math.sqrt(this._hi),n=this._hi*t,r=e.valueOf(n),i=this.subtract(r.sqr())._hi*(.5*t);return r.add(i)}},{key:\"selfAdd\",value:function(){if(1===arguments.length){if(arguments[0]instanceof e){var t=arguments[0];return this.selfAdd(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var n=arguments[0],r=null,i=null,o=null,s=null,a=null,u=null;return s=(o=this._hi+n)-(a=o-this._hi),i=(u=(s=n-a+(this._hi-s))+this._lo)+(o-(r=o+u)),this._hi=r+i,this._lo=i+(r-this._hi),this}}else if(2===arguments.length){var l=arguments[0],h=arguments[1],c=null,f=null,g=null,p=null,v=null,d=null,y=null;p=this._hi+l,f=this._lo+h,v=p-(d=p-this._hi),g=f-(y=f-this._lo);var m=(c=p+(d=(v=l-d+(this._hi-v))+f))+(d=(g=h-y+(this._lo-g))+(d+(p-c))),_=d+(c-m);return this._hi=m,this._lo=_,this}}},{key:\"selfMultiply\",value:function(){if(1===arguments.length){if(arguments[0]instanceof e){var t=arguments[0];return this.selfMultiply(t._hi,t._lo)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return this.selfMultiply(n,0)}}else if(2===arguments.length){var r=arguments[0],i=arguments[1],o=null,s=null,a=null,u=null,l=null,h=null;o=(l=e.SPLIT*this._hi)-this._hi,h=e.SPLIT*r,o=l-o,s=this._hi-o,a=h-r;var c=(l=this._hi*r)+(h=o*(a=h-a)-l+o*(u=r-a)+s*a+s*u+(this._hi*i+this._lo*r)),f=h+(o=l-c);return this._hi=c,this._lo=f,this}}},{key:\"selfSqr\",value:function(){return this.selfMultiply(this)}},{key:\"floor\",value:function(){if(this.isNaN())return e.NaN;var t=Math.floor(this._hi),n=0;return t===this._hi&&(n=Math.floor(this._lo)),new e(t,n)}},{key:\"negate\",value:function(){return this.isNaN()?this:new e(-this._hi,-this._lo)}},{key:\"clone\",value:function(){try{return null}catch(t){if(t instanceof CloneNotSupportedException)return null;throw t}}},{key:\"multiply\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return t.isNaN()?e.createNaN():e.copy(this).selfMultiply(t)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return A.isNaN(n)?e.createNaN():e.copy(this).selfMultiply(n,0)}}},{key:\"isNaN\",value:function(){return A.isNaN(this._hi)}},{key:\"intValue\",value:function(){return Math.trunc(this._hi)}},{key:\"toString\",value:function(){var t=e.magnitude(this._hi);return t>=-3&&t<=20?this.toStandardNotation():this.toSciNotation()}},{key:\"toStandardNotation\",value:function(){var t=this.getSpecialNumberString();if(null!==t)return t;var n=new Array(1).fill(null),r=this.extractSignificantDigits(!0,n),i=n[0]+1,o=r;if(\".\"===r.charAt(0))o=\"0\"+r;else if(i<0)o=\"0.\"+e.stringOfChar(\"0\",-i)+r;else if(-1===r.indexOf(\".\")){var s=i-r.length;o=r+e.stringOfChar(\"0\",s)+\".0\"}return this.isNegative()?\"-\"+o:o}},{key:\"reciprocal\",value:function(){var t,n,r,i,o=null,s=null,a=null,u=null;t=(r=1/this._hi)-(o=(a=e.SPLIT*r)-(o=a-r)),s=(u=e.SPLIT*this._hi)-this._hi;var l=r+(a=(1-(i=r*this._hi)-(u=o*(s=u-s)-i+o*(n=this._hi-s)+t*s+t*n)-r*this._lo)/this._hi);return new e(l,r-l+a)}},{key:\"toSciNotation\",value:function(){if(this.isZero())return e.SCI_NOT_ZERO;var t=this.getSpecialNumberString();if(null!==t)return t;var n=new Array(1).fill(null),r=this.extractSignificantDigits(!1,n),i=e.SCI_NOT_EXPONENT_CHAR+n[0];if(\"0\"===r.charAt(0))throw new IllegalStateException(\"Found leading zero: \"+r);var o=\"\";r.length>1&&(o=r.substring(1));var s=r.charAt(0)+\".\"+o;return this.isNegative()?\"-\"+s+i:s+i}},{key:\"abs\",value:function(){return this.isNaN()?e.NaN:this.isNegative()?this.negate():new e(this)}},{key:\"isPositive\",value:function(){return this._hi>0||0===this._hi&&this._lo>0}},{key:\"lt\",value:function(t){return this._hi<t._hi||this._hi===t._hi&&this._lo<t._lo}},{key:\"add\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return e.copy(this).selfAdd(t)}if(\"number\"==typeof arguments[0]){var n=arguments[0];return e.copy(this).selfAdd(n)}}},{key:\"init\",value:function(){if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this._hi=t,this._lo=0}else if(arguments[0]instanceof e){var n=arguments[0];this._hi=n._hi,this._lo=n._lo}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this._hi=r,this._lo=i}}},{key:\"gt\",value:function(t){return this._hi>t._hi||this._hi===t._hi&&this._lo>t._lo}},{key:\"isNegative\",value:function(){return this._hi<0||0===this._hi&&this._lo<0}},{key:\"trunc\",value:function(){return this.isNaN()?e.NaN:this.isPositive()?this.floor():this.ceil()}},{key:\"signum\",value:function(){return this._hi>0?1:this._hi<0?-1:this._lo>0?1:this._lo<0?-1:0}},{key:\"interfaces_\",get:function(){return[w,k,b]}}],[{key:\"constructor_\",value:function(){if(this._hi=0,this._lo=0,0===arguments.length)this.init(0);else if(1===arguments.length){if(\"number\"==typeof arguments[0]){var t=arguments[0];this.init(t)}else if(arguments[0]instanceof e){var n=arguments[0];this.init(n)}else if(\"string\"==typeof arguments[0]){var r=arguments[0];e.constructor_.call(this,e.parse(r))}}else if(2===arguments.length){var i=arguments[0],o=arguments[1];this.init(i,o)}}},{key:\"determinant\",value:function(){if(\"number\"==typeof arguments[3]&&\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],n=arguments[1],r=arguments[2],i=arguments[3];return e.determinant(e.valueOf(t),e.valueOf(n),e.valueOf(r),e.valueOf(i))}if(arguments[3]instanceof e&&arguments[2]instanceof e&&arguments[0]instanceof e&&arguments[1]instanceof e){var o=arguments[1],s=arguments[2],a=arguments[3];return arguments[0].multiply(a).selfSubtract(o.multiply(s))}}},{key:\"sqr\",value:function(t){return e.valueOf(t).selfMultiply(t)}},{key:\"valueOf\",value:function(){if(\"string\"==typeof arguments[0]){var t=arguments[0];return e.parse(t)}if(\"number\"==typeof arguments[0])return new e(arguments[0])}},{key:\"sqrt\",value:function(t){return e.valueOf(t).sqrt()}},{key:\"parse\",value:function(t){for(var n=0,r=t.length;ut.isWhitespace(t.charAt(n));)n++;var i=!1;if(n<r){var o=t.charAt(n);\"-\"!==o&&\"+\"!==o||(n++,\"-\"===o&&(i=!0))}for(var s=new e,a=0,u=0,l=0,h=!1;!(n>=r);){var c=t.charAt(n);if(n++,ut.isDigit(c)){var f=c-\"0\";s.selfMultiply(e.TEN),s.selfAdd(f),a++}else{if(\".\"!==c){if(\"e\"===c||\"E\"===c){var g=t.substring(n);try{l=at.parseInt(g)}catch(e){throw e instanceof NumberFormatException?new NumberFormatException(\"Invalid exponent \"+g+\" in string \"+t):e}break}throw new NumberFormatException(\"Unexpected character '\"+c+\"' at position \"+n+\" in string \"+t)}u=a,h=!0}}var p=s;h||(u=a);var v=a-u-l;if(0===v)p=s;else if(v>0){var d=e.TEN.pow(v);p=s.divide(d)}else if(v<0){var y=e.TEN.pow(-v);p=s.multiply(y)}return i?p.negate():p}},{key:\"createNaN\",value:function(){return new e(A.NaN,A.NaN)}},{key:\"copy\",value:function(t){return new e(t)}},{key:\"magnitude\",value:function(t){var e=Math.abs(t),n=Math.log(e)/Math.log(10),r=Math.trunc(Math.floor(n));return 10*Math.pow(10,r)<=e&&(r+=1),r}},{key:\"stringOfChar\",value:function(t,e){for(var n=new st,r=0;r<e;r++)n.append(t);return n.toString()}}]),e}();lt.PI=new lt(3.141592653589793,12246467991473532e-32),lt.TWO_PI=new lt(6.283185307179586,24492935982947064e-32),lt.PI_2=new lt(1.5707963267948966,6123233995736766e-32),lt.E=new lt(2.718281828459045,14456468917292502e-32),lt.NaN=new lt(A.NaN,A.NaN),lt.EPS=123259516440783e-46,lt.SPLIT=134217729,lt.MAX_PRINT_DIGITS=32,lt.TEN=lt.valueOf(10),lt.ONE=lt.valueOf(1),lt.SCI_NOT_EXPONENT_CHAR=\"E\",lt.SCI_NOT_ZERO=\"0.0E0\";var ht=function(){function e(){t(this,e)}return n(e,null,[{key:\"orientationIndex\",value:function(t,n,r){var i=e.orientationIndexFilter(t,n,r);if(i<=1)return i;var o=lt.valueOf(n.x).selfAdd(-t.x),s=lt.valueOf(n.y).selfAdd(-t.y),a=lt.valueOf(r.x).selfAdd(-n.x),u=lt.valueOf(r.y).selfAdd(-n.y);return o.selfMultiply(u).selfSubtract(s.selfMultiply(a)).signum()}},{key:\"signOfDet2x2\",value:function(){if(arguments[3]instanceof lt&&arguments[2]instanceof lt&&arguments[0]instanceof lt&&arguments[1]instanceof lt){var t=arguments[1],e=arguments[2],n=arguments[3];return arguments[0].multiply(n).selfSubtract(t.multiply(e)).signum()}if(\"number\"==typeof arguments[3]&&\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var r=arguments[0],i=arguments[1],o=arguments[2],s=arguments[3],a=lt.valueOf(r),u=lt.valueOf(i),l=lt.valueOf(o),h=lt.valueOf(s);return a.multiply(h).selfSubtract(u.multiply(l)).signum()}}},{key:\"intersection\",value:function(t,e,n,r){var i=new lt(t.y).selfSubtract(e.y),o=new lt(e.x).selfSubtract(t.x),s=new lt(t.x).selfMultiply(e.y).selfSubtract(new lt(e.x).selfMultiply(t.y)),a=new lt(n.y).selfSubtract(r.y),u=new lt(r.x).selfSubtract(n.x),l=new lt(n.x).selfMultiply(r.y).selfSubtract(new lt(r.x).selfMultiply(n.y)),h=o.multiply(l).selfSubtract(u.multiply(s)),c=a.multiply(s).selfSubtract(i.multiply(l)),f=i.multiply(u).selfSubtract(a.multiply(o)),g=h.selfDivide(f).doubleValue(),p=c.selfDivide(f).doubleValue();return A.isNaN(g)||A.isInfinite(g)||A.isNaN(p)||A.isInfinite(p)?null:new z(g,p)}},{key:\"orientationIndexFilter\",value:function(t,n,r){var i=null,o=(t.x-r.x)*(n.y-r.y),s=(t.y-r.y)*(n.x-r.x),a=o-s;if(o>0){if(s<=0)return e.signum(a);i=o+s}else{if(!(o<0))return e.signum(a);if(s>=0)return e.signum(a);i=-o-s}var u=e.DP_SAFE_EPSILON*i;return a>=u||-a>=u?e.signum(a):2}},{key:\"signum\",value:function(t){return t>0?1:t<0?-1:0}}]),e}();ht.DP_SAFE_EPSILON=1e-15;var ct=function(){function e(){t(this,e)}return n(e,[{key:\"getM\",value:function(t){if(this.hasM()){var e=this.getDimension()-this.getMeasures();return this.getOrdinate(t,e)}return A.NaN}},{key:\"setOrdinate\",value:function(t,e,n){}},{key:\"getZ\",value:function(t){return this.hasZ()?this.getOrdinate(t,2):A.NaN}},{key:\"size\",value:function(){}},{key:\"getOrdinate\",value:function(t,e){}},{key:\"getCoordinate\",value:function(){}},{key:\"getCoordinateCopy\",value:function(t){}},{key:\"createCoordinate\",value:function(){}},{key:\"getDimension\",value:function(){}},{key:\"hasM\",value:function(){return this.getMeasures()>0}},{key:\"getX\",value:function(t){}},{key:\"hasZ\",value:function(){return this.getDimension()-this.getMeasures()>2}},{key:\"getMeasures\",value:function(){return 0}},{key:\"expandEnvelope\",value:function(t){}},{key:\"copy\",value:function(){}},{key:\"getY\",value:function(t){}},{key:\"toCoordinateArray\",value:function(){}},{key:\"interfaces_\",get:function(){return[b]}}]),e}();ct.X=0,ct.Y=1,ct.Z=2,ct.M=3;var ft=function(){function e(){t(this,e)}return n(e,null,[{key:\"index\",value:function(t,e,n){return ht.orientationIndex(t,e,n)}},{key:\"isCCW\",value:function(){if(arguments[0]instanceof Array){var t=arguments[0],n=t.length-1;if(n<3)throw new x(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var r=t[0],i=0,o=1;o<=n;o++){var s=t[o];s.y>r.y&&(r=s,i=o)}var a=i;do{(a-=1)<0&&(a=n)}while(t[a].equals2D(r)&&a!==i);var u=i;do{u=(u+1)%n}while(t[u].equals2D(r)&&u!==i);var l=t[a],h=t[u];if(l.equals2D(r)||h.equals2D(r)||l.equals2D(h))return!1;var c=e.index(l,r,h);return 0===c?l.x>h.x:c>0}if(ot(arguments[0],ct)){var f=arguments[0],g=f.size()-1;if(g<3)throw new x(\"Ring has fewer than 4 points, so orientation cannot be determined\");for(var p=f.getCoordinate(0),v=0,d=1;d<=g;d++){var y=f.getCoordinate(d);y.y>p.y&&(p=y,v=d)}var m=null,_=v;do{(_-=1)<0&&(_=g),m=f.getCoordinate(_)}while(m.equals2D(p)&&_!==v);var E=null,k=v;do{k=(k+1)%g,E=f.getCoordinate(k)}while(E.equals2D(p)&&k!==v);if(m.equals2D(p)||E.equals2D(p)||m.equals2D(E))return!1;var b=e.index(m,p,E);return 0===b?m.x>E.x:b>0}}}]),e}();ft.CLOCKWISE=-1,ft.RIGHT=ft.CLOCKWISE,ft.COUNTERCLOCKWISE=1,ft.LEFT=ft.COUNTERCLOCKWISE,ft.COLLINEAR=0,ft.STRAIGHT=ft.COLLINEAR;var gt=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getCoordinate\",value:function(){return this._minCoord}},{key:\"getRightmostSide\",value:function(t,e){var n=this.getRightmostSideOfSegment(t,e);return n<0&&(n=this.getRightmostSideOfSegment(t,e-1)),n<0&&(this._minCoord=null,this.checkForRightmostCoordinate(t)),n}},{key:\"findRightmostEdgeAtVertex\",value:function(){var t=this._minDe.getEdge().getCoordinates();V.isTrue(this._minIndex>0&&this._minIndex<t.length,\"rightmost point expected to be interior vertex of edge\");var e=t[this._minIndex-1],n=t[this._minIndex+1],r=ft.index(this._minCoord,n,e),i=!1;(e.y<this._minCoord.y&&n.y<this._minCoord.y&&r===ft.COUNTERCLOCKWISE||e.y>this._minCoord.y&&n.y>this._minCoord.y&&r===ft.CLOCKWISE)&&(i=!0),i&&(this._minIndex=this._minIndex-1)}},{key:\"getRightmostSideOfSegment\",value:function(t,e){var n=t.getEdge().getCoordinates();if(e<0||e+1>=n.length)return-1;if(n[e].y===n[e+1].y)return-1;var r=tt.LEFT;return n[e].y<n[e+1].y&&(r=tt.RIGHT),r}},{key:\"getEdge\",value:function(){return this._orientedDe}},{key:\"checkForRightmostCoordinate\",value:function(t){for(var e=t.getEdge().getCoordinates(),n=0;n<e.length-1;n++)(null===this._minCoord||e[n].x>this._minCoord.x)&&(this._minDe=t,this._minIndex=n,this._minCoord=e[n])}},{key:\"findRightmostEdgeAtNode\",value:function(){var t=this._minDe.getNode().getEdges();this._minDe=t.getRightmostEdge(),this._minDe.isForward()||(this._minDe=this._minDe.getSym(),this._minIndex=this._minDe.getEdge().getCoordinates().length-1)}},{key:\"findEdge\",value:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();n.isForward()&&this.checkForRightmostCoordinate(n)}V.isTrue(0!==this._minIndex||this._minCoord.equals(this._minDe.getCoordinate()),\"inconsistency in rightmost processing\"),0===this._minIndex?this.findRightmostEdgeAtNode():this.findRightmostEdgeAtVertex(),this._orientedDe=this._minDe,this.getRightmostSide(this._minDe,this._minIndex)===tt.LEFT&&(this._orientedDe=this._minDe.getSym())}}],[{key:\"constructor_\",value:function(){this._minIndex=-1,this._minCoord=null,this._minDe=null,this._orientedDe=null}}]),e}(),pt=function(e){r(o,e);var i=c(o);function o(e,n){var r;return t(this,o),(r=i.call(this,n?e+\" [ \"+n+\" ]\":e)).pt=n?new z(n):void 0,r.name=Object.keys({TopologyException:o})[0],r}return n(o,[{key:\"getCoordinate\",value:function(){return this.pt}}]),o}(F),vt=function(){function e(){t(this,e),this.array=[]}return n(e,[{key:\"addLast\",value:function(t){this.array.push(t)}},{key:\"removeFirst\",value:function(){return this.array.shift()}},{key:\"isEmpty\",value:function(){return 0===this.array.length}}]),e}(),dt=function(e,i){r(s,e);var o=c(s);function s(e){var n;return t(this,s),(n=o.call(this)).array=[],e instanceof H&&n.addAll(e),n}return n(s,[{key:\"interfaces_\",get:function(){return[rt,H]}},{key:\"ensureCapacity\",value:function(){}},{key:\"add\",value:function(t){return 1===arguments.length?this.array.push(t):this.array.splice(arguments[0],0,arguments[1]),!0}},{key:\"clear\",value:function(){this.array=[]}},{key:\"addAll\",value:function(t){var e,n=d(t);try{for(n.s();!(e=n.n()).done;){var r=e.value;this.array.push(r)}}catch(t){n.e(t)}finally{n.f()}}},{key:\"set\",value:function(t,e){var n=this.array[t];return this.array[t]=e,n}},{key:\"iterator\",value:function(){return new yt(this)}},{key:\"get\",value:function(t){if(t<0||t>=this.size())throw new nt;return this.array[t]}},{key:\"isEmpty\",value:function(){return 0===this.array.length}},{key:\"sort\",value:function(t){t?this.array.sort((function(e,n){return t.compare(e,n)})):this.array.sort()}},{key:\"size\",value:function(){return this.array.length}},{key:\"toArray\",value:function(){return this.array.slice()}},{key:\"remove\",value:function(t){for(var e=0,n=this.array.length;e<n;e++)if(this.array[e]===t)return!!this.array.splice(e,1);return!1}},{key:i,value:function(){return this.array.values()}}]),s}(rt,Symbol.iterator),yt=function(){function e(n){t(this,e),this.arrayList=n,this.position=0}return n(e,[{key:\"next\",value:function(){if(this.position===this.arrayList.size())throw new W;return this.arrayList.get(this.position++)}},{key:\"hasNext\",value:function(){return this.position<this.arrayList.size()}},{key:\"set\",value:function(t){return this.arrayList.set(this.position-1,t)}},{key:\"remove\",value:function(){this.arrayList.remove(this.arrayList.get(this.position))}}]),e}(),mt=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"clearVisitedEdges\",value:function(){for(var t=this._dirEdgeList.iterator();t.hasNext();)t.next().setVisited(!1)}},{key:\"getRightmostCoordinate\",value:function(){return this._rightMostCoord}},{key:\"computeNodeDepth\",value:function(t){for(var e=null,n=t.getEdges().iterator();n.hasNext();){var r=n.next();if(r.isVisited()||r.getSym().isVisited()){e=r;break}}if(null===e)throw new pt(\"unable to find edge to compute depths at \"+t.getCoordinate());t.getEdges().computeDepths(e);for(var i=t.getEdges().iterator();i.hasNext();){var o=i.next();o.setVisited(!0),this.copySymDepths(o)}}},{key:\"computeDepth\",value:function(t){this.clearVisitedEdges();var e=this._finder.getEdge();e.getNode(),e.getLabel(),e.setEdgeDepths(tt.RIGHT,t),this.copySymDepths(e),this.computeDepths(e)}},{key:\"create\",value:function(t){this.addReachable(t),this._finder.findEdge(this._dirEdgeList),this._rightMostCoord=this._finder.getCoordinate()}},{key:\"findResultEdges\",value:function(){for(var t=this._dirEdgeList.iterator();t.hasNext();){var e=t.next();e.getDepth(tt.RIGHT)>=1&&e.getDepth(tt.LEFT)<=0&&!e.isInteriorAreaEdge()&&e.setInResult(!0)}}},{key:\"computeDepths\",value:function(t){var e=new Q,n=new vt,r=t.getNode();for(n.addLast(r),e.add(r),t.setVisited(!0);!n.isEmpty();){var i=n.removeFirst();e.add(i),this.computeNodeDepth(i);for(var o=i.getEdges().iterator();o.hasNext();){var s=o.next().getSym();if(!s.isVisited()){var a=s.getNode();e.contains(a)||(n.addLast(a),e.add(a))}}}}},{key:\"compareTo\",value:function(t){var e=t;return this._rightMostCoord.x<e._rightMostCoord.x?-1:this._rightMostCoord.x>e._rightMostCoord.x?1:0}},{key:\"getEnvelope\",value:function(){if(null===this._env){for(var t=new X,e=this._dirEdgeList.iterator();e.hasNext();)for(var n=e.next().getEdge().getCoordinates(),r=0;r<n.length-1;r++)t.expandToInclude(n[r]);this._env=t}return this._env}},{key:\"addReachable\",value:function(t){var e=new it;for(e.add(t);!e.empty();){var n=e.pop();this.add(n,e)}}},{key:\"copySymDepths\",value:function(t){var e=t.getSym();e.setDepth(tt.LEFT,t.getDepth(tt.RIGHT)),e.setDepth(tt.RIGHT,t.getDepth(tt.LEFT))}},{key:\"add\",value:function(t,e){t.setVisited(!0),this._nodes.add(t);for(var n=t.getEdges().iterator();n.hasNext();){var r=n.next();this._dirEdgeList.add(r);var i=r.getSym().getNode();i.isVisited()||e.push(i)}}},{key:\"getNodes\",value:function(){return this._nodes}},{key:\"getDirectedEdges\",value:function(){return this._dirEdgeList}},{key:\"interfaces_\",get:function(){return[k]}}],[{key:\"constructor_\",value:function(){this._finder=null,this._dirEdgeList=new dt,this._nodes=new dt,this._rightMostCoord=null,this._env=null,this._finder=new gt}}]),e}(),_t=function(){function e(){t(this,e)}return n(e,null,[{key:\"intersection\",value:function(t,e,n,r){var i=t.x<e.x?t.x:e.x,o=t.y<e.y?t.y:e.y,s=t.x>e.x?t.x:e.x,a=t.y>e.y?t.y:e.y,u=n.x<r.x?n.x:r.x,l=n.y<r.y?n.y:r.y,h=n.x>r.x?n.x:r.x,c=n.y>r.y?n.y:r.y,f=((i>u?i:u)+(s<h?s:h))/2,g=((o>l?o:l)+(a<c?a:c))/2,p=t.x-f,v=t.y-g,d=e.x-f,y=e.y-g,m=n.x-f,_=n.y-g,x=r.x-f,E=r.y-g,k=v-y,b=d-p,w=p*y-d*v,I=_-E,N=x-m,S=m*E-x*_,M=k*N-I*b,L=(b*S-N*w)/M,P=(I*w-k*S)/M;return A.isNaN(L)||A.isInfinite(L)||A.isNaN(P)||A.isInfinite(P)?null:new z(L+f,P+g)}}]),e}(),xt=function(){function e(){t(this,e)}return n(e,null,[{key:\"arraycopy\",value:function(t,e,n,r,i){for(var o=0,s=e;s<e+i;s++)n[r+o]=t[s],o++}},{key:\"getProperty\",value:function(t){return{\"line.separator\":\"\\n\"}[t]}}]),e}(),Et=function(){function e(){t(this,e)}return n(e,null,[{key:\"log10\",value:function(t){var n=Math.log(t);return A.isInfinite(n)||A.isNaN(n)?n:n/e.LOG_10}},{key:\"min\",value:function(t,e,n,r){var i=t;return e<i&&(i=e),n<i&&(i=n),r<i&&(i=r),i}},{key:\"clamp\",value:function(){if(\"number\"==typeof arguments[2]&&\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],e=arguments[1],n=arguments[2];return t<e?e:t>n?n:t}if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var r=arguments[0],i=arguments[1],o=arguments[2];return r<i?i:r>o?o:r}}},{key:\"wrap\",value:function(t,e){return t<0?e- -t%e:t%e}},{key:\"max\",value:function(){if(3===arguments.length){var t=arguments[1],e=arguments[2],n=arguments[0];return t>n&&(n=t),e>n&&(n=e),n}if(4===arguments.length){var r=arguments[1],i=arguments[2],o=arguments[3],s=arguments[0];return r>s&&(s=r),i>s&&(s=i),o>s&&(s=o),s}}},{key:\"average\",value:function(t,e){return(t+e)/2}}]),e}();Et.LOG_10=Math.log(10);var kt=function(){function e(){t(this,e)}return n(e,null,[{key:\"segmentToSegment\",value:function(t,n,r,i){if(t.equals(n))return e.pointToSegment(t,r,i);if(r.equals(i))return e.pointToSegment(i,t,n);var o=!1;if(X.intersects(t,n,r,i)){var s=(n.x-t.x)*(i.y-r.y)-(n.y-t.y)*(i.x-r.x);if(0===s)o=!0;else{var a=(t.y-r.y)*(i.x-r.x)-(t.x-r.x)*(i.y-r.y),u=((t.y-r.y)*(n.x-t.x)-(t.x-r.x)*(n.y-t.y))/s,l=a/s;(l<0||l>1||u<0||u>1)&&(o=!0)}}else o=!0;return o?Et.min(e.pointToSegment(t,r,i),e.pointToSegment(n,r,i),e.pointToSegment(r,t,n),e.pointToSegment(i,t,n)):0}},{key:\"pointToSegment\",value:function(t,e,n){if(e.x===n.x&&e.y===n.y)return t.distance(e);var r=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),i=((t.x-e.x)*(n.x-e.x)+(t.y-e.y)*(n.y-e.y))/r;if(i<=0)return t.distance(e);if(i>=1)return t.distance(n);var o=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/r;return Math.abs(o)*Math.sqrt(r)}},{key:\"pointToLinePerpendicular\",value:function(t,e,n){var r=(n.x-e.x)*(n.x-e.x)+(n.y-e.y)*(n.y-e.y),i=((e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y))/r;return Math.abs(i)*Math.sqrt(r)}},{key:\"pointToSegmentString\",value:function(t,n){if(0===n.length)throw new x(\"Line array must contain at least one vertex\");for(var r=t.distance(n[0]),i=0;i<n.length-1;i++){var o=e.pointToSegment(t,n[i],n[i+1]);o<r&&(r=o)}return r}}]),e}(),bt=function(){function e(){t(this,e)}return n(e,[{key:\"create\",value:function(){if(1===arguments.length)arguments[0]instanceof Array||ot(arguments[0],ct);else if(2===arguments.length);else if(3===arguments.length){var t=arguments[0],e=arguments[1];return this.create(t,e)}}}]),e}(),wt=function(){function e(){t(this,e)}return n(e,[{key:\"filter\",value:function(t){}}]),e}(),It=function(){function e(){t(this,e)}return n(e,null,[{key:\"ofLine\",value:function(t){var e=t.size();if(e<=1)return 0;var n=0,r=new z;t.getCoordinate(0,r);for(var i=r.x,o=r.y,s=1;s<e;s++){t.getCoordinate(s,r);var a=r.x,u=r.y,l=a-i,h=u-o;n+=Math.sqrt(l*l+h*h),i=a,o=u}return n}}]),e}(),Nt=function e(){t(this,e)},St=function(){function e(){t(this,e)}return n(e,null,[{key:\"copyCoord\",value:function(t,e,n,r){for(var i=Math.min(t.getDimension(),n.getDimension()),o=0;o<i;o++)n.setOrdinate(r,o,t.getOrdinate(e,o))}},{key:\"isRing\",value:function(t){var e=t.size();return 0===e||!(e<=3)&&t.getOrdinate(0,ct.X)===t.getOrdinate(e-1,ct.X)&&t.getOrdinate(0,ct.Y)===t.getOrdinate(e-1,ct.Y)}},{key:\"scroll\",value:function(){if(2===arguments.length){if(ot(arguments[0],ct)&&Number.isInteger(arguments[1])){var t=arguments[0],n=arguments[1];e.scroll(t,n,e.isRing(t))}else if(ot(arguments[0],ct)&&arguments[1]instanceof z){var r=arguments[0],i=arguments[1],o=e.indexOf(i,r);if(o<=0)return null;e.scroll(r,o)}}else if(3===arguments.length){var s=arguments[0],a=arguments[1],u=arguments[2];if(a<=0)return null;for(var l=s.copy(),h=u?s.size()-1:s.size(),c=0;c<h;c++)for(var f=0;f<s.getDimension();f++)s.setOrdinate(c,f,l.getOrdinate((a+c)%h,f));if(u)for(var g=0;g<s.getDimension();g++)s.setOrdinate(h,g,s.getOrdinate(0,g))}}},{key:\"isEqual\",value:function(t,e){var n=t.size();if(n!==e.size())return!1;for(var r=Math.min(t.getDimension(),e.getDimension()),i=0;i<n;i++)for(var o=0;o<r;o++){var s=t.getOrdinate(i,o),a=e.getOrdinate(i,o);if(!(t.getOrdinate(i,o)===e.getOrdinate(i,o)||A.isNaN(s)&&A.isNaN(a)))return!1}return!0}},{key:\"minCoordinateIndex\",value:function(){if(1===arguments.length){var t=arguments[0];return e.minCoordinateIndex(t,0,t.size()-1)}if(3===arguments.length){for(var n=arguments[0],r=arguments[2],i=-1,o=null,s=arguments[1];s<=r;s++){var a=n.getCoordinate(s);(null===o||o.compareTo(a)>0)&&(o=a,i=s)}return i}}},{key:\"extend\",value:function(t,n,r){var i=t.create(r,n.getDimension()),o=n.size();if(e.copy(n,0,i,0,o),o>0)for(var s=o;s<r;s++)e.copy(n,o-1,i,s,1);return i}},{key:\"reverse\",value:function(t){for(var n=t.size()-1,r=Math.trunc(n/2),i=0;i<=r;i++)e.swap(t,i,n-i)}},{key:\"swap\",value:function(t,e,n){if(e===n)return null;for(var r=0;r<t.getDimension();r++){var i=t.getOrdinate(e,r);t.setOrdinate(e,r,t.getOrdinate(n,r)),t.setOrdinate(n,r,i)}}},{key:\"copy\",value:function(t,n,r,i,o){for(var s=0;s<o;s++)e.copyCoord(t,n+s,r,i+s)}},{key:\"ensureValidRing\",value:function(t,n){var r=n.size();return 0===r?n:r<=3?e.createClosedRing(t,n,4):n.getOrdinate(0,ct.X)===n.getOrdinate(r-1,ct.X)&&n.getOrdinate(0,ct.Y)===n.getOrdinate(r-1,ct.Y)?n:e.createClosedRing(t,n,r+1)}},{key:\"indexOf\",value:function(t,e){for(var n=0;n<e.size();n++)if(t.x===e.getOrdinate(n,ct.X)&&t.y===e.getOrdinate(n,ct.Y))return n;return-1}},{key:\"createClosedRing\",value:function(t,n,r){var i=t.create(r,n.getDimension()),o=n.size();e.copy(n,0,i,0,o);for(var s=o;s<r;s++)e.copy(n,0,i,s,1);return i}},{key:\"minCoordinate\",value:function(t){for(var e=null,n=0;n<t.size();n++){var r=t.getCoordinate(n);(null===e||e.compareTo(r)>0)&&(e=r)}return e}}]),e}(),Mt=function(){function e(){t(this,e)}return n(e,null,[{key:\"toDimensionSymbol\",value:function(t){switch(t){case e.FALSE:return e.SYM_FALSE;case e.TRUE:return e.SYM_TRUE;case e.DONTCARE:return e.SYM_DONTCARE;case e.P:return e.SYM_P;case e.L:return e.SYM_L;case e.A:return e.SYM_A}throw new x(\"Unknown dimension value: \"+t)}},{key:\"toDimensionValue\",value:function(t){switch(ut.toUpperCase(t)){case e.SYM_FALSE:return e.FALSE;case e.SYM_TRUE:return e.TRUE;case e.SYM_DONTCARE:return e.DONTCARE;case e.SYM_P:return e.P;case e.SYM_L:return e.L;case e.SYM_A:return e.A}throw new x(\"Unknown dimension symbol: \"+t)}}]),e}();Mt.P=0,Mt.L=1,Mt.A=2,Mt.FALSE=-1,Mt.TRUE=-2,Mt.DONTCARE=-3,Mt.SYM_FALSE=\"F\",Mt.SYM_TRUE=\"T\",Mt.SYM_DONTCARE=\"*\",Mt.SYM_P=\"0\",Mt.SYM_L=\"1\",Mt.SYM_A=\"2\";var Lt=function(){function e(){t(this,e)}return n(e,[{key:\"filter\",value:function(t){}}]),e}(),Pt=function(){function e(){t(this,e)}return n(e,[{key:\"filter\",value:function(t,e){}},{key:\"isDone\",value:function(){}},{key:\"isGeometryChanged\",value:function(){}}]),e}(),Ct=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"computeEnvelopeInternal\",value:function(){return this.isEmpty()?new X:this._points.expandEnvelope(new X)}},{key:\"isRing\",value:function(){return this.isClosed()&&this.isSimple()}},{key:\"getCoordinates\",value:function(){return this._points.toCoordinateArray()}},{key:\"copyInternal\",value:function(){return new s(this._points.copy(),this._factory)}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof U){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t;if(this._points.size()!==n._points.size())return!1;for(var r=0;r<this._points.size();r++)if(!this.equal(this._points.getCoordinate(r),n._points.getCoordinate(r),e))return!1;return!0}return f(i(s.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"normalize\",value:function(){for(var t=0;t<Math.trunc(this._points.size()/2);t++){var e=this._points.size()-1-t;if(!this._points.getCoordinate(t).equals(this._points.getCoordinate(e))){if(this._points.getCoordinate(t).compareTo(this._points.getCoordinate(e))>0){var n=this._points.copy();St.reverse(n),this._points=n}return null}}}},{key:\"getCoordinate\",value:function(){return this.isEmpty()?null:this._points.getCoordinate(0)}},{key:\"getBoundaryDimension\",value:function(){return this.isClosed()?Mt.FALSE:0}},{key:\"isClosed\",value:function(){return!this.isEmpty()&&this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints()-1))}},{key:\"reverseInternal\",value:function(){var t=this._points.copy();return St.reverse(t),this.getFactory().createLineString(t)}},{key:\"getEndPoint\",value:function(){return this.isEmpty()?null:this.getPointN(this.getNumPoints()-1)}},{key:\"getTypeCode\",value:function(){return U.TYPECODE_LINESTRING}},{key:\"getDimension\",value:function(){return 1}},{key:\"getLength\",value:function(){return It.ofLine(this._points)}},{key:\"getNumPoints\",value:function(){return this._points.size()}},{key:\"compareToSameClass\",value:function(){if(1===arguments.length){for(var t=arguments[0],e=0,n=0;e<this._points.size()&&n<t._points.size();){var r=this._points.getCoordinate(e).compareTo(t._points.getCoordinate(n));if(0!==r)return r;e++,n++}return e<this._points.size()?1:n<t._points.size()?-1:0}if(2===arguments.length){var i=arguments[0];return arguments[1].compare(this._points,i._points)}}},{key:\"apply\",value:function(){if(ot(arguments[0],wt))for(var t=arguments[0],e=0;e<this._points.size();e++)t.filter(this._points.getCoordinate(e));else if(ot(arguments[0],Pt)){var n=arguments[0];if(0===this._points.size())return null;for(var r=0;r<this._points.size()&&(n.filter(this._points,r),!n.isDone());r++);n.isGeometryChanged()&&this.geometryChanged()}else(ot(arguments[0],Lt)||ot(arguments[0],E))&&arguments[0].filter(this)}},{key:\"getBoundary\",value:function(){throw new J}},{key:\"isEquivalentClass\",value:function(t){return t instanceof s}},{key:\"getCoordinateN\",value:function(t){return this._points.getCoordinate(t)}},{key:\"getGeometryType\",value:function(){return U.TYPENAME_LINESTRING}},{key:\"getCoordinateSequence\",value:function(){return this._points}},{key:\"isEmpty\",value:function(){return 0===this._points.size()}},{key:\"init\",value:function(t){if(null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),1===t.size())throw new x(\"Invalid number of points in LineString (found \"+t.size()+\" - must be 0 or >= 2)\");this._points=t}},{key:\"isCoordinate\",value:function(t){for(var e=0;e<this._points.size();e++)if(this._points.getCoordinate(e).equals(t))return!0;return!1}},{key:\"getStartPoint\",value:function(){return this.isEmpty()?null:this.getPointN(0)}},{key:\"getPointN\",value:function(t){return this.getFactory().createPoint(this._points.getCoordinate(t))}},{key:\"interfaces_\",get:function(){return[Nt]}}],[{key:\"constructor_\",value:function(){if(this._points=null,0===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];U.constructor_.call(this,e),this.init(t)}}}]),s}(U),Tt=function e(){t(this,e)},Ot=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"computeEnvelopeInternal\",value:function(){if(this.isEmpty())return new X;var t=new X;return t.expandToInclude(this._coordinates.getX(0),this._coordinates.getY(0)),t}},{key:\"getCoordinates\",value:function(){return this.isEmpty()?[]:[this.getCoordinate()]}},{key:\"copyInternal\",value:function(){return new s(this._coordinates.copy(),this._factory)}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof U){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&(!(!this.isEmpty()||!t.isEmpty())||this.isEmpty()===t.isEmpty()&&this.equal(t.getCoordinate(),this.getCoordinate(),e))}return f(i(s.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"normalize\",value:function(){}},{key:\"getCoordinate\",value:function(){return 0!==this._coordinates.size()?this._coordinates.getCoordinate(0):null}},{key:\"getBoundaryDimension\",value:function(){return Mt.FALSE}},{key:\"reverseInternal\",value:function(){return this.getFactory().createPoint(this._coordinates.copy())}},{key:\"getTypeCode\",value:function(){return U.TYPECODE_POINT}},{key:\"getDimension\",value:function(){return 0}},{key:\"getNumPoints\",value:function(){return this.isEmpty()?0:1}},{key:\"getX\",value:function(){if(null===this.getCoordinate())throw new IllegalStateException(\"getX called on empty Point\");return this.getCoordinate().x}},{key:\"compareToSameClass\",value:function(){if(1===arguments.length){var t=arguments[0];return this.getCoordinate().compareTo(t.getCoordinate())}if(2===arguments.length){var e=arguments[0];return arguments[1].compare(this._coordinates,e._coordinates)}}},{key:\"apply\",value:function(){if(ot(arguments[0],wt)){var t=arguments[0];if(this.isEmpty())return null;t.filter(this.getCoordinate())}else if(ot(arguments[0],Pt)){var e=arguments[0];if(this.isEmpty())return null;e.filter(this._coordinates,0),e.isGeometryChanged()&&this.geometryChanged()}else(ot(arguments[0],Lt)||ot(arguments[0],E))&&arguments[0].filter(this)}},{key:\"getBoundary\",value:function(){return this.getFactory().createGeometryCollection()}},{key:\"getGeometryType\",value:function(){return U.TYPENAME_POINT}},{key:\"getCoordinateSequence\",value:function(){return this._coordinates}},{key:\"getY\",value:function(){if(null===this.getCoordinate())throw new IllegalStateException(\"getY called on empty Point\");return this.getCoordinate().y}},{key:\"isEmpty\",value:function(){return 0===this._coordinates.size()}},{key:\"init\",value:function(t){null===t&&(t=this.getFactory().getCoordinateSequenceFactory().create([])),V.isTrue(t.size()<=1),this._coordinates=t}},{key:\"isSimple\",value:function(){return!0}},{key:\"interfaces_\",get:function(){return[Tt]}}],[{key:\"constructor_\",value:function(){this._coordinates=null;var t=arguments[0],e=arguments[1];U.constructor_.call(this,e),this.init(t)}}]),s}(U),Rt=function(){function e(){t(this,e)}return n(e,null,[{key:\"ofRing\",value:function(){if(arguments[0]instanceof Array){var t=arguments[0];return Math.abs(e.ofRingSigned(t))}if(ot(arguments[0],ct)){var n=arguments[0];return Math.abs(e.ofRingSigned(n))}}},{key:\"ofRingSigned\",value:function(){if(arguments[0]instanceof Array){var t=arguments[0];if(t.length<3)return 0;for(var e=0,n=t[0].x,r=1;r<t.length-1;r++){var i=t[r].x-n,o=t[r+1].y;e+=i*(t[r-1].y-o)}return e/2}if(ot(arguments[0],ct)){var s=arguments[0],a=s.size();if(a<3)return 0;var u=new z,l=new z,h=new z;s.getCoordinate(0,l),s.getCoordinate(1,h);var c=l.x;h.x-=c;for(var f=0,g=1;g<a-1;g++)u.y=l.y,l.x=h.x,l.y=h.y,s.getCoordinate(g+1,h),h.x-=c,f+=l.x*(u.y-h.y);return f/2}}}]),e}(),At=function(){function e(){t(this,e)}return n(e,null,[{key:\"sort\",value:function(){var t=arguments,e=arguments[0];if(1===arguments.length)e.sort((function(t,e){return t.compareTo(e)}));else if(2===arguments.length)e.sort((function(e,n){return t[1].compare(e,n)}));else if(3===arguments.length){var n=e.slice(arguments[1],arguments[2]);n.sort();var r=e.slice(0,arguments[1]).concat(n,e.slice(arguments[2],e.length));e.splice(0,e.length);var i,o=d(r);try{for(o.s();!(i=o.n()).done;){var s=i.value;e.push(s)}}catch(t){o.e(t)}finally{o.f()}}else if(4===arguments.length){var a=e.slice(arguments[1],arguments[2]);a.sort((function(e,n){return t[3].compare(e,n)}));var u=e.slice(0,arguments[1]).concat(a,e.slice(arguments[2],e.length));e.splice(0,e.length);var l,h=d(u);try{for(h.s();!(l=h.n()).done;){var c=l.value;e.push(c)}}catch(t){h.e(t)}finally{h.f()}}}},{key:\"asList\",value:function(t){var e,n=new dt,r=d(t);try{for(r.s();!(e=r.n()).done;){var i=e.value;n.add(i)}}catch(t){r.e(t)}finally{r.f()}return n}},{key:\"copyOf\",value:function(t,e){return t.slice(0,e)}}]),e}(),Dt=function e(){t(this,e)},Ft=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"computeEnvelopeInternal\",value:function(){return this._shell.getEnvelopeInternal()}},{key:\"getCoordinates\",value:function(){if(this.isEmpty())return[];for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=this._shell.getCoordinates(),r=0;r<n.length;r++)t[++e]=n[r];for(var i=0;i<this._holes.length;i++)for(var o=this._holes[i].getCoordinates(),s=0;s<o.length;s++)t[++e]=o[s];return t}},{key:\"getArea\",value:function(){var t=0;t+=Rt.ofRing(this._shell.getCoordinateSequence());for(var e=0;e<this._holes.length;e++)t-=Rt.ofRing(this._holes[e].getCoordinateSequence());return t}},{key:\"copyInternal\",value:function(){for(var t=this._shell.copy(),e=new Array(this._holes.length).fill(null),n=0;n<this._holes.length;n++)e[n]=this._holes[n].copy();return new s(t,e,this._factory)}},{key:\"isRectangle\",value:function(){if(0!==this.getNumInteriorRing())return!1;if(null===this._shell)return!1;if(5!==this._shell.getNumPoints())return!1;for(var t=this._shell.getCoordinateSequence(),e=this.getEnvelopeInternal(),n=0;n<5;n++){var r=t.getX(n);if(r!==e.getMinX()&&r!==e.getMaxX())return!1;var i=t.getY(n);if(i!==e.getMinY()&&i!==e.getMaxY())return!1}for(var o=t.getX(0),s=t.getY(0),a=1;a<=4;a++){var u=t.getX(a),l=t.getY(a);if(u!==o==(l!==s))return!1;o=u,s=l}return!0}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof U){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t,r=this._shell,o=n._shell;if(!r.equalsExact(o,e))return!1;if(this._holes.length!==n._holes.length)return!1;for(var a=0;a<this._holes.length;a++)if(!this._holes[a].equalsExact(n._holes[a],e))return!1;return!0}return f(i(s.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"normalize\",value:function(){if(0===arguments.length){this._shell=this.normalized(this._shell,!0);for(var t=0;t<this._holes.length;t++)this._holes[t]=this.normalized(this._holes[t],!1);At.sort(this._holes)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];if(e.isEmpty())return null;var r=e.getCoordinateSequence(),i=St.minCoordinateIndex(r,0,r.size()-2);St.scroll(r,i,!0),ft.isCCW(r)===n&&St.reverse(r)}}},{key:\"getCoordinate\",value:function(){return this._shell.getCoordinate()}},{key:\"getNumInteriorRing\",value:function(){return this._holes.length}},{key:\"getBoundaryDimension\",value:function(){return 1}},{key:\"reverseInternal\",value:function(){for(var t=this.getExteriorRing().reverse(),e=new Array(this.getNumInteriorRing()).fill(null),n=0;n<e.length;n++)e[n]=this.getInteriorRingN(n).reverse();return this.getFactory().createPolygon(t,e)}},{key:\"getTypeCode\",value:function(){return U.TYPECODE_POLYGON}},{key:\"getDimension\",value:function(){return 2}},{key:\"getLength\",value:function(){var t=0;t+=this._shell.getLength();for(var e=0;e<this._holes.length;e++)t+=this._holes[e].getLength();return t}},{key:\"getNumPoints\",value:function(){for(var t=this._shell.getNumPoints(),e=0;e<this._holes.length;e++)t+=this._holes[e].getNumPoints();return t}},{key:\"convexHull\",value:function(){return this.getExteriorRing().convexHull()}},{key:\"normalized\",value:function(t,e){var n=t.copy();return this.normalize(n,e),n}},{key:\"compareToSameClass\",value:function(){if(1===arguments.length){var t=arguments[0],e=this._shell,n=t._shell;return e.compareToSameClass(n)}if(2===arguments.length){var r=arguments[1],i=arguments[0],o=this._shell,s=i._shell,a=o.compareToSameClass(s,r);if(0!==a)return a;for(var u=this.getNumInteriorRing(),l=i.getNumInteriorRing(),h=0;h<u&&h<l;){var c=this.getInteriorRingN(h),f=i.getInteriorRingN(h),g=c.compareToSameClass(f,r);if(0!==g)return g;h++}return h<u?1:h<l?-1:0}}},{key:\"apply\",value:function(){if(ot(arguments[0],wt)){var t=arguments[0];this._shell.apply(t);for(var e=0;e<this._holes.length;e++)this._holes[e].apply(t)}else if(ot(arguments[0],Pt)){var n=arguments[0];if(this._shell.apply(n),!n.isDone())for(var r=0;r<this._holes.length&&(this._holes[r].apply(n),!n.isDone());r++);n.isGeometryChanged()&&this.geometryChanged()}else if(ot(arguments[0],Lt))arguments[0].filter(this);else if(ot(arguments[0],E)){var i=arguments[0];i.filter(this),this._shell.apply(i);for(var o=0;o<this._holes.length;o++)this._holes[o].apply(i)}}},{key:\"getBoundary\",value:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();var t=new Array(this._holes.length+1).fill(null);t[0]=this._shell;for(var e=0;e<this._holes.length;e++)t[e+1]=this._holes[e];return t.length<=1?this.getFactory().createLinearRing(t[0].getCoordinateSequence()):this.getFactory().createMultiLineString(t)}},{key:\"getGeometryType\",value:function(){return U.TYPENAME_POLYGON}},{key:\"getExteriorRing\",value:function(){return this._shell}},{key:\"isEmpty\",value:function(){return this._shell.isEmpty()}},{key:\"getInteriorRingN\",value:function(t){return this._holes[t]}},{key:\"interfaces_\",get:function(){return[Dt]}}],[{key:\"constructor_\",value:function(){this._shell=null,this._holes=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(U.constructor_.call(this,n),null===t&&(t=this.getFactory().createLinearRing()),null===e&&(e=[]),U.hasNullElements(e))throw new x(\"holes must not contain null elements\");if(t.isEmpty()&&U.hasNonEmptyElements(e))throw new x(\"shell is empty but holes are not\");this._shell=t,this._holes=e}}]),s}(U),qt=function(e){r(i,e);var n=c(i);function i(){return t(this,i),n.apply(this,arguments)}return i}(K),Vt=function(e){r(o,e);var i=c(o);function o(e){var n;return t(this,o),(n=i.call(this)).array=[],e instanceof H&&n.addAll(e),n}return n(o,[{key:\"contains\",value:function(t){var e,n=d(this.array);try{for(n.s();!(e=n.n()).done;)if(0===e.value.compareTo(t))return!0}catch(t){n.e(t)}finally{n.f()}return!1}},{key:\"add\",value:function(t){if(this.contains(t))return!1;for(var e=0,n=this.array.length;e<n;e++)if(1===this.array[e].compareTo(t))return!!this.array.splice(e,0,t);return this.array.push(t),!0}},{key:\"addAll\",value:function(t){var e,n=d(t);try{for(n.s();!(e=n.n()).done;){var r=e.value;this.add(r)}}catch(t){n.e(t)}finally{n.f()}return!0}},{key:\"remove\",value:function(){throw new J}},{key:\"size\",value:function(){return this.array.length}},{key:\"isEmpty\",value:function(){return 0===this.array.length}},{key:\"toArray\",value:function(){return this.array.slice()}},{key:\"iterator\",value:function(){return new Gt(this.array)}}]),o}(qt),Gt=function(){function e(n){t(this,e),this.array=n,this.position=0}return n(e,[{key:\"next\",value:function(){if(this.position===this.array.length)throw new W;return this.array[this.position++]}},{key:\"hasNext\",value:function(){return this.position<this.array.length}},{key:\"remove\",value:function(){throw new J}}]),e}(),Bt=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"computeEnvelopeInternal\",value:function(){for(var t=new X,e=0;e<this._geometries.length;e++)t.expandToInclude(this._geometries[e].getEnvelopeInternal());return t}},{key:\"getGeometryN\",value:function(t){return this._geometries[t]}},{key:\"getCoordinates\",value:function(){for(var t=new Array(this.getNumPoints()).fill(null),e=-1,n=0;n<this._geometries.length;n++)for(var r=this._geometries[n].getCoordinates(),i=0;i<r.length;i++)t[++e]=r[i];return t}},{key:\"getArea\",value:function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getArea();return t}},{key:\"copyInternal\",value:function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new s(t,this._factory)}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof U){var t=arguments[0],e=arguments[1];if(!this.isEquivalentClass(t))return!1;var n=t;if(this._geometries.length!==n._geometries.length)return!1;for(var r=0;r<this._geometries.length;r++)if(!this._geometries[r].equalsExact(n._geometries[r],e))return!1;return!0}return f(i(s.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"normalize\",value:function(){for(var t=0;t<this._geometries.length;t++)this._geometries[t].normalize();At.sort(this._geometries)}},{key:\"getCoordinate\",value:function(){return this.isEmpty()?null:this._geometries[0].getCoordinate()}},{key:\"getBoundaryDimension\",value:function(){for(var t=Mt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getBoundaryDimension());return t}},{key:\"reverseInternal\",value:function(){for(var t=this._geometries.length,e=new dt(t),n=0;n<t;n++)e.add(this._geometries[n].reverse());return this.getFactory().buildGeometry(e)}},{key:\"getTypeCode\",value:function(){return U.TYPECODE_GEOMETRYCOLLECTION}},{key:\"getDimension\",value:function(){for(var t=Mt.FALSE,e=0;e<this._geometries.length;e++)t=Math.max(t,this._geometries[e].getDimension());return t}},{key:\"getLength\",value:function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getLength();return t}},{key:\"getNumPoints\",value:function(){for(var t=0,e=0;e<this._geometries.length;e++)t+=this._geometries[e].getNumPoints();return t}},{key:\"getNumGeometries\",value:function(){return this._geometries.length}},{key:\"compareToSameClass\",value:function(){if(1===arguments.length){var t=arguments[0],e=new Vt(At.asList(this._geometries)),n=new Vt(At.asList(t._geometries));return this.compare(e,n)}if(2===arguments.length){for(var r=arguments[1],i=arguments[0],o=this.getNumGeometries(),s=i.getNumGeometries(),a=0;a<o&&a<s;){var u=this.getGeometryN(a),l=i.getGeometryN(a),h=u.compareToSameClass(l,r);if(0!==h)return h;a++}return a<o?1:a<s?-1:0}}},{key:\"apply\",value:function(){if(ot(arguments[0],wt))for(var t=arguments[0],e=0;e<this._geometries.length;e++)this._geometries[e].apply(t);else if(ot(arguments[0],Pt)){var n=arguments[0];if(0===this._geometries.length)return null;for(var r=0;r<this._geometries.length&&(this._geometries[r].apply(n),!n.isDone());r++);n.isGeometryChanged()&&this.geometryChanged()}else if(ot(arguments[0],Lt)){var i=arguments[0];i.filter(this);for(var o=0;o<this._geometries.length;o++)this._geometries[o].apply(i)}else if(ot(arguments[0],E)){var s=arguments[0];s.filter(this);for(var a=0;a<this._geometries.length;a++)this._geometries[a].apply(s)}}},{key:\"getBoundary\",value:function(){return U.checkNotGeometryCollection(this),V.shouldNeverReachHere(),null}},{key:\"getGeometryType\",value:function(){return U.TYPENAME_GEOMETRYCOLLECTION}},{key:\"isEmpty\",value:function(){for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isEmpty())return!1;return!0}}],[{key:\"constructor_\",value:function(){if(this._geometries=null,0===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];if(U.constructor_.call(this,e),null===t&&(t=[]),U.hasNullElements(t))throw new x(\"geometries must not contain null elements\");this._geometries=t}}}]),s}(U),Yt=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"copyInternal\",value:function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new s(t,this._factory)}},{key:\"isValid\",value:function(){return!0}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof U){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&f(i(s.prototype),\"equalsExact\",this).call(this,t,e)}return f(i(s.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"getCoordinate\",value:function(){if(1===arguments.length&&Number.isInteger(arguments[0])){var t=arguments[0];return this._geometries[t].getCoordinate()}return f(i(s.prototype),\"getCoordinate\",this).apply(this,arguments)}},{key:\"getBoundaryDimension\",value:function(){return Mt.FALSE}},{key:\"getTypeCode\",value:function(){return U.TYPECODE_MULTIPOINT}},{key:\"getDimension\",value:function(){return 0}},{key:\"getBoundary\",value:function(){return this.getFactory().createGeometryCollection()}},{key:\"getGeometryType\",value:function(){return U.TYPENAME_MULTIPOINT}},{key:\"interfaces_\",get:function(){return[Tt]}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];Bt.constructor_.call(this,t,e)}}]),s}(Bt),zt=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"copyInternal\",value:function(){return new s(this._points.copy(),this._factory)}},{key:\"getBoundaryDimension\",value:function(){return Mt.FALSE}},{key:\"isClosed\",value:function(){return!!this.isEmpty()||f(i(s.prototype),\"isClosed\",this).call(this)}},{key:\"reverseInternal\",value:function(){var t=this._points.copy();return St.reverse(t),this.getFactory().createLinearRing(t)}},{key:\"getTypeCode\",value:function(){return U.TYPECODE_LINEARRING}},{key:\"validateConstruction\",value:function(){if(!this.isEmpty()&&!f(i(s.prototype),\"isClosed\",this).call(this))throw new x(\"Points of LinearRing do not form a closed linestring\");if(this.getCoordinateSequence().size()>=1&&this.getCoordinateSequence().size()<s.MINIMUM_VALID_SIZE)throw new x(\"Invalid number of points in LinearRing (found \"+this.getCoordinateSequence().size()+\" - must be 0 or >= 4)\")}},{key:\"getGeometryType\",value:function(){return U.TYPENAME_LINEARRING}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];Ct.constructor_.call(this,t,e),this.validateConstruction()}}]),s}(Ct);zt.MINIMUM_VALID_SIZE=4;var jt=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),e=i.call(this),o.constructor_.apply(l(e),arguments),e}return n(o,[{key:\"setOrdinate\",value:function(t,e){switch(t){case o.X:this.x=e;break;case o.Y:this.y=e;break;default:throw new x(\"Invalid ordinate index: \"+t)}}},{key:\"getZ\",value:function(){return z.NULL_ORDINATE}},{key:\"getOrdinate\",value:function(t){switch(t){case o.X:return this.x;case o.Y:return this.y}throw new x(\"Invalid ordinate index: \"+t)}},{key:\"setZ\",value:function(t){throw new x(\"CoordinateXY dimension 2 does not support z-ordinate\")}},{key:\"copy\",value:function(){return new o(this)}},{key:\"toString\",value:function(){return\"(\"+this.x+\", \"+this.y+\")\"}},{key:\"setCoordinate\",value:function(t){this.x=t.x,this.y=t.y,this.z=t.getZ()}}],[{key:\"constructor_\",value:function(){if(0===arguments.length)z.constructor_.call(this);else if(1===arguments.length){if(arguments[0]instanceof o){var t=arguments[0];z.constructor_.call(this,t.x,t.y)}else if(arguments[0]instanceof z){var e=arguments[0];z.constructor_.call(this,e.x,e.y)}}else if(2===arguments.length){var n=arguments[0],r=arguments[1];z.constructor_.call(this,n,r,z.NULL_ORDINATE)}}}]),o}(z);jt.X=0,jt.Y=1,jt.Z=-1,jt.M=-1;var Xt=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),e=i.call(this),o.constructor_.apply(l(e),arguments),e}return n(o,[{key:\"getM\",value:function(){return this._m}},{key:\"setOrdinate\",value:function(t,e){switch(t){case o.X:this.x=e;break;case o.Y:this.y=e;break;case o.M:this._m=e;break;default:throw new x(\"Invalid ordinate index: \"+t)}}},{key:\"setM\",value:function(t){this._m=t}},{key:\"getZ\",value:function(){return z.NULL_ORDINATE}},{key:\"getOrdinate\",value:function(t){switch(t){case o.X:return this.x;case o.Y:return this.y;case o.M:return this._m}throw new x(\"Invalid ordinate index: \"+t)}},{key:\"setZ\",value:function(t){throw new x(\"CoordinateXY dimension 2 does not support z-ordinate\")}},{key:\"copy\",value:function(){return new o(this)}},{key:\"toString\",value:function(){return\"(\"+this.x+\", \"+this.y+\" m=\"+this.getM()+\")\"}},{key:\"setCoordinate\",value:function(t){this.x=t.x,this.y=t.y,this.z=t.getZ(),this._m=t.getM()}}],[{key:\"constructor_\",value:function(){if(this._m=null,0===arguments.length)z.constructor_.call(this),this._m=0;else if(1===arguments.length){if(arguments[0]instanceof o){var t=arguments[0];z.constructor_.call(this,t.x,t.y),this._m=t._m}else if(arguments[0]instanceof z){var e=arguments[0];z.constructor_.call(this,e.x,e.y),this._m=this.getM()}}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];z.constructor_.call(this,n,r,z.NULL_ORDINATE),this._m=i}}}]),o}(z);Xt.X=0,Xt.Y=1,Xt.Z=-1,Xt.M=2;var Ut=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),e=i.call(this),o.constructor_.apply(l(e),arguments),e}return n(o,[{key:\"getM\",value:function(){return this._m}},{key:\"setOrdinate\",value:function(t,e){switch(t){case z.X:this.x=e;break;case z.Y:this.y=e;break;case z.Z:this.z=e;break;case z.M:this._m=e;break;default:throw new x(\"Invalid ordinate index: \"+t)}}},{key:\"setM\",value:function(t){this._m=t}},{key:\"getOrdinate\",value:function(t){switch(t){case z.X:return this.x;case z.Y:return this.y;case z.Z:return this.getZ();case z.M:return this.getM()}throw new x(\"Invalid ordinate index: \"+t)}},{key:\"copy\",value:function(){return new o(this)}},{key:\"toString\",value:function(){return\"(\"+this.x+\", \"+this.y+\", \"+this.getZ()+\" m=\"+this.getM()+\")\"}},{key:\"setCoordinate\",value:function(t){this.x=t.x,this.y=t.y,this.z=t.getZ(),this._m=t.getM()}}],[{key:\"constructor_\",value:function(){if(this._m=null,0===arguments.length)z.constructor_.call(this),this._m=0;else if(1===arguments.length){if(arguments[0]instanceof o){var t=arguments[0];z.constructor_.call(this,t),this._m=t._m}else if(arguments[0]instanceof z){var e=arguments[0];z.constructor_.call(this,e),this._m=this.getM()}}else if(4===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],s=arguments[3];z.constructor_.call(this,n,r,i),this._m=s}}}]),o}(z),Zt=function(){function e(){t(this,e)}return n(e,null,[{key:\"measures\",value:function(t){return t instanceof jt?0:t instanceof Xt||t instanceof Ut?1:0}},{key:\"dimension\",value:function(t){return t instanceof jt?2:t instanceof Xt?3:t instanceof Ut?4:3}},{key:\"create\",value:function(){if(1===arguments.length){var t=arguments[0];return e.create(t,0)}if(2===arguments.length){var n=arguments[0],r=arguments[1];return 2===n?new jt:3===n&&0===r?new z:3===n&&1===r?new Xt:4===n&&1===r?new Ut:new z}}}]),e}(),Ht=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"getCoordinate\",value:function(t){return this.get(t)}},{key:\"addAll\",value:function(){if(2===arguments.length&&\"boolean\"==typeof arguments[1]&&ot(arguments[0],H)){for(var t=arguments[1],e=!1,n=arguments[0].iterator();n.hasNext();)this.add(n.next(),t),e=!0;return e}return f(i(s.prototype),\"addAll\",this).apply(this,arguments)}},{key:\"clone\",value:function(){for(var t=f(i(s.prototype),\"clone\",this).call(this),e=0;e<this.size();e++)t.add(e,this.get(e).clone());return t}},{key:\"toCoordinateArray\",value:function(){if(0===arguments.length)return this.toArray(s.coordArrayType);if(1===arguments.length){if(arguments[0])return this.toArray(s.coordArrayType);for(var t=this.size(),e=new Array(t).fill(null),n=0;n<t;n++)e[n]=this.get(t-n-1);return e}}},{key:\"add\",value:function(){if(1===arguments.length){var t=arguments[0];return f(i(s.prototype),\"add\",this).call(this,t)}if(2===arguments.length){if(arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var e=arguments[0],n=arguments[1];return this.add(e,n,!0),!0}if(arguments[0]instanceof z&&\"boolean\"==typeof arguments[1]){var r=arguments[0];if(!arguments[1]&&this.size()>=1&&this.get(this.size()-1).equals2D(r))return null;f(i(s.prototype),\"add\",this).call(this,r)}else if(arguments[0]instanceof Object&&\"boolean\"==typeof arguments[1]){var o=arguments[0],a=arguments[1];return this.add(o,a),!0}}else if(3===arguments.length){if(\"boolean\"==typeof arguments[2]&&arguments[0]instanceof Array&&\"boolean\"==typeof arguments[1]){var u=arguments[0],l=arguments[1];if(arguments[2])for(var h=0;h<u.length;h++)this.add(u[h],l);else for(var c=u.length-1;c>=0;c--)this.add(u[c],l);return!0}if(\"boolean\"==typeof arguments[2]&&Number.isInteger(arguments[0])&&arguments[1]instanceof z){var g=arguments[0],p=arguments[1];if(!arguments[2]){var v=this.size();if(v>0){if(g>0&&this.get(g-1).equals2D(p))return null;if(g<v&&this.get(g).equals2D(p))return null}}f(i(s.prototype),\"add\",this).call(this,g,p)}}else if(4===arguments.length){var d=arguments[0],y=arguments[1],m=arguments[2],_=arguments[3],x=1;m>_&&(x=-1);for(var E=m;E!==_;E+=x)this.add(d[E],y);return!0}}},{key:\"closeRing\",value:function(){if(this.size()>0){var t=this.get(0).copy();this.add(t,!1)}}}],[{key:\"constructor_\",value:function(){if(0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.ensureCapacity(t.length),this.add(t,!0)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.ensureCapacity(e.length),this.add(e,n)}}}]),s}(dt);Ht.coordArrayType=new Array(0).fill(null);var Wt=function(){function e(){t(this,e)}return n(e,null,[{key:\"isRing\",value:function(t){return!(t.length<4||!t[0].equals2D(t[t.length-1]))}},{key:\"ptNotInList\",value:function(t,n){for(var r=0;r<t.length;r++){var i=t[r];if(e.indexOf(i,n)<0)return i}return null}},{key:\"scroll\",value:function(t,n){var r=e.indexOf(n,t);if(r<0)return null;var i=new Array(t.length).fill(null);xt.arraycopy(t,r,i,0,t.length-r),xt.arraycopy(t,0,i,t.length-r,r),xt.arraycopy(i,0,t,0,t.length)}},{key:\"equals\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];if(t===e)return!0;if(null===t||null===e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(!t[n].equals(e[n]))return!1;return!0}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2];if(r===i)return!0;if(null===r||null===i)return!1;if(r.length!==i.length)return!1;for(var s=0;s<r.length;s++)if(0!==o.compare(r[s],i[s]))return!1;return!0}}},{key:\"intersection\",value:function(t,e){for(var n=new Ht,r=0;r<t.length;r++)e.intersects(t[r])&&n.add(t[r],!0);return n.toCoordinateArray()}},{key:\"measures\",value:function(t){if(null===t||0===t.length)return 0;var e,n=0,r=d(t);try{for(r.s();!(e=r.n()).done;){var i=e.value;n=Math.max(n,Zt.measures(i))}}catch(t){r.e(t)}finally{r.f()}return n}},{key:\"hasRepeatedPoints\",value:function(t){for(var e=1;e<t.length;e++)if(t[e-1].equals(t[e]))return!0;return!1}},{key:\"removeRepeatedPoints\",value:function(t){return e.hasRepeatedPoints(t)?new Ht(t,!1).toCoordinateArray():t}},{key:\"reverse\",value:function(t){for(var e=t.length-1,n=Math.trunc(e/2),r=0;r<=n;r++){var i=t[r];t[r]=t[e-r],t[e-r]=i}}},{key:\"removeNull\",value:function(t){for(var e=0,n=0;n<t.length;n++)null!==t[n]&&e++;var r=new Array(e).fill(null);if(0===e)return r;for(var i=0,o=0;o<t.length;o++)null!==t[o]&&(r[i++]=t[o]);return r}},{key:\"copyDeep\",value:function(){if(1===arguments.length){for(var t=arguments[0],e=new Array(t.length).fill(null),n=0;n<t.length;n++)e[n]=t[n].copy();return e}if(5===arguments.length)for(var r=arguments[0],i=arguments[1],o=arguments[2],s=arguments[3],a=arguments[4],u=0;u<a;u++)o[s+u]=r[i+u].copy()}},{key:\"isEqualReversed\",value:function(t,e){for(var n=0;n<t.length;n++){var r=t[n],i=e[t.length-n-1];if(0!==r.compareTo(i))return!1}return!0}},{key:\"envelope\",value:function(t){for(var e=new X,n=0;n<t.length;n++)e.expandToInclude(t[n]);return e}},{key:\"toCoordinateArray\",value:function(t){return t.toArray(e.coordArrayType)}},{key:\"dimension\",value:function(t){if(null===t||0===t.length)return 3;var e,n=0,r=d(t);try{for(r.s();!(e=r.n()).done;){var i=e.value;n=Math.max(n,Zt.dimension(i))}}catch(t){r.e(t)}finally{r.f()}return n}},{key:\"atLeastNCoordinatesOrNothing\",value:function(t,e){return e.length>=t?e:[]}},{key:\"indexOf\",value:function(t,e){for(var n=0;n<e.length;n++)if(t.equals(e[n]))return n;return-1}},{key:\"increasingDirection\",value:function(t){for(var e=0;e<Math.trunc(t.length/2);e++){var n=t.length-1-e,r=t[e].compareTo(t[n]);if(0!==r)return r}return 1}},{key:\"compare\",value:function(t,e){for(var n=0;n<t.length&&n<e.length;){var r=t[n].compareTo(e[n]);if(0!==r)return r;n++}return n<e.length?-1:n<t.length?1:0}},{key:\"minCoordinate\",value:function(t){for(var e=null,n=0;n<t.length;n++)(null===e||e.compareTo(t[n])>0)&&(e=t[n]);return e}},{key:\"extract\",value:function(t,e,n){e=Et.clamp(e,0,t.length);var r=(n=Et.clamp(n,-1,t.length))-e+1;n<0&&(r=0),e>=t.length&&(r=0),n<e&&(r=0);var i=new Array(r).fill(null);if(0===r)return i;for(var o=0,s=e;s<=n;s++)i[o++]=t[s];return i}}]),e}(),Jt=function(){function e(){t(this,e)}return n(e,[{key:\"compare\",value:function(t,e){var n=t,r=e;return Wt.compare(n,r)}},{key:\"interfaces_\",get:function(){return[D]}}]),e}(),Kt=function(){function e(){t(this,e)}return n(e,[{key:\"compare\",value:function(t,e){var n=t,r=e;if(n.length<r.length)return-1;if(n.length>r.length)return 1;if(0===n.length)return 0;var i=Wt.compare(n,r);return Wt.isEqualReversed(n,r)?0:i}},{key:\"OLDcompare\",value:function(t,e){var n=t,r=e;if(n.length<r.length)return-1;if(n.length>r.length)return 1;if(0===n.length)return 0;for(var i=Wt.increasingDirection(n),o=Wt.increasingDirection(r),s=i>0?0:n.length-1,a=o>0?0:n.length-1,u=0;u<n.length;u++){var l=n[s].compareTo(r[a]);if(0!==l)return l;s+=i,a+=o}return 0}},{key:\"interfaces_\",get:function(){return[D]}}]),e}();Wt.ForwardComparator=Jt,Wt.BidirectionalComparator=Kt,Wt.coordArrayType=new Array(0).fill(null);var Qt=function(){function e(n){t(this,e),this.str=n}return n(e,[{key:\"append\",value:function(t){this.str+=t}},{key:\"setCharAt\",value:function(t,e){this.str=this.str.substr(0,t)+e+this.str.substr(t+1)}},{key:\"toString\",value:function(){return this.str}}]),e}(),$t=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getM\",value:function(t){return this.hasM()?this._coordinates[t].getM():A.NaN}},{key:\"setOrdinate\",value:function(t,e,n){switch(e){case ct.X:this._coordinates[t].x=n;break;case ct.Y:this._coordinates[t].y=n;break;default:this._coordinates[t].setOrdinate(e,n)}}},{key:\"getZ\",value:function(t){return this.hasZ()?this._coordinates[t].getZ():A.NaN}},{key:\"size\",value:function(){return this._coordinates.length}},{key:\"getOrdinate\",value:function(t,e){switch(e){case ct.X:return this._coordinates[t].x;case ct.Y:return this._coordinates[t].y;default:return this._coordinates[t].getOrdinate(e)}}},{key:\"getCoordinate\",value:function(){if(1===arguments.length){var t=arguments[0];return this._coordinates[t]}if(2===arguments.length){var e=arguments[0];arguments[1].setCoordinate(this._coordinates[e])}}},{key:\"getCoordinateCopy\",value:function(t){var e=this.createCoordinate();return e.setCoordinate(this._coordinates[t]),e}},{key:\"createCoordinate\",value:function(){return Zt.create(this.getDimension(),this.getMeasures())}},{key:\"getDimension\",value:function(){return this._dimension}},{key:\"getX\",value:function(t){return this._coordinates[t].x}},{key:\"getMeasures\",value:function(){return this._measures}},{key:\"expandEnvelope\",value:function(t){for(var e=0;e<this._coordinates.length;e++)t.expandToInclude(this._coordinates[e]);return t}},{key:\"copy\",value:function(){for(var t=new Array(this.size()).fill(null),n=0;n<this._coordinates.length;n++){var r=this.createCoordinate();r.setCoordinate(this._coordinates[n]),t[n]=r}return new e(t,this._dimension,this._measures)}},{key:\"toString\",value:function(){if(this._coordinates.length>0){var t=new Qt(17*this._coordinates.length);t.append(\"(\"),t.append(this._coordinates[0]);for(var e=1;e<this._coordinates.length;e++)t.append(\", \"),t.append(this._coordinates[e]);return t.append(\")\"),t.toString()}return\"()\"}},{key:\"getY\",value:function(t){return this._coordinates[t].y}},{key:\"toCoordinateArray\",value:function(){return this._coordinates}},{key:\"interfaces_\",get:function(){return[ct,w]}}],[{key:\"constructor_\",value:function(){if(this._dimension=3,this._measures=0,this._coordinates=null,1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];e.constructor_.call(this,t,Wt.dimension(t),Wt.measures(t))}else if(Number.isInteger(arguments[0])){var n=arguments[0];this._coordinates=new Array(n).fill(null);for(var r=0;r<n;r++)this._coordinates[r]=new z}else if(ot(arguments[0],ct)){var i=arguments[0];if(null===i)return this._coordinates=new Array(0).fill(null),null;this._dimension=i.getDimension(),this._measures=i.getMeasures(),this._coordinates=new Array(i.size()).fill(null);for(var o=0;o<this._coordinates.length;o++)this._coordinates[o]=i.getCoordinateCopy(o)}}else if(2===arguments.length){if(arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var s=arguments[0],a=arguments[1];e.constructor_.call(this,s,a,Wt.measures(s))}else if(Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var u=arguments[0],l=arguments[1];this._coordinates=new Array(u).fill(null),this._dimension=l;for(var h=0;h<u;h++)this._coordinates[h]=Zt.create(l)}}else if(3===arguments.length)if(Number.isInteger(arguments[2])&&arguments[0]instanceof Array&&Number.isInteger(arguments[1])){var c=arguments[0],f=arguments[1],g=arguments[2];this._dimension=f,this._measures=g,this._coordinates=null===c?new Array(0).fill(null):c}else if(Number.isInteger(arguments[2])&&Number.isInteger(arguments[0])&&Number.isInteger(arguments[1])){var p=arguments[0],v=arguments[1],d=arguments[2];this._coordinates=new Array(p).fill(null),this._dimension=v,this._measures=d;for(var y=0;y<p;y++)this._coordinates[y]=this.createCoordinate()}}}]),e}(),te=function(){function e(){t(this,e)}return n(e,[{key:\"readResolve\",value:function(){return e.instance()}},{key:\"create\",value:function(){if(1===arguments.length){if(arguments[0]instanceof Array)return new $t(arguments[0]);if(ot(arguments[0],ct))return new $t(arguments[0])}else{if(2===arguments.length){var t=arguments[1];return t>3&&(t=3),t<2&&(t=2),new $t(arguments[0],t)}if(3===arguments.length){var e=arguments[2],n=arguments[1]-e;return e>1&&(e=1),n>3&&(n=3),n<2&&(n=2),new $t(arguments[0],n+e,e)}}}},{key:\"interfaces_\",get:function(){return[bt,w]}}],[{key:\"instance\",value:function(){return e.instanceObject}}]),e}();te.instanceObject=new te;var ee=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"copyInternal\",value:function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new s(t,this._factory)}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof U){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&f(i(s.prototype),\"equalsExact\",this).call(this,t,e)}return f(i(s.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"getBoundaryDimension\",value:function(){return 1}},{key:\"getTypeCode\",value:function(){return U.TYPECODE_MULTIPOLYGON}},{key:\"getDimension\",value:function(){return 2}},{key:\"getBoundary\",value:function(){if(this.isEmpty())return this.getFactory().createMultiLineString();for(var t=new dt,e=0;e<this._geometries.length;e++)for(var n=this._geometries[e].getBoundary(),r=0;r<n.getNumGeometries();r++)t.add(n.getGeometryN(r));var i=new Array(t.size()).fill(null);return this.getFactory().createMultiLineString(t.toArray(i))}},{key:\"getGeometryType\",value:function(){return U.TYPENAME_MULTIPOLYGON}},{key:\"interfaces_\",get:function(){return[Dt]}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];Bt.constructor_.call(this,t,e)}}]),s}(Bt),ne=function(){function e(){t(this,e)}return n(e,[{key:\"get\",value:function(){}},{key:\"put\",value:function(){}},{key:\"size\",value:function(){}},{key:\"values\",value:function(){}},{key:\"entrySet\",value:function(){}}]),e}(),re=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),(e=i.call(this)).map=new Map,e}return n(o,[{key:\"get\",value:function(t){return this.map.get(t)||null}},{key:\"put\",value:function(t,e){return this.map.set(t,e),e}},{key:\"values\",value:function(){for(var t=new dt,e=this.map.values(),n=e.next();!n.done;)t.add(n.value),n=e.next();return t}},{key:\"entrySet\",value:function(){var t=new Q;return this.map.entries().forEach((function(e){return t.add(e)})),t}},{key:\"size\",value:function(){return this.map.size()}}]),o}(ne),ie=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"equals\",value:function(t){if(!(t instanceof e))return!1;var n=t;return this._modelType===n._modelType&&this._scale===n._scale}},{key:\"compareTo\",value:function(t){var e=t,n=this.getMaximumSignificantDigits(),r=e.getMaximumSignificantDigits();return at.compare(n,r)}},{key:\"getScale\",value:function(){return this._scale}},{key:\"isFloating\",value:function(){return this._modelType===e.FLOATING||this._modelType===e.FLOATING_SINGLE}},{key:\"getType\",value:function(){return this._modelType}},{key:\"toString\",value:function(){var t=\"UNKNOWN\";return this._modelType===e.FLOATING?t=\"Floating\":this._modelType===e.FLOATING_SINGLE?t=\"Floating-Single\":this._modelType===e.FIXED&&(t=\"Fixed (Scale=\"+this.getScale()+\")\"),t}},{key:\"makePrecise\",value:function(){if(\"number\"==typeof arguments[0]){var t=arguments[0];return A.isNaN(t)||this._modelType===e.FLOATING_SINGLE?t:this._modelType===e.FIXED?Math.round(t*this._scale)/this._scale:t}if(arguments[0]instanceof z){var n=arguments[0];if(this._modelType===e.FLOATING)return null;n.x=this.makePrecise(n.x),n.y=this.makePrecise(n.y)}}},{key:\"getMaximumSignificantDigits\",value:function(){var t=16;return this._modelType===e.FLOATING?t=16:this._modelType===e.FLOATING_SINGLE?t=6:this._modelType===e.FIXED&&(t=1+Math.trunc(Math.ceil(Math.log(this.getScale())/Math.log(10)))),t}},{key:\"setScale\",value:function(t){this._scale=Math.abs(t)}},{key:\"interfaces_\",get:function(){return[w,k]}}],[{key:\"constructor_\",value:function(){if(this._modelType=null,this._scale=null,0===arguments.length)this._modelType=e.FLOATING;else if(1===arguments.length)if(arguments[0]instanceof oe){var t=arguments[0];this._modelType=t,t===e.FIXED&&this.setScale(1)}else if(\"number\"==typeof arguments[0]){var n=arguments[0];this._modelType=e.FIXED,this.setScale(n)}else if(arguments[0]instanceof e){var r=arguments[0];this._modelType=r._modelType,this._scale=r._scale}}},{key:\"mostPrecise\",value:function(t,e){return t.compareTo(e)>=0?t:e}}]),e}(),oe=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"readResolve\",value:function(){return e.nameToTypeMap.get(this._name)}},{key:\"toString\",value:function(){return this._name}},{key:\"interfaces_\",get:function(){return[w]}}],[{key:\"constructor_\",value:function(){this._name=null;var t=arguments[0];this._name=t,e.nameToTypeMap.put(t,this)}}]),e}();oe.nameToTypeMap=new re,ie.Type=oe,ie.FIXED=new oe(\"FIXED\"),ie.FLOATING=new oe(\"FLOATING\"),ie.FLOATING_SINGLE=new oe(\"FLOATING SINGLE\"),ie.maximumPreciseValue=9007199254740992;var se=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"copyInternal\",value:function(){for(var t=new Array(this._geometries.length).fill(null),e=0;e<t.length;e++)t[e]=this._geometries[e].copy();return new s(t,this._factory)}},{key:\"equalsExact\",value:function(){if(2===arguments.length&&\"number\"==typeof arguments[1]&&arguments[0]instanceof U){var t=arguments[0],e=arguments[1];return!!this.isEquivalentClass(t)&&f(i(s.prototype),\"equalsExact\",this).call(this,t,e)}return f(i(s.prototype),\"equalsExact\",this).apply(this,arguments)}},{key:\"getBoundaryDimension\",value:function(){return this.isClosed()?Mt.FALSE:0}},{key:\"isClosed\",value:function(){if(this.isEmpty())return!1;for(var t=0;t<this._geometries.length;t++)if(!this._geometries[t].isClosed())return!1;return!0}},{key:\"getTypeCode\",value:function(){return U.TYPECODE_MULTILINESTRING}},{key:\"getDimension\",value:function(){return 1}},{key:\"getBoundary\",value:function(){throw new J}},{key:\"getGeometryType\",value:function(){return U.TYPENAME_MULTILINESTRING}},{key:\"interfaces_\",get:function(){return[Nt]}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];Bt.constructor_.call(this,t,e)}}]),s}(Bt),ae=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"createEmpty\",value:function(t){switch(t){case-1:return this.createGeometryCollection();case 0:return this.createPoint();case 1:return this.createLineString();case 2:return this.createPolygon();default:throw new x(\"Invalid dimension: \"+t)}}},{key:\"toGeometry\",value:function(t){return t.isNull()?this.createPoint():t.getMinX()===t.getMaxX()&&t.getMinY()===t.getMaxY()?this.createPoint(new z(t.getMinX(),t.getMinY())):t.getMinX()===t.getMaxX()||t.getMinY()===t.getMaxY()?this.createLineString([new z(t.getMinX(),t.getMinY()),new z(t.getMaxX(),t.getMaxY())]):this.createPolygon(this.createLinearRing([new z(t.getMinX(),t.getMinY()),new z(t.getMinX(),t.getMaxY()),new z(t.getMaxX(),t.getMaxY()),new z(t.getMaxX(),t.getMinY()),new z(t.getMinX(),t.getMinY())]),null)}},{key:\"createLineString\",value:function(){if(0===arguments.length)return this.createLineString(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLineString(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(ot(arguments[0],ct))return new Ct(arguments[0],this)}}},{key:\"createMultiLineString\",value:function(){return 0===arguments.length?new se(null,this):1===arguments.length?new se(arguments[0],this):void 0}},{key:\"buildGeometry\",value:function(t){for(var n=null,r=!1,i=!1,o=t.iterator();o.hasNext();){var s=o.next(),a=s.getTypeCode();null===n&&(n=a),a!==n&&(r=!0),s instanceof Bt&&(i=!0)}if(null===n)return this.createGeometryCollection();if(r||i)return this.createGeometryCollection(e.toGeometryArray(t));var u=t.iterator().next();if(t.size()>1){if(u instanceof Ft)return this.createMultiPolygon(e.toPolygonArray(t));if(u instanceof Ct)return this.createMultiLineString(e.toLineStringArray(t));if(u instanceof Ot)return this.createMultiPoint(e.toPointArray(t));V.shouldNeverReachHere(\"Unhandled geometry type: \"+u.getGeometryType())}return u}},{key:\"createMultiPointFromCoords\",value:function(t){return this.createMultiPoint(null!==t?this.getCoordinateSequenceFactory().create(t):null)}},{key:\"createPoint\",value:function(){if(0===arguments.length)return this.createPoint(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof z){var t=arguments[0];return this.createPoint(null!==t?this.getCoordinateSequenceFactory().create([t]):null)}if(ot(arguments[0],ct))return new Ot(arguments[0],this)}}},{key:\"getCoordinateSequenceFactory\",value:function(){return this._coordinateSequenceFactory}},{key:\"createPolygon\",value:function(){if(0===arguments.length)return this.createPolygon(null,null);if(1===arguments.length){if(ot(arguments[0],ct)){var t=arguments[0];return this.createPolygon(this.createLinearRing(t))}if(arguments[0]instanceof Array){var e=arguments[0];return this.createPolygon(this.createLinearRing(e))}if(arguments[0]instanceof zt){var n=arguments[0];return this.createPolygon(n,null)}}else if(2===arguments.length)return new Ft(arguments[0],arguments[1],this)}},{key:\"getSRID\",value:function(){return this._SRID}},{key:\"createGeometryCollection\",value:function(){return 0===arguments.length?new Bt(null,this):1===arguments.length?new Bt(arguments[0],this):void 0}},{key:\"getPrecisionModel\",value:function(){return this._precisionModel}},{key:\"createLinearRing\",value:function(){if(0===arguments.length)return this.createLinearRing(this.getCoordinateSequenceFactory().create([]));if(1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];return this.createLinearRing(null!==t?this.getCoordinateSequenceFactory().create(t):null)}if(ot(arguments[0],ct))return new zt(arguments[0],this)}}},{key:\"createMultiPolygon\",value:function(){return 0===arguments.length?new ee(null,this):1===arguments.length?new ee(arguments[0],this):void 0}},{key:\"createMultiPoint\",value:function(){if(0===arguments.length)return new Yt(null,this);if(1===arguments.length){if(arguments[0]instanceof Array)return new Yt(arguments[0],this);if(ot(arguments[0],ct)){var t=arguments[0];if(null===t)return this.createMultiPoint(new Array(0).fill(null));for(var e=new Array(t.size()).fill(null),n=0;n<t.size();n++){var r=this.getCoordinateSequenceFactory().create(1,t.getDimension(),t.getMeasures());St.copy(t,n,r,0,1),e[n]=this.createPoint(r)}return this.createMultiPoint(e)}}}},{key:\"interfaces_\",get:function(){return[w]}}],[{key:\"constructor_\",value:function(){if(this._precisionModel=null,this._coordinateSequenceFactory=null,this._SRID=null,0===arguments.length)e.constructor_.call(this,new ie,0);else if(1===arguments.length){if(ot(arguments[0],bt)){var t=arguments[0];e.constructor_.call(this,new ie,0,t)}else if(arguments[0]instanceof ie){var n=arguments[0];e.constructor_.call(this,n,0,e.getDefaultCoordinateSequenceFactory())}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];e.constructor_.call(this,r,i,e.getDefaultCoordinateSequenceFactory())}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this._precisionModel=o,this._coordinateSequenceFactory=a,this._SRID=s}}},{key:\"toMultiPolygonArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toGeometryArray\",value:function(t){if(null===t)return null;var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"getDefaultCoordinateSequenceFactory\",value:function(){return te.instance()}},{key:\"toMultiLineStringArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toLineStringArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toMultiPointArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toLinearRingArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toPointArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"toPolygonArray\",value:function(t){var e=new Array(t.size()).fill(null);return t.toArray(e)}},{key:\"createPointFromInternalCoord\",value:function(t,e){return e.getPrecisionModel().makePrecise(t),e.getFactory().createPoint(t)}}]),e}(),ue=\"XY\",le=\"XYZ\",he=\"XYM\",ce=\"XYZM\",fe={POINT:\"Point\",LINE_STRING:\"LineString\",LINEAR_RING:\"LinearRing\",POLYGON:\"Polygon\",MULTI_POINT:\"MultiPoint\",MULTI_LINE_STRING:\"MultiLineString\",MULTI_POLYGON:\"MultiPolygon\",GEOMETRY_COLLECTION:\"GeometryCollection\",CIRCLE:\"Circle\"},ge=\"EMPTY\",pe=1,ve=2,de=3,ye=4,me=5,_e=6;for(var xe in fe)fe[xe].toUpperCase();var Ee=function(){function e(n){t(this,e),this.wkt=n,this.index_=-1}return n(e,[{key:\"isAlpha_\",value:function(t){return t>=\"a\"&&t<=\"z\"||t>=\"A\"&&t<=\"Z\"}},{key:\"isNumeric_\",value:function(t,e){return t>=\"0\"&&t<=\"9\"||\".\"==t&&!(void 0!==e&&e)}},{key:\"isWhiteSpace_\",value:function(t){return\" \"==t||\"\\t\"==t||\"\\r\"==t||\"\\n\"==t}},{key:\"nextChar_\",value:function(){return this.wkt.charAt(++this.index_)}},{key:\"nextToken\",value:function(){var t,e=this.nextChar_(),n=this.index_,r=e;if(\"(\"==e)t=ve;else if(\",\"==e)t=me;else if(\")\"==e)t=de;else if(this.isNumeric_(e)||\"-\"==e)t=ye,r=this.readNumber_();else if(this.isAlpha_(e))t=pe,r=this.readText_();else{if(this.isWhiteSpace_(e))return this.nextToken();if(\"\"!==e)throw new Error(\"Unexpected character: \"+e);t=_e}return{position:n,value:r,type:t}}},{key:\"readNumber_\",value:function(){var t,e=this.index_,n=!1,r=!1;do{\".\"==t?n=!0:\"e\"!=t&&\"E\"!=t||(r=!0),t=this.nextChar_()}while(this.isNumeric_(t,n)||!r&&(\"e\"==t||\"E\"==t)||r&&(\"-\"==t||\"+\"==t));return parseFloat(this.wkt.substring(e,this.index_--))}},{key:\"readText_\",value:function(){var t,e=this.index_;do{t=this.nextChar_()}while(this.isAlpha_(t));return this.wkt.substring(e,this.index_--).toUpperCase()}}]),e}(),ke=function(){function e(n,r){t(this,e),this.lexer_=n,this.token_,this.layout_=ue,this.factory=r}return n(e,[{key:\"consume_\",value:function(){this.token_=this.lexer_.nextToken()}},{key:\"isTokenType\",value:function(t){return this.token_.type==t}},{key:\"match\",value:function(t){var e=this.isTokenType(t);return e&&this.consume_(),e}},{key:\"parse\",value:function(){return this.consume_(),this.parseGeometry_()}},{key:\"parseGeometryLayout_\",value:function(){var t=ue,e=this.token_;if(this.isTokenType(pe)){var n=e.value;\"Z\"===n?t=le:\"M\"===n?t=he:\"ZM\"===n&&(t=ce),t!==ue&&this.consume_()}return t}},{key:\"parseGeometryCollectionText_\",value:function(){if(this.match(ve)){var t=[];do{t.push(this.parseGeometry_())}while(this.match(me));if(this.match(de))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parsePointText_\",value:function(){if(this.match(ve)){var t=this.parsePoint_();if(this.match(de))return t}else if(this.isEmptyGeometry_())return null;throw new Error(this.formatErrorMessage_())}},{key:\"parseLineStringText_\",value:function(){if(this.match(ve)){var t=this.parsePointList_();if(this.match(de))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parsePolygonText_\",value:function(){if(this.match(ve)){var t=this.parseLineStringTextList_();if(this.match(de))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parseMultiPointText_\",value:function(){var t;if(this.match(ve)){if(t=this.token_.type==ve?this.parsePointTextList_():this.parsePointList_(),this.match(de))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parseMultiLineStringText_\",value:function(){if(this.match(ve)){var t=this.parseLineStringTextList_();if(this.match(de))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parseMultiPolygonText_\",value:function(){if(this.match(ve)){var t=this.parsePolygonTextList_();if(this.match(de))return t}else if(this.isEmptyGeometry_())return[];throw new Error(this.formatErrorMessage_())}},{key:\"parsePoint_\",value:function(){for(var t=[],e=this.layout_.length,n=0;n<e;++n){var r=this.token_;if(!this.match(ye))break;t.push(r.value)}if(t.length==e)return t;throw new Error(this.formatErrorMessage_())}},{key:\"parsePointList_\",value:function(){for(var t=[this.parsePoint_()];this.match(me);)t.push(this.parsePoint_());return t}},{key:\"parsePointTextList_\",value:function(){for(var t=[this.parsePointText_()];this.match(me);)t.push(this.parsePointText_());return t}},{key:\"parseLineStringTextList_\",value:function(){for(var t=[this.parseLineStringText_()];this.match(me);)t.push(this.parseLineStringText_());return t}},{key:\"parsePolygonTextList_\",value:function(){for(var t=[this.parsePolygonText_()];this.match(me);)t.push(this.parsePolygonText_());return t}},{key:\"isEmptyGeometry_\",value:function(){var t=this.isTokenType(pe)&&this.token_.value==ge;return t&&this.consume_(),t}},{key:\"formatErrorMessage_\",value:function(){return\"Unexpected `\"+this.token_.value+\"` at position \"+this.token_.position+\" in `\"+this.lexer_.wkt+\"`\"}},{key:\"parseGeometry_\",value:function(){var t=this.factory,e=function(t){return a(z,g(t))},n=function(n){var r=n.map((function(n){return t.createLinearRing(n.map(e))}));return r.length>1?t.createPolygon(r[0],r.slice(1)):t.createPolygon(r[0])},r=this.token_;if(this.match(pe)){var i=r.value;if(this.layout_=this.parseGeometryLayout_(),\"GEOMETRYCOLLECTION\"==i){var o=this.parseGeometryCollectionText_();return t.createGeometryCollection(o)}switch(i){case\"POINT\":var s=this.parsePointText_();return s?t.createPoint(a(z,g(s))):t.createPoint();case\"LINESTRING\":var u=this.parseLineStringText_().map(e);return t.createLineString(u);case\"LINEARRING\":var l=this.parseLineStringText_().map(e);return t.createLinearRing(l);case\"POLYGON\":var h=this.parsePolygonText_();return h&&0!==h.length?n(h):t.createPolygon();case\"MULTIPOINT\":var c=this.parseMultiPointText_();if(!c||0===c.length)return t.createMultiPoint();var f=c.map(e).map((function(e){return t.createPoint(e)}));return t.createMultiPoint(f);case\"MULTILINESTRING\":var p=this.parseMultiLineStringText_().map((function(n){return t.createLineString(n.map(e))}));return t.createMultiLineString(p);case\"MULTIPOLYGON\":var v=this.parseMultiPolygonText_();if(!v||0===v.length)return t.createMultiPolygon();var d=v.map(n);return t.createMultiPolygon(d);default:throw new Error(\"Invalid geometry type: \"+i)}}throw new Error(this.formatErrorMessage_())}}]),e}();function be(t){if(t.isEmpty())return\"\";var e=t.getCoordinate(),n=[e.x,e.y];return void 0===e.z||Number.isNaN(e.z)||n.push(e.z),void 0===e.m||Number.isNaN(e.m)||n.push(e.m),n.join(\" \")}function we(t){for(var e=t.getCoordinates().map((function(t){var e=[t.x,t.y];return void 0===t.z||Number.isNaN(t.z)||e.push(t.z),void 0===t.m||Number.isNaN(t.m)||e.push(t.m),e})),n=[],r=0,i=e.length;r<i;++r)n.push(e[r].join(\" \"));return n.join(\", \")}function Ie(t){var e=[];e.push(\"(\"+we(t.getExteriorRing())+\")\");for(var n=0,r=t.getNumInteriorRing();n<r;++n)e.push(\"(\"+we(t.getInteriorRingN(n))+\")\");return e.join(\", \")}var Ne={Point:be,LineString:we,LinearRing:we,Polygon:Ie,MultiPoint:function(t){for(var e=[],n=0,r=t.getNumGeometries();n<r;++n)e.push(\"(\"+be(t.getGeometryN(n))+\")\");return e.join(\", \")},MultiLineString:function(t){for(var e=[],n=0,r=t.getNumGeometries();n<r;++n)e.push(\"(\"+we(t.getGeometryN(n))+\")\");return e.join(\", \")},MultiPolygon:function(t){for(var e=[],n=0,r=t.getNumGeometries();n<r;++n)e.push(\"(\"+Ie(t.getGeometryN(n))+\")\");return e.join(\", \")},GeometryCollection:function(t){for(var e=[],n=0,r=t.getNumGeometries();n<r;++n)e.push(Se(t.getGeometryN(n)));return e.join(\", \")}};function Se(t){var e=t.getGeometryType(),n=Ne[e];e=e.toUpperCase();var r=function(t){var e=\"\";if(t.isEmpty())return e;var n=t.getCoordinate();return void 0===n.z||Number.isNaN(n.z)||(e+=\"Z\"),void 0===n.m||Number.isNaN(n.m)||(e+=\"M\"),e}(t);return r.length>0&&(e+=\" \"+r),t.isEmpty()?e+\" \"+ge:e+\" (\"+n(t)+\")\"}var Me=function(){function e(n){t(this,e),this.geometryFactory=n||new ae,this.precisionModel=this.geometryFactory.getPrecisionModel()}return n(e,[{key:\"read\",value:function(t){var e=new Ee(t);return new ke(e,this.geometryFactory).parse()}},{key:\"write\",value:function(t){return Se(t)}}]),e}(),Le=function(){function e(n){t(this,e),this.parser=new Me(n)}return n(e,[{key:\"write\",value:function(t){return this.parser.write(t)}}],[{key:\"toLineString\",value:function(t,e){if(2!==arguments.length)throw new Error(\"Not implemented\");return\"LINESTRING ( \"+t.x+\" \"+t.y+\", \"+e.x+\" \"+e.y+\" )\"}}]),e}(),Pe=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getIndexAlongSegment\",value:function(t,e){return this.computeIntLineIndex(),this._intLineIndex[t][e]}},{key:\"getTopologySummary\",value:function(){var t=new Qt;return this.isEndPoint()&&t.append(\" endpoint\"),this._isProper&&t.append(\" proper\"),this.isCollinear()&&t.append(\" collinear\"),t.toString()}},{key:\"computeIntersection\",value:function(t,e,n,r){this._inputLines[0][0]=t,this._inputLines[0][1]=e,this._inputLines[1][0]=n,this._inputLines[1][1]=r,this._result=this.computeIntersect(t,e,n,r)}},{key:\"getIntersectionNum\",value:function(){return this._result}},{key:\"computeIntLineIndex\",value:function(){if(0===arguments.length)null===this._intLineIndex&&(this._intLineIndex=Array(2).fill().map((function(){return Array(2)})),this.computeIntLineIndex(0),this.computeIntLineIndex(1));else if(1===arguments.length){var t=arguments[0];this.getEdgeDistance(t,0)>this.getEdgeDistance(t,1)?(this._intLineIndex[t][0]=0,this._intLineIndex[t][1]=1):(this._intLineIndex[t][0]=1,this._intLineIndex[t][1]=0)}}},{key:\"isProper\",value:function(){return this.hasIntersection()&&this._isProper}},{key:\"setPrecisionModel\",value:function(t){this._precisionModel=t}},{key:\"isInteriorIntersection\",value:function(){if(0===arguments.length)return!!this.isInteriorIntersection(0)||!!this.isInteriorIntersection(1);if(1===arguments.length){for(var t=arguments[0],e=0;e<this._result;e++)if(!this._intPt[e].equals2D(this._inputLines[t][0])&&!this._intPt[e].equals2D(this._inputLines[t][1]))return!0;return!1}}},{key:\"getIntersection\",value:function(t){return this._intPt[t]}},{key:\"isEndPoint\",value:function(){return this.hasIntersection()&&!this._isProper}},{key:\"hasIntersection\",value:function(){return this._result!==e.NO_INTERSECTION}},{key:\"getEdgeDistance\",value:function(t,n){return e.computeEdgeDistance(this._intPt[n],this._inputLines[t][0],this._inputLines[t][1])}},{key:\"isCollinear\",value:function(){return this._result===e.COLLINEAR_INTERSECTION}},{key:\"toString\",value:function(){return Le.toLineString(this._inputLines[0][0],this._inputLines[0][1])+\" - \"+Le.toLineString(this._inputLines[1][0],this._inputLines[1][1])+this.getTopologySummary()}},{key:\"getEndpoint\",value:function(t,e){return this._inputLines[t][e]}},{key:\"isIntersection\",value:function(t){for(var e=0;e<this._result;e++)if(this._intPt[e].equals2D(t))return!0;return!1}},{key:\"getIntersectionAlongSegment\",value:function(t,e){return this.computeIntLineIndex(),this._intPt[this._intLineIndex[t][e]]}}],[{key:\"constructor_\",value:function(){this._result=null,this._inputLines=Array(2).fill().map((function(){return Array(2)})),this._intPt=new Array(2).fill(null),this._intLineIndex=null,this._isProper=null,this._pa=null,this._pb=null,this._precisionModel=null,this._intPt[0]=new z,this._intPt[1]=new z,this._pa=this._intPt[0],this._pb=this._intPt[1],this._result=0}},{key:\"computeEdgeDistance\",value:function(t,e,n){var r=Math.abs(n.x-e.x),i=Math.abs(n.y-e.y),o=-1;if(t.equals(e))o=0;else if(t.equals(n))o=r>i?r:i;else{var s=Math.abs(t.x-e.x),a=Math.abs(t.y-e.y);0!==(o=r>i?s:a)||t.equals(e)||(o=Math.max(s,a))}return V.isTrue(!(0===o&&!t.equals(e)),\"Bad distance calculation\"),o}},{key:\"nonRobustComputeEdgeDistance\",value:function(t,e,n){var r=t.x-e.x,i=t.y-e.y,o=Math.sqrt(r*r+i*i);return V.isTrue(!(0===o&&!t.equals(e)),\"Invalid distance calculation\"),o}}]),e}();Pe.DONT_INTERSECT=0,Pe.DO_INTERSECT=1,Pe.COLLINEAR=2,Pe.NO_INTERSECTION=0,Pe.POINT_INTERSECTION=1,Pe.COLLINEAR_INTERSECTION=2;var Ce=function(e){r(s,e);var o=c(s);function s(){return t(this,s),o.call(this)}return n(s,[{key:\"isInSegmentEnvelopes\",value:function(t){var e=new X(this._inputLines[0][0],this._inputLines[0][1]),n=new X(this._inputLines[1][0],this._inputLines[1][1]);return e.contains(t)&&n.contains(t)}},{key:\"computeIntersection\",value:function(){if(3!==arguments.length)return f(i(s.prototype),\"computeIntersection\",this).apply(this,arguments);var t=arguments[0],e=arguments[1],n=arguments[2];if(this._isProper=!1,X.intersects(e,n,t)&&0===ft.index(e,n,t)&&0===ft.index(n,e,t))return this._isProper=!0,(t.equals(e)||t.equals(n))&&(this._isProper=!1),this._result=Pe.POINT_INTERSECTION,null;this._result=Pe.NO_INTERSECTION}},{key:\"intersection\",value:function(t,e,n,r){var i=this.intersectionSafe(t,e,n,r);return this.isInSegmentEnvelopes(i)||(i=new z(s.nearestEndpoint(t,e,n,r))),null!==this._precisionModel&&this._precisionModel.makePrecise(i),i}},{key:\"checkDD\",value:function(t,e,n,r,i){var o=ht.intersection(t,e,n,r),s=this.isInSegmentEnvelopes(o);xt.out.println(\"DD in env = \"+s+\"  --------------------- \"+o),i.distance(o)>1e-4&&xt.out.println(\"Distance = \"+i.distance(o))}},{key:\"intersectionSafe\",value:function(t,e,n,r){var i=_t.intersection(t,e,n,r);return null===i&&(i=s.nearestEndpoint(t,e,n,r)),i}},{key:\"computeCollinearIntersection\",value:function(t,e,n,r){var i=X.intersects(t,e,n),o=X.intersects(t,e,r),s=X.intersects(n,r,t),a=X.intersects(n,r,e);return i&&o?(this._intPt[0]=n,this._intPt[1]=r,Pe.COLLINEAR_INTERSECTION):s&&a?(this._intPt[0]=t,this._intPt[1]=e,Pe.COLLINEAR_INTERSECTION):i&&s?(this._intPt[0]=n,this._intPt[1]=t,!n.equals(t)||o||a?Pe.COLLINEAR_INTERSECTION:Pe.POINT_INTERSECTION):i&&a?(this._intPt[0]=n,this._intPt[1]=e,!n.equals(e)||o||s?Pe.COLLINEAR_INTERSECTION:Pe.POINT_INTERSECTION):o&&s?(this._intPt[0]=r,this._intPt[1]=t,!r.equals(t)||i||a?Pe.COLLINEAR_INTERSECTION:Pe.POINT_INTERSECTION):o&&a?(this._intPt[0]=r,this._intPt[1]=e,!r.equals(e)||i||s?Pe.COLLINEAR_INTERSECTION:Pe.POINT_INTERSECTION):Pe.NO_INTERSECTION}},{key:\"computeIntersect\",value:function(t,e,n,r){if(this._isProper=!1,!X.intersects(t,e,n,r))return Pe.NO_INTERSECTION;var i=ft.index(t,e,n),o=ft.index(t,e,r);if(i>0&&o>0||i<0&&o<0)return Pe.NO_INTERSECTION;var s=ft.index(n,r,t),a=ft.index(n,r,e);return s>0&&a>0||s<0&&a<0?Pe.NO_INTERSECTION:0===i&&0===o&&0===s&&0===a?this.computeCollinearIntersection(t,e,n,r):(0===i||0===o||0===s||0===a?(this._isProper=!1,t.equals2D(n)||t.equals2D(r)?this._intPt[0]=t:e.equals2D(n)||e.equals2D(r)?this._intPt[0]=e:0===i?this._intPt[0]=new z(n):0===o?this._intPt[0]=new z(r):0===s?this._intPt[0]=new z(t):0===a&&(this._intPt[0]=new z(e))):(this._isProper=!0,this._intPt[0]=this.intersection(t,e,n,r)),Pe.POINT_INTERSECTION)}}],[{key:\"nearestEndpoint\",value:function(t,e,n,r){var i=t,o=kt.pointToSegment(t,n,r),s=kt.pointToSegment(e,n,r);return s<o&&(o=s,i=e),(s=kt.pointToSegment(n,t,e))<o&&(o=s,i=n),(s=kt.pointToSegment(r,t,e))<o&&(o=s,i=r),i}}]),s}(Pe),Te=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"countSegment\",value:function(t,e){if(t.x<this._p.x&&e.x<this._p.x)return null;if(this._p.x===e.x&&this._p.y===e.y)return this._isPointOnSegment=!0,null;if(t.y===this._p.y&&e.y===this._p.y){var n=t.x,r=e.x;return n>r&&(n=e.x,r=t.x),this._p.x>=n&&this._p.x<=r&&(this._isPointOnSegment=!0),null}if(t.y>this._p.y&&e.y<=this._p.y||e.y>this._p.y&&t.y<=this._p.y){var i=ft.index(t,e,this._p);if(i===ft.COLLINEAR)return this._isPointOnSegment=!0,null;e.y<t.y&&(i=-i),i===ft.LEFT&&this._crossingCount++}}},{key:\"isPointInPolygon\",value:function(){return this.getLocation()!==Z.EXTERIOR}},{key:\"getLocation\",value:function(){return this._isPointOnSegment?Z.BOUNDARY:this._crossingCount%2==1?Z.INTERIOR:Z.EXTERIOR}},{key:\"isOnSegment\",value:function(){return this._isPointOnSegment}}],[{key:\"constructor_\",value:function(){this._p=null,this._crossingCount=0,this._isPointOnSegment=!1;var t=arguments[0];this._p=t}},{key:\"locatePointInRing\",value:function(){if(arguments[0]instanceof z&&ot(arguments[1],ct)){for(var t=arguments[1],n=new e(arguments[0]),r=new z,i=new z,o=1;o<t.size();o++)if(t.getCoordinate(o,r),t.getCoordinate(o-1,i),n.countSegment(r,i),n.isOnSegment())return n.getLocation();return n.getLocation()}if(arguments[0]instanceof z&&arguments[1]instanceof Array){for(var s=arguments[1],a=new e(arguments[0]),u=1;u<s.length;u++){var l=s[u],h=s[u-1];if(a.countSegment(l,h),a.isOnSegment())return a.getLocation()}return a.getLocation()}}}]),e}(),Oe=function(){function e(){t(this,e)}return n(e,null,[{key:\"isOnLine\",value:function(){if(arguments[0]instanceof z&&ot(arguments[1],ct)){for(var t=arguments[0],e=arguments[1],n=new Ce,r=new z,i=new z,o=e.size(),s=1;s<o;s++)if(e.getCoordinate(s-1,r),e.getCoordinate(s,i),n.computeIntersection(t,r,i),n.hasIntersection())return!0;return!1}if(arguments[0]instanceof z&&arguments[1]instanceof Array){for(var a=arguments[0],u=arguments[1],l=new Ce,h=1;h<u.length;h++){var c=u[h-1],f=u[h];if(l.computeIntersection(a,c,f),l.hasIntersection())return!0}return!1}}},{key:\"locateInRing\",value:function(t,e){return Te.locatePointInRing(t,e)}},{key:\"isInRing\",value:function(t,n){return e.locateInRing(t,n)!==Z.EXTERIOR}}]),e}(),Re=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"setAllLocations\",value:function(t){for(var e=0;e<this.location.length;e++)this.location[e]=t}},{key:\"isNull\",value:function(){for(var t=0;t<this.location.length;t++)if(this.location[t]!==Z.NONE)return!1;return!0}},{key:\"setAllLocationsIfNull\",value:function(t){for(var e=0;e<this.location.length;e++)this.location[e]===Z.NONE&&(this.location[e]=t)}},{key:\"isLine\",value:function(){return 1===this.location.length}},{key:\"merge\",value:function(t){if(t.location.length>this.location.length){var e=new Array(3).fill(null);e[tt.ON]=this.location[tt.ON],e[tt.LEFT]=Z.NONE,e[tt.RIGHT]=Z.NONE,this.location=e}for(var n=0;n<this.location.length;n++)this.location[n]===Z.NONE&&n<t.location.length&&(this.location[n]=t.location[n])}},{key:\"getLocations\",value:function(){return this.location}},{key:\"flip\",value:function(){if(this.location.length<=1)return null;var t=this.location[tt.LEFT];this.location[tt.LEFT]=this.location[tt.RIGHT],this.location[tt.RIGHT]=t}},{key:\"toString\",value:function(){var t=new st;return this.location.length>1&&t.append(Z.toLocationSymbol(this.location[tt.LEFT])),t.append(Z.toLocationSymbol(this.location[tt.ON])),this.location.length>1&&t.append(Z.toLocationSymbol(this.location[tt.RIGHT])),t.toString()}},{key:\"setLocations\",value:function(t,e,n){this.location[tt.ON]=t,this.location[tt.LEFT]=e,this.location[tt.RIGHT]=n}},{key:\"get\",value:function(t){return t<this.location.length?this.location[t]:Z.NONE}},{key:\"isArea\",value:function(){return this.location.length>1}},{key:\"isAnyNull\",value:function(){for(var t=0;t<this.location.length;t++)if(this.location[t]===Z.NONE)return!0;return!1}},{key:\"setLocation\",value:function(){if(1===arguments.length){var t=arguments[0];this.setLocation(tt.ON,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.location[e]=n}}},{key:\"init\",value:function(t){this.location=new Array(t).fill(null),this.setAllLocations(Z.NONE)}},{key:\"isEqualOnSide\",value:function(t,e){return this.location[e]===t.location[e]}},{key:\"allPositionsEqual\",value:function(t){for(var e=0;e<this.location.length;e++)if(this.location[e]!==t)return!1;return!0}}],[{key:\"constructor_\",value:function(){if(this.location=null,1===arguments.length){if(arguments[0]instanceof Array){var t=arguments[0];this.init(t.length)}else if(Number.isInteger(arguments[0])){var n=arguments[0];this.init(1),this.location[tt.ON]=n}else if(arguments[0]instanceof e){var r=arguments[0];if(this.init(r.location.length),null!==r)for(var i=0;i<this.location.length;i++)this.location[i]=r.location[i]}}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.init(3),this.location[tt.ON]=o,this.location[tt.LEFT]=s,this.location[tt.RIGHT]=a}}}]),e}(),Ae=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getGeometryCount\",value:function(){var t=0;return this.elt[0].isNull()||t++,this.elt[1].isNull()||t++,t}},{key:\"setAllLocations\",value:function(t,e){this.elt[t].setAllLocations(e)}},{key:\"isNull\",value:function(t){return this.elt[t].isNull()}},{key:\"setAllLocationsIfNull\",value:function(){if(1===arguments.length){var t=arguments[0];this.setAllLocationsIfNull(0,t),this.setAllLocationsIfNull(1,t)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.elt[e].setAllLocationsIfNull(n)}}},{key:\"isLine\",value:function(t){return this.elt[t].isLine()}},{key:\"merge\",value:function(t){for(var e=0;e<2;e++)null===this.elt[e]&&null!==t.elt[e]?this.elt[e]=new Re(t.elt[e]):this.elt[e].merge(t.elt[e])}},{key:\"flip\",value:function(){this.elt[0].flip(),this.elt[1].flip()}},{key:\"getLocation\",value:function(){if(1===arguments.length){var t=arguments[0];return this.elt[t].get(tt.ON)}if(2===arguments.length){var e=arguments[0],n=arguments[1];return this.elt[e].get(n)}}},{key:\"toString\",value:function(){var t=new st;return null!==this.elt[0]&&(t.append(\"A:\"),t.append(this.elt[0].toString())),null!==this.elt[1]&&(t.append(\" B:\"),t.append(this.elt[1].toString())),t.toString()}},{key:\"isArea\",value:function(){if(0===arguments.length)return this.elt[0].isArea()||this.elt[1].isArea();if(1===arguments.length){var t=arguments[0];return this.elt[t].isArea()}}},{key:\"isAnyNull\",value:function(t){return this.elt[t].isAnyNull()}},{key:\"setLocation\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.elt[t].setLocation(tt.ON,e)}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];this.elt[n].setLocation(r,i)}}},{key:\"isEqualOnSide\",value:function(t,e){return this.elt[0].isEqualOnSide(t.elt[0],e)&&this.elt[1].isEqualOnSide(t.elt[1],e)}},{key:\"allPositionsEqual\",value:function(t,e){return this.elt[t].allPositionsEqual(e)}},{key:\"toLine\",value:function(t){this.elt[t].isArea()&&(this.elt[t]=new Re(this.elt[t].location[0]))}}],[{key:\"constructor_\",value:function(){if(this.elt=new Array(2).fill(null),1===arguments.length){if(Number.isInteger(arguments[0])){var t=arguments[0];this.elt[0]=new Re(t),this.elt[1]=new Re(t)}else if(arguments[0]instanceof e){var n=arguments[0];this.elt[0]=new Re(n.elt[0]),this.elt[1]=new Re(n.elt[1])}}else if(2===arguments.length){var r=arguments[0],i=arguments[1];this.elt[0]=new Re(Z.NONE),this.elt[1]=new Re(Z.NONE),this.elt[r].setLocation(i)}else if(3===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2];this.elt[0]=new Re(o,s,a),this.elt[1]=new Re(o,s,a)}else if(4===arguments.length){var u=arguments[0],l=arguments[1],h=arguments[2],c=arguments[3];this.elt[0]=new Re(Z.NONE,Z.NONE,Z.NONE),this.elt[1]=new Re(Z.NONE,Z.NONE,Z.NONE),this.elt[u].setLocations(l,h,c)}}},{key:\"toLineLabel\",value:function(t){for(var n=new e(Z.NONE),r=0;r<2;r++)n.setLocation(r,t.getLocation(r));return n}}]),e}(),De=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"computeRing\",value:function(){if(null!==this._ring)return null;for(var t=new Array(this._pts.size()).fill(null),e=0;e<this._pts.size();e++)t[e]=this._pts.get(e);this._ring=this._geometryFactory.createLinearRing(t),this._isHole=ft.isCCW(this._ring.getCoordinates())}},{key:\"isIsolated\",value:function(){return 1===this._label.getGeometryCount()}},{key:\"computePoints\",value:function(t){this._startDe=t;var e=t,n=!0;do{if(null===e)throw new pt(\"Found null DirectedEdge\");if(e.getEdgeRing()===this)throw new pt(\"Directed Edge visited twice during ring-building at \"+e.getCoordinate());this._edges.add(e);var r=e.getLabel();V.isTrue(r.isArea()),this.mergeLabel(r),this.addPoints(e.getEdge(),e.isForward(),n),n=!1,this.setEdgeRing(e,this),e=this.getNext(e)}while(e!==this._startDe)}},{key:\"getLinearRing\",value:function(){return this._ring}},{key:\"getCoordinate\",value:function(t){return this._pts.get(t)}},{key:\"computeMaxNodeDegree\",value:function(){this._maxNodeDegree=0;var t=this._startDe;do{var e=t.getNode().getEdges().getOutgoingDegree(this);e>this._maxNodeDegree&&(this._maxNodeDegree=e),t=this.getNext(t)}while(t!==this._startDe);this._maxNodeDegree*=2}},{key:\"addPoints\",value:function(t,e,n){var r=t.getCoordinates();if(e){var i=1;n&&(i=0);for(var o=i;o<r.length;o++)this._pts.add(r[o])}else{var s=r.length-2;n&&(s=r.length-1);for(var a=s;a>=0;a--)this._pts.add(r[a])}}},{key:\"isHole\",value:function(){return this._isHole}},{key:\"setInResult\",value:function(){var t=this._startDe;do{t.getEdge().setInResult(!0),t=t.getNext()}while(t!==this._startDe)}},{key:\"containsPoint\",value:function(t){var e=this.getLinearRing();if(!e.getEnvelopeInternal().contains(t))return!1;if(!Oe.isInRing(t,e.getCoordinates()))return!1;for(var n=this._holes.iterator();n.hasNext();)if(n.next().containsPoint(t))return!1;return!0}},{key:\"addHole\",value:function(t){this._holes.add(t)}},{key:\"isShell\",value:function(){return null===this._shell}},{key:\"getLabel\",value:function(){return this._label}},{key:\"getEdges\",value:function(){return this._edges}},{key:\"getMaxNodeDegree\",value:function(){return this._maxNodeDegree<0&&this.computeMaxNodeDegree(),this._maxNodeDegree}},{key:\"getShell\",value:function(){return this._shell}},{key:\"mergeLabel\",value:function(){if(1===arguments.length){var t=arguments[0];this.mergeLabel(t,0),this.mergeLabel(t,1)}else if(2===arguments.length){var e=arguments[1],n=arguments[0].getLocation(e,tt.RIGHT);if(n===Z.NONE)return null;if(this._label.getLocation(e)===Z.NONE)return this._label.setLocation(e,n),null}}},{key:\"setShell\",value:function(t){this._shell=t,null!==t&&t.addHole(this)}},{key:\"toPolygon\",value:function(t){for(var e=new Array(this._holes.size()).fill(null),n=0;n<this._holes.size();n++)e[n]=this._holes.get(n).getLinearRing();return t.createPolygon(this.getLinearRing(),e)}}],[{key:\"constructor_\",value:function(){if(this._startDe=null,this._maxNodeDegree=-1,this._edges=new dt,this._pts=new dt,this._label=new Ae(Z.NONE),this._ring=null,this._isHole=null,this._shell=null,this._holes=new dt,this._geometryFactory=null,0===arguments.length);else if(2===arguments.length){var t=arguments[0],e=arguments[1];this._geometryFactory=e,this.computePoints(t),this.computeRing()}}}]),e}(),Fe=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),e=i.call(this),o.constructor_.apply(l(e),arguments),e}return n(o,[{key:\"setEdgeRing\",value:function(t,e){t.setMinEdgeRing(e)}},{key:\"getNext\",value:function(t){return t.getNextMin()}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];De.constructor_.call(this,t,e)}}]),o}(De),qe=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),e=i.call(this),o.constructor_.apply(l(e),arguments),e}return n(o,[{key:\"buildMinimalRings\",value:function(){var t=new dt,e=this._startDe;do{if(null===e.getMinEdgeRing()){var n=new Fe(e,this._geometryFactory);t.add(n)}e=e.getNext()}while(e!==this._startDe);return t}},{key:\"setEdgeRing\",value:function(t,e){t.setEdgeRing(e)}},{key:\"linkDirectedEdgesForMinimalEdgeRings\",value:function(){var t=this._startDe;do{t.getNode().getEdges().linkMinimalDirectedEdges(this),t=t.getNext()}while(t!==this._startDe)}},{key:\"getNext\",value:function(t){return t.getNext()}}],[{key:\"constructor_\",value:function(){var t=arguments[0],e=arguments[1];De.constructor_.call(this,t,e)}}]),o}(De),Ve=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"setVisited\",value:function(t){this._isVisited=t}},{key:\"setInResult\",value:function(t){this._isInResult=t}},{key:\"isCovered\",value:function(){return this._isCovered}},{key:\"isCoveredSet\",value:function(){return this._isCoveredSet}},{key:\"setLabel\",value:function(t){this._label=t}},{key:\"getLabel\",value:function(){return this._label}},{key:\"setCovered\",value:function(t){this._isCovered=t,this._isCoveredSet=!0}},{key:\"updateIM\",value:function(t){V.isTrue(this._label.getGeometryCount()>=2,\"found partial label\"),this.computeIM(t)}},{key:\"isInResult\",value:function(){return this._isInResult}},{key:\"isVisited\",value:function(){return this._isVisited}}],[{key:\"constructor_\",value:function(){if(this._label=null,this._isInResult=!1,this._isCovered=!1,this._isCoveredSet=!1,this._isVisited=!1,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._label=t}}}]),e}(),Ge=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"isIncidentEdgeInResult\",value:function(){for(var t=this.getEdges().getEdges().iterator();t.hasNext();)if(t.next().getEdge().isInResult())return!0;return!1}},{key:\"isIsolated\",value:function(){return 1===this._label.getGeometryCount()}},{key:\"getCoordinate\",value:function(){return this._coord}},{key:\"print\",value:function(t){t.println(\"node \"+this._coord+\" lbl: \"+this._label)}},{key:\"computeIM\",value:function(t){}},{key:\"computeMergedLocation\",value:function(t,e){var n=Z.NONE;if(n=this._label.getLocation(e),!t.isNull(e)){var r=t.getLocation(e);n!==Z.BOUNDARY&&(n=r)}return n}},{key:\"setLabel\",value:function(){if(2!==arguments.length||!Number.isInteger(arguments[1])||!Number.isInteger(arguments[0]))return f(i(s.prototype),\"setLabel\",this).apply(this,arguments);var t=arguments[0],e=arguments[1];null===this._label?this._label=new Ae(t,e):this._label.setLocation(t,e)}},{key:\"getEdges\",value:function(){return this._edges}},{key:\"mergeLabel\",value:function(){if(arguments[0]instanceof s){var t=arguments[0];this.mergeLabel(t._label)}else if(arguments[0]instanceof Ae)for(var e=arguments[0],n=0;n<2;n++){var r=this.computeMergedLocation(e,n);this._label.getLocation(n)===Z.NONE&&this._label.setLocation(n,r)}}},{key:\"add\",value:function(t){this._edges.insert(t),t.setNode(this)}},{key:\"setLabelBoundary\",value:function(t){if(null===this._label)return null;var e=Z.NONE;null!==this._label&&(e=this._label.getLocation(t));var n=null;switch(e){case Z.BOUNDARY:n=Z.INTERIOR;break;case Z.INTERIOR:default:n=Z.BOUNDARY}this._label.setLocation(t,n)}}],[{key:\"constructor_\",value:function(){this._coord=null,this._edges=null;var t=arguments[0],e=arguments[1];this._coord=t,this._edges=e,this._label=new Ae(0,Z.NONE)}}]),s}(Ve),Be=function(e){r(i,e);var n=c(i);function i(){return t(this,i),n.apply(this,arguments)}return i}(ne);function Ye(t){return null==t?0:t.color}function ze(t){return null==t?null:t.parent}function je(t,e){null!==t&&(t.color=e)}function Xe(t){return null==t?null:t.left}function Ue(t){return null==t?null:t.right}var Ze=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),(e=i.call(this)).root_=null,e.size_=0,e}return n(o,[{key:\"get\",value:function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return e.value;e=e.right}}return null}},{key:\"put\",value:function(t,e){if(null===this.root_)return this.root_={key:t,value:e,left:null,right:null,parent:null,color:0,getValue:function(){return this.value},getKey:function(){return this.key}},this.size_=1,null;var n,r,i=this.root_;do{if(n=i,(r=t.compareTo(i.key))<0)i=i.left;else{if(!(r>0)){var o=i.value;return i.value=e,o}i=i.right}}while(null!==i);var s={key:t,left:null,right:null,value:e,parent:n,color:0,getValue:function(){return this.value},getKey:function(){return this.key}};return r<0?n.left=s:n.right=s,this.fixAfterInsertion(s),this.size_++,null}},{key:\"fixAfterInsertion\",value:function(t){var e;for(t.color=1;null!=t&&t!==this.root_&&1===t.parent.color;)ze(t)===Xe(ze(ze(t)))?1===Ye(e=Ue(ze(ze(t))))?(je(ze(t),0),je(e,0),je(ze(ze(t)),1),t=ze(ze(t))):(t===Ue(ze(t))&&(t=ze(t),this.rotateLeft(t)),je(ze(t),0),je(ze(ze(t)),1),this.rotateRight(ze(ze(t)))):1===Ye(e=Xe(ze(ze(t))))?(je(ze(t),0),je(e,0),je(ze(ze(t)),1),t=ze(ze(t))):(t===Xe(ze(t))&&(t=ze(t),this.rotateRight(t)),je(ze(t),0),je(ze(ze(t)),1),this.rotateLeft(ze(ze(t))));this.root_.color=0}},{key:\"values\",value:function(){var t=new dt,e=this.getFirstEntry();if(null!==e)for(t.add(e.value);null!==(e=o.successor(e));)t.add(e.value);return t}},{key:\"entrySet\",value:function(){var t=new Q,e=this.getFirstEntry();if(null!==e)for(t.add(e);null!==(e=o.successor(e));)t.add(e);return t}},{key:\"rotateLeft\",value:function(t){if(null!=t){var e=t.right;t.right=e.left,null!=e.left&&(e.left.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.left===t?t.parent.left=e:t.parent.right=e,e.left=t,t.parent=e}}},{key:\"rotateRight\",value:function(t){if(null!=t){var e=t.left;t.left=e.right,null!=e.right&&(e.right.parent=t),e.parent=t.parent,null==t.parent?this.root_=e:t.parent.right===t?t.parent.right=e:t.parent.left=e,e.right=t,t.parent=e}}},{key:\"getFirstEntry\",value:function(){var t=this.root_;if(null!=t)for(;null!=t.left;)t=t.left;return t}},{key:\"size\",value:function(){return this.size_}},{key:\"containsKey\",value:function(t){for(var e=this.root_;null!==e;){var n=t.compareTo(e.key);if(n<0)e=e.left;else{if(!(n>0))return!0;e=e.right}}return!1}}],[{key:\"successor\",value:function(t){var e;if(null===t)return null;if(null!==t.right){for(e=t.right;null!==e.left;)e=e.left;return e}e=t.parent;for(var n=t;null!==e&&n===e.right;)n=e,e=e.parent;return e}}]),o}(Be),He=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"find\",value:function(t){return this.nodeMap.get(t)}},{key:\"addNode\",value:function(){if(arguments[0]instanceof z){var t=arguments[0],e=this.nodeMap.get(t);return null===e&&(e=this.nodeFact.createNode(t),this.nodeMap.put(t,e)),e}if(arguments[0]instanceof Ge){var n=arguments[0],r=this.nodeMap.get(n.getCoordinate());return null===r?(this.nodeMap.put(n.getCoordinate(),n),n):(r.mergeLabel(n),r)}}},{key:\"print\",value:function(t){for(var e=this.iterator();e.hasNext();)e.next().print(t)}},{key:\"iterator\",value:function(){return this.nodeMap.values().iterator()}},{key:\"values\",value:function(){return this.nodeMap.values()}},{key:\"getBoundaryNodes\",value:function(t){for(var e=new dt,n=this.iterator();n.hasNext();){var r=n.next();r.getLabel().getLocation(t)===Z.BOUNDARY&&e.add(r)}return e}},{key:\"add\",value:function(t){var e=t.getCoordinate();this.addNode(e).add(t)}}],[{key:\"constructor_\",value:function(){this.nodeMap=new Ze,this.nodeFact=null;var t=arguments[0];this.nodeFact=t}}]),e}(),We=function(){function e(){t(this,e)}return n(e,null,[{key:\"isNorthern\",value:function(t){return t===e.NE||t===e.NW}},{key:\"isOpposite\",value:function(t,e){return t!==e&&2==(t-e+4)%4}},{key:\"commonHalfPlane\",value:function(t,e){if(t===e)return t;if(2==(t-e+4)%4)return-1;var n=t<e?t:e;return 0===n&&3===(t>e?t:e)?3:n}},{key:\"isInHalfPlane\",value:function(t,n){return n===e.SE?t===e.SE||t===e.SW:t===n||t===n+1}},{key:\"quadrant\",value:function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],n=arguments[1];if(0===t&&0===n)throw new x(\"Cannot compute the quadrant for point ( \"+t+\", \"+n+\" )\");return t>=0?n>=0?e.NE:e.SE:n>=0?e.NW:e.SW}if(arguments[0]instanceof z&&arguments[1]instanceof z){var r=arguments[0],i=arguments[1];if(i.x===r.x&&i.y===r.y)throw new x(\"Cannot compute the quadrant for two identical points \"+r);return i.x>=r.x?i.y>=r.y?e.NE:e.SE:i.y>=r.y?e.NW:e.SW}}}]),e}();We.NE=0,We.NW=1,We.SW=2,We.SE=3;var Je=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"compareDirection\",value:function(t){return this._dx===t._dx&&this._dy===t._dy?0:this._quadrant>t._quadrant?1:this._quadrant<t._quadrant?-1:ft.index(t._p0,t._p1,this._p1)}},{key:\"getDy\",value:function(){return this._dy}},{key:\"getCoordinate\",value:function(){return this._p0}},{key:\"setNode\",value:function(t){this._node=t}},{key:\"print\",value:function(t){var e=Math.atan2(this._dy,this._dx),n=this.getClass().getName(),r=n.lastIndexOf(\".\"),i=n.substring(r+1);t.print(\"  \"+i+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+e+\"   \"+this._label)}},{key:\"compareTo\",value:function(t){var e=t;return this.compareDirection(e)}},{key:\"getDirectedCoordinate\",value:function(){return this._p1}},{key:\"getDx\",value:function(){return this._dx}},{key:\"getLabel\",value:function(){return this._label}},{key:\"getEdge\",value:function(){return this._edge}},{key:\"getQuadrant\",value:function(){return this._quadrant}},{key:\"getNode\",value:function(){return this._node}},{key:\"toString\",value:function(){var t=Math.atan2(this._dy,this._dx),e=this.getClass().getName(),n=e.lastIndexOf(\".\");return\"  \"+e.substring(n+1)+\": \"+this._p0+\" - \"+this._p1+\" \"+this._quadrant+\":\"+t+\"   \"+this._label}},{key:\"computeLabel\",value:function(t){}},{key:\"init\",value:function(t,e){this._p0=t,this._p1=e,this._dx=e.x-t.x,this._dy=e.y-t.y,this._quadrant=We.quadrant(this._dx,this._dy),V.isTrue(!(0===this._dx&&0===this._dy),\"EdgeEnd with identical endpoints found\")}},{key:\"interfaces_\",get:function(){return[k]}}],[{key:\"constructor_\",value:function(){if(this._edge=null,this._label=null,this._node=null,this._p0=null,this._p1=null,this._dx=null,this._dy=null,this._quadrant=null,1===arguments.length){var t=arguments[0];this._edge=t}else if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];e.constructor_.call(this,n,r,i,null)}else if(4===arguments.length){var o=arguments[0],s=arguments[1],a=arguments[2],u=arguments[3];e.constructor_.call(this,o),this.init(s,a),this._label=u}}}]),e}(),Ke=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"getNextMin\",value:function(){return this._nextMin}},{key:\"getDepth\",value:function(t){return this._depth[t]}},{key:\"setVisited\",value:function(t){this._isVisited=t}},{key:\"computeDirectedLabel\",value:function(){this._label=new Ae(this._edge.getLabel()),this._isForward||this._label.flip()}},{key:\"getNext\",value:function(){return this._next}},{key:\"setDepth\",value:function(t,e){if(-999!==this._depth[t]&&this._depth[t]!==e)throw new pt(\"assigned depths do not match\",this.getCoordinate());this._depth[t]=e}},{key:\"isInteriorAreaEdge\",value:function(){for(var t=!0,e=0;e<2;e++)this._label.isArea(e)&&this._label.getLocation(e,tt.LEFT)===Z.INTERIOR&&this._label.getLocation(e,tt.RIGHT)===Z.INTERIOR||(t=!1);return t}},{key:\"setNextMin\",value:function(t){this._nextMin=t}},{key:\"print\",value:function(t){f(i(s.prototype),\"print\",this).call(this,t),t.print(\" \"+this._depth[tt.LEFT]+\"/\"+this._depth[tt.RIGHT]),t.print(\" (\"+this.getDepthDelta()+\")\"),this._isInResult&&t.print(\" inResult\")}},{key:\"setMinEdgeRing\",value:function(t){this._minEdgeRing=t}},{key:\"isLineEdge\",value:function(){var t=this._label.isLine(0)||this._label.isLine(1),e=!this._label.isArea(0)||this._label.allPositionsEqual(0,Z.EXTERIOR),n=!this._label.isArea(1)||this._label.allPositionsEqual(1,Z.EXTERIOR);return t&&e&&n}},{key:\"setEdgeRing\",value:function(t){this._edgeRing=t}},{key:\"getMinEdgeRing\",value:function(){return this._minEdgeRing}},{key:\"getDepthDelta\",value:function(){var t=this._edge.getDepthDelta();return this._isForward||(t=-t),t}},{key:\"setInResult\",value:function(t){this._isInResult=t}},{key:\"getSym\",value:function(){return this._sym}},{key:\"isForward\",value:function(){return this._isForward}},{key:\"getEdge\",value:function(){return this._edge}},{key:\"printEdge\",value:function(t){this.print(t),t.print(\" \"),this._isForward?this._edge.print(t):this._edge.printReverse(t)}},{key:\"setSym\",value:function(t){this._sym=t}},{key:\"setVisitedEdge\",value:function(t){this.setVisited(t),this._sym.setVisited(t)}},{key:\"setEdgeDepths\",value:function(t,e){var n=this.getEdge().getDepthDelta();this._isForward||(n=-n);var r=1;t===tt.LEFT&&(r=-1);var i=tt.opposite(t),o=e+n*r;this.setDepth(t,e),this.setDepth(i,o)}},{key:\"getEdgeRing\",value:function(){return this._edgeRing}},{key:\"isInResult\",value:function(){return this._isInResult}},{key:\"setNext\",value:function(t){this._next=t}},{key:\"isVisited\",value:function(){return this._isVisited}}],[{key:\"constructor_\",value:function(){this._isForward=null,this._isInResult=!1,this._isVisited=!1,this._sym=null,this._next=null,this._nextMin=null,this._edgeRing=null,this._minEdgeRing=null,this._depth=[0,-999,-999];var t=arguments[0],e=arguments[1];if(Je.constructor_.call(this,t),this._isForward=e,e)this.init(t.getCoordinate(0),t.getCoordinate(1));else{var n=t.getNumPoints()-1;this.init(t.getCoordinate(n),t.getCoordinate(n-1))}this.computeDirectedLabel()}},{key:\"depthFactor\",value:function(t,e){return t===Z.EXTERIOR&&e===Z.INTERIOR?1:t===Z.INTERIOR&&e===Z.EXTERIOR?-1:0}}]),s}(Je),Qe=function(){function e(){t(this,e)}return n(e,[{key:\"createNode\",value:function(t){return new Ge(t,null)}}]),e}(),$e=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"printEdges\",value:function(t){t.println(\"Edges:\");for(var e=0;e<this._edges.size();e++){t.println(\"edge \"+e+\":\");var n=this._edges.get(e);n.print(t),n.eiList.print(t)}}},{key:\"find\",value:function(t){return this._nodes.find(t)}},{key:\"addNode\",value:function(){if(arguments[0]instanceof Ge){var t=arguments[0];return this._nodes.addNode(t)}if(arguments[0]instanceof z){var e=arguments[0];return this._nodes.addNode(e)}}},{key:\"getNodeIterator\",value:function(){return this._nodes.iterator()}},{key:\"linkResultDirectedEdges\",value:function(){for(var t=this._nodes.iterator();t.hasNext();)t.next().getEdges().linkResultDirectedEdges()}},{key:\"debugPrintln\",value:function(t){xt.out.println(t)}},{key:\"isBoundaryNode\",value:function(t,e){var n=this._nodes.find(e);if(null===n)return!1;var r=n.getLabel();return null!==r&&r.getLocation(t)===Z.BOUNDARY}},{key:\"linkAllDirectedEdges\",value:function(){for(var t=this._nodes.iterator();t.hasNext();)t.next().getEdges().linkAllDirectedEdges()}},{key:\"matchInSameDirection\",value:function(t,e,n,r){return!!t.equals(n)&&ft.index(t,e,r)===ft.COLLINEAR&&We.quadrant(t,e)===We.quadrant(n,r)}},{key:\"getEdgeEnds\",value:function(){return this._edgeEndList}},{key:\"debugPrint\",value:function(t){xt.out.print(t)}},{key:\"getEdgeIterator\",value:function(){return this._edges.iterator()}},{key:\"findEdgeInSameDirection\",value:function(t,e){for(var n=0;n<this._edges.size();n++){var r=this._edges.get(n),i=r.getCoordinates();if(this.matchInSameDirection(t,e,i[0],i[1]))return r;if(this.matchInSameDirection(t,e,i[i.length-1],i[i.length-2]))return r}return null}},{key:\"insertEdge\",value:function(t){this._edges.add(t)}},{key:\"findEdgeEnd\",value:function(t){for(var e=this.getEdgeEnds().iterator();e.hasNext();){var n=e.next();if(n.getEdge()===t)return n}return null}},{key:\"addEdges\",value:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next();this._edges.add(n);var r=new Ke(n,!0),i=new Ke(n,!1);r.setSym(i),i.setSym(r),this.add(r),this.add(i)}}},{key:\"add\",value:function(t){this._nodes.add(t),this._edgeEndList.add(t)}},{key:\"getNodes\",value:function(){return this._nodes.values()}},{key:\"findEdge\",value:function(t,e){for(var n=0;n<this._edges.size();n++){var r=this._edges.get(n),i=r.getCoordinates();if(t.equals(i[0])&&e.equals(i[1]))return r}return null}}],[{key:\"constructor_\",value:function(){if(this._edges=new dt,this._nodes=null,this._edgeEndList=new dt,0===arguments.length)this._nodes=new He(new Qe);else if(1===arguments.length){var t=arguments[0];this._nodes=new He(t)}}},{key:\"linkResultDirectedEdges\",value:function(t){for(var e=t.iterator();e.hasNext();)e.next().getEdges().linkResultDirectedEdges()}}]),e}(),tn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"sortShellsAndHoles\",value:function(t,e,n){for(var r=t.iterator();r.hasNext();){var i=r.next();i.isHole()?n.add(i):e.add(i)}}},{key:\"computePolygons\",value:function(t){for(var e=new dt,n=t.iterator();n.hasNext();){var r=n.next().toPolygon(this._geometryFactory);e.add(r)}return e}},{key:\"placeFreeHoles\",value:function(t,n){for(var r=n.iterator();r.hasNext();){var i=r.next();if(null===i.getShell()){var o=e.findEdgeRingContaining(i,t);if(null===o)throw new pt(\"unable to assign hole to a shell\",i.getCoordinate(0));i.setShell(o)}}}},{key:\"buildMinimalEdgeRings\",value:function(t,e,n){for(var r=new dt,i=t.iterator();i.hasNext();){var o=i.next();if(o.getMaxNodeDegree()>2){o.linkDirectedEdgesForMinimalEdgeRings();var s=o.buildMinimalRings(),a=this.findShell(s);null!==a?(this.placePolygonHoles(a,s),e.add(a)):n.addAll(s)}else r.add(o)}return r}},{key:\"buildMaximalEdgeRings\",value:function(t){for(var e=new dt,n=t.iterator();n.hasNext();){var r=n.next();if(r.isInResult()&&r.getLabel().isArea()&&null===r.getEdgeRing()){var i=new qe(r,this._geometryFactory);e.add(i),i.setInResult()}}return e}},{key:\"placePolygonHoles\",value:function(t,e){for(var n=e.iterator();n.hasNext();){var r=n.next();r.isHole()&&r.setShell(t)}}},{key:\"getPolygons\",value:function(){return this.computePolygons(this._shellList)}},{key:\"findShell\",value:function(t){for(var e=0,n=null,r=t.iterator();r.hasNext();){var i=r.next();i.isHole()||(n=i,e++)}return V.isTrue(e<=1,\"found two shells in MinimalEdgeRing list\"),n}},{key:\"add\",value:function(){if(1===arguments.length){var t=arguments[0];this.add(t.getEdgeEnds(),t.getNodes())}else if(2===arguments.length){var e=arguments[0],n=arguments[1];$e.linkResultDirectedEdges(n);var r=this.buildMaximalEdgeRings(e),i=new dt,o=this.buildMinimalEdgeRings(r,this._shellList,i);this.sortShellsAndHoles(o,this._shellList,i),this.placeFreeHoles(this._shellList,i)}}}],[{key:\"constructor_\",value:function(){this._geometryFactory=null,this._shellList=new dt;var t=arguments[0];this._geometryFactory=t}},{key:\"findEdgeRingContaining\",value:function(t,e){for(var n=t.getLinearRing(),r=n.getEnvelopeInternal(),i=n.getCoordinateN(0),o=null,s=null,a=e.iterator();a.hasNext();){var u=a.next(),l=u.getLinearRing(),h=l.getEnvelopeInternal();if(!h.equals(r)&&h.contains(r)){i=Wt.ptNotInList(n.getCoordinates(),l.getCoordinates());var c=!1;Oe.isInRing(i,l.getCoordinates())&&(c=!0),c&&(null===o||s.contains(h))&&(s=(o=u).getLinearRing().getEnvelopeInternal())}}return o}}]),e}(),en=function(){function e(){t(this,e)}return n(e,[{key:\"getBounds\",value:function(){}}]),e}(),nn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getItem\",value:function(){return this._item}},{key:\"getBounds\",value:function(){return this._bounds}},{key:\"interfaces_\",get:function(){return[en,w]}}],[{key:\"constructor_\",value:function(){this._bounds=null,this._item=null;var t=arguments[0],e=arguments[1];this._bounds=t,this._item=e}}]),e}(),rn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"poll\",value:function(){if(this.isEmpty())return null;var t=this._items.get(1);return this._items.set(1,this._items.get(this._size)),this._size-=1,this.reorder(1),t}},{key:\"size\",value:function(){return this._size}},{key:\"reorder\",value:function(t){for(var e=null,n=this._items.get(t);2*t<=this._size&&((e=2*t)!==this._size&&this._items.get(e+1).compareTo(this._items.get(e))<0&&e++,this._items.get(e).compareTo(n)<0);t=e)this._items.set(t,this._items.get(e));this._items.set(t,n)}},{key:\"clear\",value:function(){this._size=0,this._items.clear()}},{key:\"peek\",value:function(){return this.isEmpty()?null:this._items.get(1)}},{key:\"isEmpty\",value:function(){return 0===this._size}},{key:\"add\",value:function(t){this._items.add(null),this._size+=1;var e=this._size;for(this._items.set(0,t);t.compareTo(this._items.get(Math.trunc(e/2)))<0;e/=2)this._items.set(e,this._items.get(Math.trunc(e/2)));this._items.set(e,t)}}],[{key:\"constructor_\",value:function(){this._size=null,this._items=null,this._size=0,this._items=new dt,this._items.add(null)}}]),e}(),on=function(){function e(){t(this,e)}return n(e,[{key:\"insert\",value:function(t,e){}},{key:\"remove\",value:function(t,e){}},{key:\"query\",value:function(){}}]),e}(),sn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getLevel\",value:function(){return this._level}},{key:\"size\",value:function(){return this._childBoundables.size()}},{key:\"getChildBoundables\",value:function(){return this._childBoundables}},{key:\"addChildBoundable\",value:function(t){V.isTrue(null===this._bounds),this._childBoundables.add(t)}},{key:\"isEmpty\",value:function(){return this._childBoundables.isEmpty()}},{key:\"getBounds\",value:function(){return null===this._bounds&&(this._bounds=this.computeBounds()),this._bounds}},{key:\"interfaces_\",get:function(){return[en,w]}}],[{key:\"constructor_\",value:function(){if(this._childBoundables=new dt,this._bounds=null,this._level=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this._level=t}}}]),e}(),an={reverseOrder:function(){return{compare:function(t,e){return e.compareTo(t)}}},min:function(t){return an.sort(t),t.get(0)},sort:function(t,e){var n=t.toArray();e?At.sort(n,e):At.sort(n);for(var r=t.iterator(),i=0,o=n.length;i<o;i++)r.next(),r.set(n[i])},singletonList:function(t){var e=new dt;return e.add(t),e}},un=function(){function e(){t(this,e)}return n(e,null,[{key:\"maxDistance\",value:function(t,n,r,i,o,s,a,u){var l=e.distance(t,n,o,s);return l=Math.max(l,e.distance(t,n,a,u)),l=Math.max(l,e.distance(r,i,o,s)),Math.max(l,e.distance(r,i,a,u))}},{key:\"distance\",value:function(t,e,n,r){var i=n-t,o=r-e;return Math.sqrt(i*i+o*o)}},{key:\"maximumDistance\",value:function(t,n){var r=Math.min(t.getMinX(),n.getMinX()),i=Math.min(t.getMinY(),n.getMinY()),o=Math.max(t.getMaxX(),n.getMaxX()),s=Math.max(t.getMaxY(),n.getMaxY());return e.distance(r,i,o,s)}},{key:\"minMaxDistance\",value:function(t,n){var r=t.getMinX(),i=t.getMinY(),o=t.getMaxX(),s=t.getMaxY(),a=n.getMinX(),u=n.getMinY(),l=n.getMaxX(),h=n.getMaxY(),c=e.maxDistance(r,i,r,s,a,u,a,h);return c=Math.min(c,e.maxDistance(r,i,r,s,a,u,l,u)),c=Math.min(c,e.maxDistance(r,i,r,s,l,h,a,h)),c=Math.min(c,e.maxDistance(r,i,r,s,l,h,l,u)),c=Math.min(c,e.maxDistance(r,i,o,i,a,u,a,h)),c=Math.min(c,e.maxDistance(r,i,o,i,a,u,l,u)),c=Math.min(c,e.maxDistance(r,i,o,i,l,h,a,h)),c=Math.min(c,e.maxDistance(r,i,o,i,l,h,l,u)),c=Math.min(c,e.maxDistance(o,s,r,s,a,u,a,h)),c=Math.min(c,e.maxDistance(o,s,r,s,a,u,l,u)),c=Math.min(c,e.maxDistance(o,s,r,s,l,h,a,h)),c=Math.min(c,e.maxDistance(o,s,r,s,l,h,l,u)),c=Math.min(c,e.maxDistance(o,s,o,i,a,u,a,h)),c=Math.min(c,e.maxDistance(o,s,o,i,a,u,l,u)),c=Math.min(c,e.maxDistance(o,s,o,i,l,h,a,h)),Math.min(c,e.maxDistance(o,s,o,i,l,h,l,u))}}]),e}(),ln=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"maximumDistance\",value:function(){return un.maximumDistance(this._boundable1.getBounds(),this._boundable2.getBounds())}},{key:\"expandToQueue\",value:function(t,n){var r=e.isComposite(this._boundable1),i=e.isComposite(this._boundable2);if(r&&i)return e.area(this._boundable1)>e.area(this._boundable2)?(this.expand(this._boundable1,this._boundable2,!1,t,n),null):(this.expand(this._boundable2,this._boundable1,!0,t,n),null);if(r)return this.expand(this._boundable1,this._boundable2,!1,t,n),null;if(i)return this.expand(this._boundable2,this._boundable1,!0,t,n),null;throw new x(\"neither boundable is composite\")}},{key:\"isLeaves\",value:function(){return!(e.isComposite(this._boundable1)||e.isComposite(this._boundable2))}},{key:\"compareTo\",value:function(t){var e=t;return this._distance<e._distance?-1:this._distance>e._distance?1:0}},{key:\"expand\",value:function(t,n,r,i,o){for(var s=t.getChildBoundables().iterator();s.hasNext();){var a=s.next(),u=null;(u=r?new e(n,a,this._itemDistance):new e(a,n,this._itemDistance)).getDistance()<o&&i.add(u)}}},{key:\"getBoundable\",value:function(t){return 0===t?this._boundable1:this._boundable2}},{key:\"getDistance\",value:function(){return this._distance}},{key:\"distance\",value:function(){return this.isLeaves()?this._itemDistance.distance(this._boundable1,this._boundable2):this._boundable1.getBounds().distance(this._boundable2.getBounds())}},{key:\"interfaces_\",get:function(){return[k]}}],[{key:\"constructor_\",value:function(){this._boundable1=null,this._boundable2=null,this._distance=null,this._itemDistance=null;var t=arguments[0],e=arguments[1],n=arguments[2];this._boundable1=t,this._boundable2=e,this._itemDistance=n,this._distance=this.distance()}},{key:\"area\",value:function(t){return t.getBounds().getArea()}},{key:\"isComposite\",value:function(t){return t instanceof sn}}]),e}(),hn=function(){function e(){t(this,e)}return n(e,[{key:\"visitItem\",value:function(t){}}]),e}(),cn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"queryInternal\",value:function(){if(ot(arguments[2],hn)&&arguments[0]instanceof Object&&arguments[1]instanceof sn)for(var t=arguments[0],e=arguments[2],n=arguments[1].getChildBoundables(),r=0;r<n.size();r++){var i=n.get(r);this.getIntersectsOp().intersects(i.getBounds(),t)&&(i instanceof sn?this.queryInternal(t,i,e):i instanceof nn?e.visitItem(i.getItem()):V.shouldNeverReachHere())}else if(ot(arguments[2],rt)&&arguments[0]instanceof Object&&arguments[1]instanceof sn)for(var o=arguments[0],s=arguments[2],a=arguments[1].getChildBoundables(),u=0;u<a.size();u++){var l=a.get(u);this.getIntersectsOp().intersects(l.getBounds(),o)&&(l instanceof sn?this.queryInternal(o,l,s):l instanceof nn?s.add(l.getItem()):V.shouldNeverReachHere())}}},{key:\"getNodeCapacity\",value:function(){return this._nodeCapacity}},{key:\"lastNode\",value:function(t){return t.get(t.size()-1)}},{key:\"size\",value:function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.size(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();n instanceof sn?t+=this.size(n):n instanceof nn&&(t+=1)}return t}}},{key:\"removeItem\",value:function(t,e){for(var n=null,r=t.getChildBoundables().iterator();r.hasNext();){var i=r.next();i instanceof nn&&i.getItem()===e&&(n=i)}return null!==n&&(t.getChildBoundables().remove(n),!0)}},{key:\"itemsTree\",value:function(){if(0===arguments.length){this.build();var t=this.itemsTree(this._root);return null===t?new dt:t}if(1===arguments.length){for(var e=arguments[0],n=new dt,r=e.getChildBoundables().iterator();r.hasNext();){var i=r.next();if(i instanceof sn){var o=this.itemsTree(i);null!==o&&n.add(o)}else i instanceof nn?n.add(i.getItem()):V.shouldNeverReachHere()}return n.size()<=0?null:n}}},{key:\"insert\",value:function(t,e){V.isTrue(!this._built,\"Cannot insert items into an STR packed R-tree after it has been built.\"),this._itemBoundables.add(new nn(t,e))}},{key:\"boundablesAtLevel\",value:function(){if(1===arguments.length){var t=arguments[0],e=new dt;return this.boundablesAtLevel(t,this._root,e),e}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2];if(V.isTrue(n>-2),r.getLevel()===n)return i.add(r),null;for(var o=r.getChildBoundables().iterator();o.hasNext();){var s=o.next();s instanceof sn?this.boundablesAtLevel(n,s,i):(V.isTrue(s instanceof nn),-1===n&&i.add(s))}return null}}},{key:\"query\",value:function(){if(1===arguments.length){var t=arguments[0];this.build();var e=new dt;return this.isEmpty()||this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.queryInternal(t,this._root,e),e}if(2===arguments.length){var n=arguments[0],r=arguments[1];if(this.build(),this.isEmpty())return null;this.getIntersectsOp().intersects(this._root.getBounds(),n)&&this.queryInternal(n,this._root,r)}}},{key:\"build\",value:function(){if(this._built)return null;this._root=this._itemBoundables.isEmpty()?this.createNode(0):this.createHigherLevels(this._itemBoundables,-1),this._itemBoundables=null,this._built=!0}},{key:\"getRoot\",value:function(){return this.build(),this._root}},{key:\"remove\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.build(),!!this.getIntersectsOp().intersects(this._root.getBounds(),t)&&this.remove(t,this._root,e)}if(3===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=this.removeItem(r,i);if(o)return!0;for(var s=null,a=r.getChildBoundables().iterator();a.hasNext();){var u=a.next();if(this.getIntersectsOp().intersects(u.getBounds(),n)&&u instanceof sn&&(o=this.remove(n,u,i))){s=u;break}}return null!==s&&s.getChildBoundables().isEmpty()&&r.getChildBoundables().remove(s),o}}},{key:\"createHigherLevels\",value:function(t,e){V.isTrue(!t.isEmpty());var n=this.createParentBoundables(t,e+1);return 1===n.size()?n.get(0):this.createHigherLevels(n,e+1)}},{key:\"depth\",value:function(){if(0===arguments.length)return this.isEmpty()?0:(this.build(),this.depth(this._root));if(1===arguments.length){for(var t=0,e=arguments[0].getChildBoundables().iterator();e.hasNext();){var n=e.next();if(n instanceof sn){var r=this.depth(n);r>t&&(t=r)}}return t+1}}},{key:\"createParentBoundables\",value:function(t,e){V.isTrue(!t.isEmpty());var n=new dt;n.add(this.createNode(e));var r=new dt(t);an.sort(r,this.getComparator());for(var i=r.iterator();i.hasNext();){var o=i.next();this.lastNode(n).getChildBoundables().size()===this.getNodeCapacity()&&n.add(this.createNode(e)),this.lastNode(n).addChildBoundable(o)}return n}},{key:\"isEmpty\",value:function(){return this._built?this._root.isEmpty():this._itemBoundables.isEmpty()}},{key:\"interfaces_\",get:function(){return[w]}}],[{key:\"constructor_\",value:function(){if(this._root=null,this._built=!1,this._itemBoundables=new dt,this._nodeCapacity=null,0===arguments.length)e.constructor_.call(this,e.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var t=arguments[0];V.isTrue(t>1,\"Node capacity must be greater than 1\"),this._nodeCapacity=t}}},{key:\"compareDoubles\",value:function(t,e){return t>e?1:t<e?-1:0}}]),e}();cn.IntersectsOp=function(){},cn.DEFAULT_NODE_CAPACITY=10;var fn=function(){function e(){t(this,e)}return n(e,[{key:\"distance\",value:function(t,e){}}]),e}(),gn=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"createParentBoundablesFromVerticalSlices\",value:function(t,e){V.isTrue(t.length>0);for(var n=new dt,r=0;r<t.length;r++)n.addAll(this.createParentBoundablesFromVerticalSlice(t[r],e));return n}},{key:\"nearestNeighbourK\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];return this.nearestNeighbourK(t,A.POSITIVE_INFINITY,e)}if(3===arguments.length){var n=arguments[0],r=arguments[2],i=arguments[1],o=new rn;o.add(n);for(var a=new rn;!o.isEmpty()&&i>=0;){var u=o.poll(),l=u.getDistance();if(l>=i)break;u.isLeaves()?a.size()<r?a.add(u):(a.peek().getDistance()>l&&(a.poll(),a.add(u)),i=a.peek().getDistance()):u.expandToQueue(o,i)}return s.getItems(a)}}},{key:\"createNode\",value:function(t){return new pn(t)}},{key:\"size\",value:function(){return 0===arguments.length?f(i(s.prototype),\"size\",this).call(this):f(i(s.prototype),\"size\",this).apply(this,arguments)}},{key:\"insert\",value:function(){if(!(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof X))return f(i(s.prototype),\"insert\",this).apply(this,arguments);var t=arguments[0],e=arguments[1];if(t.isNull())return null;f(i(s.prototype),\"insert\",this).call(this,t,e)}},{key:\"getIntersectsOp\",value:function(){return s.intersectsOp}},{key:\"verticalSlices\",value:function(t,e){for(var n=Math.trunc(Math.ceil(t.size()/e)),r=new Array(e).fill(null),i=t.iterator(),o=0;o<e;o++){r[o]=new dt;for(var s=0;i.hasNext()&&s<n;){var a=i.next();r[o].add(a),s++}}return r}},{key:\"query\",value:function(){if(1===arguments.length){var t=arguments[0];return f(i(s.prototype),\"query\",this).call(this,t)}if(2===arguments.length){var e=arguments[0],n=arguments[1];f(i(s.prototype),\"query\",this).call(this,e,n)}}},{key:\"getComparator\",value:function(){return s.yComparator}},{key:\"createParentBoundablesFromVerticalSlice\",value:function(t,e){return f(i(s.prototype),\"createParentBoundables\",this).call(this,t,e)}},{key:\"remove\",value:function(){if(2===arguments.length&&arguments[1]instanceof Object&&arguments[0]instanceof X){var t=arguments[0],e=arguments[1];return f(i(s.prototype),\"remove\",this).call(this,t,e)}return f(i(s.prototype),\"remove\",this).apply(this,arguments)}},{key:\"depth\",value:function(){return 0===arguments.length?f(i(s.prototype),\"depth\",this).call(this):f(i(s.prototype),\"depth\",this).apply(this,arguments)}},{key:\"createParentBoundables\",value:function(t,e){V.isTrue(!t.isEmpty());var n=Math.trunc(Math.ceil(t.size()/this.getNodeCapacity())),r=new dt(t);an.sort(r,s.xComparator);var i=this.verticalSlices(r,Math.trunc(Math.ceil(Math.sqrt(n))));return this.createParentBoundablesFromVerticalSlices(i,e)}},{key:\"nearestNeighbour\",value:function(){if(1===arguments.length){if(ot(arguments[0],fn)){var t=arguments[0];if(this.isEmpty())return null;var e=new ln(this.getRoot(),this.getRoot(),t);return this.nearestNeighbour(e)}if(arguments[0]instanceof ln){var n=arguments[0],r=A.POSITIVE_INFINITY,i=null,o=new rn;for(o.add(n);!o.isEmpty()&&r>0;){var s=o.poll(),a=s.getDistance();if(a>=r)break;s.isLeaves()?(r=a,i=s):s.expandToQueue(o,r)}return null===i?null:[i.getBoundable(0).getItem(),i.getBoundable(1).getItem()]}}else{if(2===arguments.length){var u=arguments[0],l=arguments[1];if(this.isEmpty()||u.isEmpty())return null;var h=new ln(this.getRoot(),u.getRoot(),l);return this.nearestNeighbour(h)}if(3===arguments.length){var c=arguments[2],f=new nn(arguments[0],arguments[1]),g=new ln(this.getRoot(),f,c);return this.nearestNeighbour(g)[0]}if(4===arguments.length){var p=arguments[2],v=arguments[3],d=new nn(arguments[0],arguments[1]),y=new ln(this.getRoot(),d,p);return this.nearestNeighbourK(y,v)}}}},{key:\"isWithinDistance\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1],n=A.POSITIVE_INFINITY,r=new rn;for(r.add(t);!r.isEmpty();){var i=r.poll(),o=i.getDistance();if(o>e)return!1;if(i.maximumDistance()<=e)return!0;if(i.isLeaves()){if((n=o)<=e)return!0}else i.expandToQueue(r,n)}return!1}if(3===arguments.length){var s=arguments[0],a=arguments[1],u=arguments[2],l=new ln(this.getRoot(),s.getRoot(),a);return this.isWithinDistance(l,u)}}},{key:\"interfaces_\",get:function(){return[on,w]}}],[{key:\"constructor_\",value:function(){if(0===arguments.length)s.constructor_.call(this,s.DEFAULT_NODE_CAPACITY);else if(1===arguments.length){var t=arguments[0];cn.constructor_.call(this,t)}}},{key:\"centreX\",value:function(t){return s.avg(t.getMinX(),t.getMaxX())}},{key:\"avg\",value:function(t,e){return(t+e)/2}},{key:\"getItems\",value:function(t){for(var e=new Array(t.size()).fill(null),n=0;!t.isEmpty();){var r=t.poll();e[n]=r.getBoundable(0).getItem(),n++}return e}},{key:\"centreY\",value:function(t){return s.avg(t.getMinY(),t.getMaxY())}}]),s}(cn),pn=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),e=i.call(this),o.constructor_.apply(l(e),arguments),e}return n(o,[{key:\"computeBounds\",value:function(){for(var t=null,e=this.getChildBoundables().iterator();e.hasNext();){var n=e.next();null===t?t=new X(n.getBounds()):t.expandToInclude(n.getBounds())}return t}}],[{key:\"constructor_\",value:function(){var t=arguments[0];sn.constructor_.call(this,t)}}]),o}(sn);gn.STRtreeNode=pn,gn.xComparator=new(function(){function e(){t(this,e)}return n(e,[{key:\"interfaces_\",get:function(){return[D]}},{key:\"compare\",value:function(t,e){return cn.compareDoubles(gn.centreX(t.getBounds()),gn.centreX(e.getBounds()))}}]),e}()),gn.yComparator=new(function(){function e(){t(this,e)}return n(e,[{key:\"interfaces_\",get:function(){return[D]}},{key:\"compare\",value:function(t,e){return cn.compareDoubles(gn.centreY(t.getBounds()),gn.centreY(e.getBounds()))}}]),e}()),gn.intersectsOp=new(function(){function e(){t(this,e)}return n(e,[{key:\"interfaces_\",get:function(){return[IntersectsOp]}},{key:\"intersects\",value:function(t,e){return t.intersects(e)}}]),e}()),gn.DEFAULT_NODE_CAPACITY=10;var vn=function(){function e(){t(this,e)}return n(e,null,[{key:\"relativeSign\",value:function(t,e){return t<e?-1:t>e?1:0}},{key:\"compare\",value:function(t,n,r){if(n.equals2D(r))return 0;var i=e.relativeSign(n.x,r.x),o=e.relativeSign(n.y,r.y);switch(t){case 0:return e.compareValue(i,o);case 1:return e.compareValue(o,i);case 2:return e.compareValue(o,-i);case 3:return e.compareValue(-i,o);case 4:return e.compareValue(-i,-o);case 5:return e.compareValue(-o,-i);case 6:return e.compareValue(-o,i);case 7:return e.compareValue(i,-o)}return V.shouldNeverReachHere(\"invalid octant value\"),0}},{key:\"compareValue\",value:function(t,e){return t<0?-1:t>0?1:e<0?-1:e>0?1:0}}]),e}(),dn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getCoordinate\",value:function(){return this.coord}},{key:\"print\",value:function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex)}},{key:\"compareTo\",value:function(t){var e=t;return this.segmentIndex<e.segmentIndex?-1:this.segmentIndex>e.segmentIndex?1:this.coord.equals2D(e.coord)?0:this._isInterior?e._isInterior?vn.compare(this._segmentOctant,this.coord,e.coord):1:-1}},{key:\"isEndPoint\",value:function(t){return 0===this.segmentIndex&&!this._isInterior||this.segmentIndex===t}},{key:\"toString\",value:function(){return this.segmentIndex+\":\"+this.coord.toString()}},{key:\"isInterior\",value:function(){return this._isInterior}},{key:\"interfaces_\",get:function(){return[k]}}],[{key:\"constructor_\",value:function(){this._segString=null,this.coord=null,this.segmentIndex=null,this._segmentOctant=null,this._isInterior=null;var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this._segString=t,this.coord=new z(e),this.segmentIndex=n,this._segmentOctant=r,this._isInterior=!e.equals2D(t.getCoordinate(n))}}]),e}(),yn=function(){function e(){t(this,e)}return n(e,[{key:\"hasNext\",value:function(){}},{key:\"next\",value:function(){}},{key:\"remove\",value:function(){}}]),e}(),mn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getSplitCoordinates\",value:function(){var t=new Ht;this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next();this.addEdgeCoordinates(n,r,t),n=r}return t.toCoordinateArray()}},{key:\"addCollapsedNodes\",value:function(){var t=new dt;this.findCollapsesFromInsertedNodes(t),this.findCollapsesFromExistingVertices(t);for(var e=t.iterator();e.hasNext();){var n=e.next().intValue();this.add(this._edge.getCoordinate(n),n)}}},{key:\"createSplitEdgePts\",value:function(t,e){var n=e.segmentIndex-t.segmentIndex+2;if(2===n)return[new z(t.coord),new z(e.coord)];var r=this._edge.getCoordinate(e.segmentIndex),i=e.isInterior()||!e.coord.equals2D(r);i||n--;var o=new Array(n).fill(null),s=0;o[s++]=new z(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this._edge.getCoordinate(a);return i&&(o[s]=new z(e.coord)),o}},{key:\"print\",value:function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();)e.next().print(t)}},{key:\"findCollapsesFromExistingVertices\",value:function(t){for(var e=0;e<this._edge.size()-2;e++){var n=this._edge.getCoordinate(e);this._edge.getCoordinate(e+1);var r=this._edge.getCoordinate(e+2);n.equals2D(r)&&t.add(at.valueOf(e+1))}}},{key:\"addEdgeCoordinates\",value:function(t,e,n){var r=this.createSplitEdgePts(t,e);n.add(r,!1)}},{key:\"iterator\",value:function(){return this._nodeMap.values().iterator()}},{key:\"addSplitEdges\",value:function(t){this.addEndpoints(),this.addCollapsedNodes();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next(),i=this.createSplitEdge(n,r);t.add(i),n=r}}},{key:\"findCollapseIndex\",value:function(t,e,n){if(!t.coord.equals2D(e.coord))return!1;var r=e.segmentIndex-t.segmentIndex;return e.isInterior()||r--,1===r&&(n[0]=t.segmentIndex+1,!0)}},{key:\"findCollapsesFromInsertedNodes\",value:function(t){for(var e=new Array(1).fill(null),n=this.iterator(),r=n.next();n.hasNext();){var i=n.next();this.findCollapseIndex(r,i,e)&&t.add(at.valueOf(e[0])),r=i}}},{key:\"getEdge\",value:function(){return this._edge}},{key:\"addEndpoints\",value:function(){var t=this._edge.size()-1;this.add(this._edge.getCoordinate(0),0),this.add(this._edge.getCoordinate(t),t)}},{key:\"createSplitEdge\",value:function(t,e){var n=this.createSplitEdgePts(t,e);return new kn(n,this._edge.getData())}},{key:\"add\",value:function(t,e){var n=new dn(this._edge,t,e,this._edge.getSegmentOctant(e)),r=this._nodeMap.get(n);return null!==r?(V.isTrue(r.coord.equals2D(t),\"Found equal nodes with different coordinates\"),r):(this._nodeMap.put(n,n),n)}},{key:\"checkSplitEdgesCorrectness\",value:function(t){var e=this._edge.getCoordinates(),n=t.get(0).getCoordinate(0);if(!n.equals2D(e[0]))throw new F(\"bad split edge start point at \"+n);var r=t.get(t.size()-1).getCoordinates(),i=r[r.length-1];if(!i.equals2D(e[e.length-1]))throw new F(\"bad split edge end point at \"+i)}}],[{key:\"constructor_\",value:function(){this._nodeMap=new Ze,this._edge=null;var t=arguments[0];this._edge=t}}]),e}(),_n=function(){function e(){t(this,e)}return n(e,null,[{key:\"octant\",value:function(){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var t=arguments[0],n=arguments[1];if(0===t&&0===n)throw new x(\"Cannot compute the octant for point ( \"+t+\", \"+n+\" )\");var r=Math.abs(t),i=Math.abs(n);return t>=0?n>=0?r>=i?0:1:r>=i?7:6:n>=0?r>=i?3:2:r>=i?4:5}if(arguments[0]instanceof z&&arguments[1]instanceof z){var o=arguments[0],s=arguments[1],a=s.x-o.x,u=s.y-o.y;if(0===a&&0===u)throw new x(\"Cannot compute the octant for two identical points \"+o);return e.octant(a,u)}}}]),e}(),xn=function(){function e(){t(this,e)}return n(e,[{key:\"getCoordinates\",value:function(){}},{key:\"size\",value:function(){}},{key:\"getCoordinate\",value:function(t){}},{key:\"isClosed\",value:function(){}},{key:\"setData\",value:function(t){}},{key:\"getData\",value:function(){}}]),e}(),En=function(){function e(){t(this,e)}return n(e,[{key:\"addIntersection\",value:function(t,e){}},{key:\"interfaces_\",get:function(){return[xn]}}]),e}(),kn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getCoordinates\",value:function(){return this._pts}},{key:\"size\",value:function(){return this._pts.length}},{key:\"getCoordinate\",value:function(t){return this._pts[t]}},{key:\"isClosed\",value:function(){return this._pts[0].equals(this._pts[this._pts.length-1])}},{key:\"getSegmentOctant\",value:function(t){return t===this._pts.length-1?-1:this.safeOctant(this.getCoordinate(t),this.getCoordinate(t+1))}},{key:\"setData\",value:function(t){this._data=t}},{key:\"safeOctant\",value:function(t,e){return t.equals2D(e)?0:_n.octant(t,e)}},{key:\"getData\",value:function(){return this._data}},{key:\"addIntersection\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.addIntersectionNode(t,e)}else if(4===arguments.length){var n=arguments[1],r=arguments[3],i=new z(arguments[0].getIntersection(r));this.addIntersection(i,n)}}},{key:\"toString\",value:function(){return Le.toLineString(new $t(this._pts))}},{key:\"getNodeList\",value:function(){return this._nodeList}},{key:\"addIntersectionNode\",value:function(t,e){var n=e,r=n+1;if(r<this._pts.length){var i=this._pts[r];t.equals2D(i)&&(n=r)}return this._nodeList.add(t,n)}},{key:\"addIntersections\",value:function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++)this.addIntersection(t,e,n,r)}},{key:\"interfaces_\",get:function(){return[En]}}],[{key:\"constructor_\",value:function(){this._nodeList=new mn(this),this._pts=null,this._data=null;var t=arguments[0],e=arguments[1];this._pts=t,this._data=e}},{key:\"getNodedSubstrings\",value:function(){if(1===arguments.length){var t=arguments[0],n=new dt;return e.getNodedSubstrings(t,n),n}if(2===arguments.length)for(var r=arguments[1],i=arguments[0].iterator();i.hasNext();)i.next().getNodeList().addSplitEdges(r)}}]),e}(),bn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"minX\",value:function(){return Math.min(this.p0.x,this.p1.x)}},{key:\"orientationIndex\",value:function(){if(arguments[0]instanceof e){var t=arguments[0],n=ft.index(this.p0,this.p1,t.p0),r=ft.index(this.p0,this.p1,t.p1);return n>=0&&r>=0||n<=0&&r<=0?Math.max(n,r):0}if(arguments[0]instanceof z){var i=arguments[0];return ft.index(this.p0,this.p1,i)}}},{key:\"toGeometry\",value:function(t){return t.createLineString([this.p0,this.p1])}},{key:\"isVertical\",value:function(){return this.p0.x===this.p1.x}},{key:\"equals\",value:function(t){if(!(t instanceof e))return!1;var n=t;return this.p0.equals(n.p0)&&this.p1.equals(n.p1)}},{key:\"intersection\",value:function(t){var e=new Ce;return e.computeIntersection(this.p0,this.p1,t.p0,t.p1),e.hasIntersection()?e.getIntersection(0):null}},{key:\"project\",value:function(){if(arguments[0]instanceof z){var t=arguments[0];if(t.equals(this.p0)||t.equals(this.p1))return new z(t);var n=this.projectionFactor(t),r=new z;return r.x=this.p0.x+n*(this.p1.x-this.p0.x),r.y=this.p0.y+n*(this.p1.y-this.p0.y),r}if(arguments[0]instanceof e){var i=arguments[0],o=this.projectionFactor(i.p0),s=this.projectionFactor(i.p1);if(o>=1&&s>=1)return null;if(o<=0&&s<=0)return null;var a=this.project(i.p0);o<0&&(a=this.p0),o>1&&(a=this.p1);var u=this.project(i.p1);return s<0&&(u=this.p0),s>1&&(u=this.p1),new e(a,u)}}},{key:\"normalize\",value:function(){this.p1.compareTo(this.p0)<0&&this.reverse()}},{key:\"angle\",value:function(){return Math.atan2(this.p1.y-this.p0.y,this.p1.x-this.p0.x)}},{key:\"getCoordinate\",value:function(t){return 0===t?this.p0:this.p1}},{key:\"distancePerpendicular\",value:function(t){return kt.pointToLinePerpendicular(t,this.p0,this.p1)}},{key:\"minY\",value:function(){return Math.min(this.p0.y,this.p1.y)}},{key:\"midPoint\",value:function(){return e.midPoint(this.p0,this.p1)}},{key:\"projectionFactor\",value:function(t){if(t.equals(this.p0))return 0;if(t.equals(this.p1))return 1;var e=this.p1.x-this.p0.x,n=this.p1.y-this.p0.y,r=e*e+n*n;return r<=0?A.NaN:((t.x-this.p0.x)*e+(t.y-this.p0.y)*n)/r}},{key:\"closestPoints\",value:function(t){var e=this.intersection(t);if(null!==e)return[e,e];var n=new Array(2).fill(null),r=A.MAX_VALUE,i=null,o=this.closestPoint(t.p0);r=o.distance(t.p0),n[0]=o,n[1]=t.p0;var s=this.closestPoint(t.p1);(i=s.distance(t.p1))<r&&(r=i,n[0]=s,n[1]=t.p1);var a=t.closestPoint(this.p0);(i=a.distance(this.p0))<r&&(r=i,n[0]=this.p0,n[1]=a);var u=t.closestPoint(this.p1);return(i=u.distance(this.p1))<r&&(r=i,n[0]=this.p1,n[1]=u),n}},{key:\"closestPoint\",value:function(t){var e=this.projectionFactor(t);return e>0&&e<1?this.project(t):this.p0.distance(t)<this.p1.distance(t)?this.p0:this.p1}},{key:\"maxX\",value:function(){return Math.max(this.p0.x,this.p1.x)}},{key:\"getLength\",value:function(){return this.p0.distance(this.p1)}},{key:\"compareTo\",value:function(t){var e=t,n=this.p0.compareTo(e.p0);return 0!==n?n:this.p1.compareTo(e.p1)}},{key:\"reverse\",value:function(){var t=this.p0;this.p0=this.p1,this.p1=t}},{key:\"equalsTopo\",value:function(t){return this.p0.equals(t.p0)&&this.p1.equals(t.p1)||this.p0.equals(t.p1)&&this.p1.equals(t.p0)}},{key:\"lineIntersection\",value:function(t){return _t.intersection(this.p0,this.p1,t.p0,t.p1)}},{key:\"maxY\",value:function(){return Math.max(this.p0.y,this.p1.y)}},{key:\"pointAlongOffset\",value:function(t,e){var n=this.p0.x+t*(this.p1.x-this.p0.x),r=this.p0.y+t*(this.p1.y-this.p0.y),i=this.p1.x-this.p0.x,o=this.p1.y-this.p0.y,s=Math.sqrt(i*i+o*o),a=0,u=0;if(0!==e){if(s<=0)throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");a=e*i/s,u=e*o/s}return new z(n-u,r+a)}},{key:\"setCoordinates\",value:function(){if(1===arguments.length){var t=arguments[0];this.setCoordinates(t.p0,t.p1)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.p0.x=e.x,this.p0.y=e.y,this.p1.x=n.x,this.p1.y=n.y}}},{key:\"segmentFraction\",value:function(t){var e=this.projectionFactor(t);return e<0?e=0:(e>1||A.isNaN(e))&&(e=1),e}},{key:\"toString\",value:function(){return\"LINESTRING( \"+this.p0.x+\" \"+this.p0.y+\", \"+this.p1.x+\" \"+this.p1.y+\")\"}},{key:\"isHorizontal\",value:function(){return this.p0.y===this.p1.y}},{key:\"reflect\",value:function(t){var e=this.p1.getY()-this.p0.getY(),n=this.p0.getX()-this.p1.getX(),r=this.p0.getY()*(this.p1.getX()-this.p0.getX())-this.p0.getX()*(this.p1.getY()-this.p0.getY()),i=e*e+n*n,o=e*e-n*n,s=t.getX(),a=t.getY();return new z((-o*s-2*e*n*a-2*e*r)/i,(o*a-2*e*n*s-2*n*r)/i)}},{key:\"distance\",value:function(){if(arguments[0]instanceof e){var t=arguments[0];return kt.segmentToSegment(this.p0,this.p1,t.p0,t.p1)}if(arguments[0]instanceof z){var n=arguments[0];return kt.pointToSegment(n,this.p0,this.p1)}}},{key:\"pointAlong\",value:function(t){var e=new z;return e.x=this.p0.x+t*(this.p1.x-this.p0.x),e.y=this.p0.y+t*(this.p1.y-this.p0.y),e}},{key:\"hashCode\",value:function(){var t=A.doubleToLongBits(this.p0.x);t^=31*A.doubleToLongBits(this.p0.y);var e=Math.trunc(t)^Math.trunc(t>>32),n=A.doubleToLongBits(this.p1.x);return n^=31*A.doubleToLongBits(this.p1.y),e^Math.trunc(n)^Math.trunc(n>>32)}},{key:\"interfaces_\",get:function(){return[k,w]}}],[{key:\"constructor_\",value:function(){if(this.p0=null,this.p1=null,0===arguments.length)e.constructor_.call(this,new z,new z);else if(1===arguments.length){var t=arguments[0];e.constructor_.call(this,t.p0,t.p1)}else if(2===arguments.length){var n=arguments[0],r=arguments[1];this.p0=n,this.p1=r}else if(4===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3];e.constructor_.call(this,new z(i,o),new z(s,a))}}},{key:\"midPoint\",value:function(t,e){return new z((t.x+e.x)/2,(t.y+e.y)/2)}}]),e}(),wn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"overlap\",value:function(){if(2===arguments.length);else if(4===arguments.length){var t=arguments[1],e=arguments[2],n=arguments[3];arguments[0].getLineSegment(t,this._overlapSeg1),e.getLineSegment(n,this._overlapSeg2),this.overlap(this._overlapSeg1,this._overlapSeg2)}}}],[{key:\"constructor_\",value:function(){this._overlapSeg1=new bn,this._overlapSeg2=new bn}}]),e}(),In=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getLineSegment\",value:function(t,e){e.p0=this._pts[t],e.p1=this._pts[t+1]}},{key:\"computeSelect\",value:function(t,e,n,r){var i=this._pts[e],o=this._pts[n];if(n-e==1)return r.select(this,e),null;if(!t.intersects(i,o))return null;var s=Math.trunc((e+n)/2);e<s&&this.computeSelect(t,e,s,r),s<n&&this.computeSelect(t,s,n,r)}},{key:\"getCoordinates\",value:function(){for(var t=new Array(this._end-this._start+1).fill(null),e=0,n=this._start;n<=this._end;n++)t[e++]=this._pts[n];return t}},{key:\"computeOverlaps\",value:function(){if(2===arguments.length){var t=arguments[0],e=arguments[1];this.computeOverlaps(this._start,this._end,t,t._start,t._end,e)}else if(6===arguments.length){var n=arguments[0],r=arguments[1],i=arguments[2],o=arguments[3],s=arguments[4],a=arguments[5];if(r-n==1&&s-o==1)return a.overlap(this,n,i,o),null;if(!this.overlaps(n,r,i,o,s))return null;var u=Math.trunc((n+r)/2),l=Math.trunc((o+s)/2);n<u&&(o<l&&this.computeOverlaps(n,u,i,o,l,a),l<s&&this.computeOverlaps(n,u,i,l,s,a)),u<r&&(o<l&&this.computeOverlaps(u,r,i,o,l,a),l<s&&this.computeOverlaps(u,r,i,l,s,a))}}},{key:\"setId\",value:function(t){this._id=t}},{key:\"select\",value:function(t,e){this.computeSelect(t,this._start,this._end,e)}},{key:\"getEnvelope\",value:function(){if(null===this._env){var t=this._pts[this._start],e=this._pts[this._end];this._env=new X(t,e)}return this._env}},{key:\"overlaps\",value:function(t,e,n,r,i){return X.intersects(this._pts[t],this._pts[e],n._pts[r],n._pts[i])}},{key:\"getEndIndex\",value:function(){return this._end}},{key:\"getStartIndex\",value:function(){return this._start}},{key:\"getContext\",value:function(){return this._context}},{key:\"getId\",value:function(){return this._id}}],[{key:\"constructor_\",value:function(){this._pts=null,this._start=null,this._end=null,this._env=null,this._context=null,this._id=null;var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this._pts=t,this._start=e,this._end=n,this._context=r}}]),e}(),Nn=function(){function e(){t(this,e)}return n(e,null,[{key:\"findChainEnd\",value:function(t,e){for(var n=e;n<t.length-1&&t[n].equals2D(t[n+1]);)n++;if(n>=t.length-1)return t.length-1;for(var r=We.quadrant(t[n],t[n+1]),i=e+1;i<t.length&&(t[i-1].equals2D(t[i])||We.quadrant(t[i-1],t[i])===r);)i++;return i-1}},{key:\"getChains\",value:function(){if(1===arguments.length){var t=arguments[0];return e.getChains(t,null)}if(2===arguments.length){var n=arguments[0],r=arguments[1],i=new dt,o=0;do{var s=e.findChainEnd(n,o),a=new In(n,o,s,r);i.add(a),o=s}while(o<n.length-1);return i}}}]),e}(),Sn=function(){function e(){t(this,e)}return n(e,[{key:\"computeNodes\",value:function(t){}},{key:\"getNodedSubstrings\",value:function(){}}]),e}(),Mn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"setSegmentIntersector\",value:function(t){this._segInt=t}},{key:\"interfaces_\",get:function(){return[Sn]}}],[{key:\"constructor_\",value:function(){if(this._segInt=null,0===arguments.length);else if(1===arguments.length){var t=arguments[0];this.setSegmentIntersector(t)}}}]),e}(),Ln=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),e=i.call(this),o.constructor_.apply(l(e),arguments),e}return n(o,[{key:\"getMonotoneChains\",value:function(){return this._monoChains}},{key:\"getNodedSubstrings\",value:function(){return kn.getNodedSubstrings(this._nodedSegStrings)}},{key:\"getIndex\",value:function(){return this._index}},{key:\"add\",value:function(t){for(var e=Nn.getChains(t.getCoordinates(),t).iterator();e.hasNext();){var n=e.next();n.setId(this._idCounter++),this._index.insert(n.getEnvelope(),n),this._monoChains.add(n)}}},{key:\"computeNodes\",value:function(t){this._nodedSegStrings=t;for(var e=t.iterator();e.hasNext();)this.add(e.next());this.intersectChains()}},{key:\"intersectChains\",value:function(){for(var t=new Pn(this._segInt),e=this._monoChains.iterator();e.hasNext();)for(var n=e.next(),r=this._index.query(n.getEnvelope()).iterator();r.hasNext();){var i=r.next();if(i.getId()>n.getId()&&(n.computeOverlaps(i,t),this._nOverlaps++),this._segInt.isDone())return null}}}],[{key:\"constructor_\",value:function(){if(this._monoChains=new dt,this._index=new gn,this._idCounter=0,this._nodedSegStrings=null,this._nOverlaps=0,0===arguments.length);else if(1===arguments.length){var t=arguments[0];Mn.constructor_.call(this,t)}}}]),o}(Mn),Pn=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"overlap\",value:function(){if(4!==arguments.length)return f(i(s.prototype),\"overlap\",this).apply(this,arguments);var t=arguments[1],e=arguments[2],n=arguments[3],r=arguments[0].getContext(),o=e.getContext();this._si.processIntersections(r,t,o,n)}}],[{key:\"constructor_\",value:function(){this._si=null;var t=arguments[0];this._si=t}}]),s}(wn);Ln.SegmentOverlapAction=Pn;var Cn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"isDeletable\",value:function(t,e,n,r){var i=this._inputLine[t],o=this._inputLine[e],s=this._inputLine[n];return!!this.isConcave(i,o,s)&&!!this.isShallow(i,o,s,r)&&this.isShallowSampled(i,o,t,n,r)}},{key:\"deleteShallowConcavities\",value:function(){for(var t=1,n=this.findNextNonDeletedIndex(t),r=this.findNextNonDeletedIndex(n),i=!1;r<this._inputLine.length;){var o=!1;this.isDeletable(t,n,r,this._distanceTol)&&(this._isDeleted[n]=e.DELETE,o=!0,i=!0),t=o?r:n,n=this.findNextNonDeletedIndex(t),r=this.findNextNonDeletedIndex(n)}return i}},{key:\"isShallowConcavity\",value:function(t,e,n,r){return ft.index(t,e,n)===this._angleOrientation&&kt.pointToSegment(e,t,n)<r}},{key:\"isShallowSampled\",value:function(t,n,r,i,o){var s=Math.trunc((i-r)/e.NUM_PTS_TO_CHECK);s<=0&&(s=1);for(var a=r;a<i;a+=s)if(!this.isShallow(t,n,this._inputLine[a],o))return!1;return!0}},{key:\"isConcave\",value:function(t,e,n){return ft.index(t,e,n)===this._angleOrientation}},{key:\"simplify\",value:function(t){this._distanceTol=Math.abs(t),t<0&&(this._angleOrientation=ft.CLOCKWISE),this._isDeleted=new Array(this._inputLine.length).fill(null);var e=!1;do{e=this.deleteShallowConcavities()}while(e);return this.collapseLine()}},{key:\"findNextNonDeletedIndex\",value:function(t){for(var n=t+1;n<this._inputLine.length&&this._isDeleted[n]===e.DELETE;)n++;return n}},{key:\"isShallow\",value:function(t,e,n,r){return kt.pointToSegment(e,t,n)<r}},{key:\"collapseLine\",value:function(){for(var t=new Ht,n=0;n<this._inputLine.length;n++)this._isDeleted[n]!==e.DELETE&&t.add(this._inputLine[n]);return t.toCoordinateArray()}}],[{key:\"constructor_\",value:function(){this._inputLine=null,this._distanceTol=null,this._isDeleted=null,this._angleOrientation=ft.COUNTERCLOCKWISE;var t=arguments[0];this._inputLine=t}},{key:\"simplify\",value:function(t,n){return new e(t).simplify(n)}}]),e}();Cn.INIT=0,Cn.DELETE=1,Cn.KEEP=1,Cn.NUM_PTS_TO_CHECK=10;var Tn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getCoordinates\",value:function(){return this._ptList.toArray(e.COORDINATE_ARRAY_TYPE)}},{key:\"setPrecisionModel\",value:function(t){this._precisionModel=t}},{key:\"addPt\",value:function(t){var e=new z(t);if(this._precisionModel.makePrecise(e),this.isRedundant(e))return null;this._ptList.add(e)}},{key:\"reverse\",value:function(){}},{key:\"addPts\",value:function(t,e){if(e)for(var n=0;n<t.length;n++)this.addPt(t[n]);else for(var r=t.length-1;r>=0;r--)this.addPt(t[r])}},{key:\"isRedundant\",value:function(t){if(this._ptList.size()<1)return!1;var e=this._ptList.get(this._ptList.size()-1);return t.distance(e)<this._minimimVertexDistance}},{key:\"toString\",value:function(){return(new ae).createLineString(this.getCoordinates()).toString()}},{key:\"closeRing\",value:function(){if(this._ptList.size()<1)return null;var t=new z(this._ptList.get(0)),e=this._ptList.get(this._ptList.size()-1);if(t.equals(e))return null;this._ptList.add(t)}},{key:\"setMinimumVertexDistance\",value:function(t){this._minimimVertexDistance=t}}],[{key:\"constructor_\",value:function(){this._ptList=null,this._precisionModel=null,this._minimimVertexDistance=0,this._ptList=new dt}}]),e}();Tn.COORDINATE_ARRAY_TYPE=new Array(0).fill(null);var On=function(){function e(){t(this,e)}return n(e,null,[{key:\"toDegrees\",value:function(t){return 180*t/Math.PI}},{key:\"normalize\",value:function(t){for(;t>Math.PI;)t-=e.PI_TIMES_2;for(;t<=-Math.PI;)t+=e.PI_TIMES_2;return t}},{key:\"angle\",value:function(){if(1===arguments.length){var t=arguments[0];return Math.atan2(t.y,t.x)}if(2===arguments.length){var e=arguments[0],n=arguments[1],r=n.x-e.x,i=n.y-e.y;return Math.atan2(i,r)}}},{key:\"isAcute\",value:function(t,e,n){var r=t.x-e.x,i=t.y-e.y;return r*(n.x-e.x)+i*(n.y-e.y)>0}},{key:\"isObtuse\",value:function(t,e,n){var r=t.x-e.x,i=t.y-e.y;return r*(n.x-e.x)+i*(n.y-e.y)<0}},{key:\"interiorAngle\",value:function(t,n,r){var i=e.angle(n,t),o=e.angle(n,r);return Math.abs(o-i)}},{key:\"normalizePositive\",value:function(t){if(t<0){for(;t<0;)t+=e.PI_TIMES_2;t>=e.PI_TIMES_2&&(t=0)}else{for(;t>=e.PI_TIMES_2;)t-=e.PI_TIMES_2;t<0&&(t=0)}return t}},{key:\"angleBetween\",value:function(t,n,r){var i=e.angle(n,t),o=e.angle(n,r);return e.diff(i,o)}},{key:\"diff\",value:function(t,e){var n=null;return(n=t<e?e-t:t-e)>Math.PI&&(n=2*Math.PI-n),n}},{key:\"toRadians\",value:function(t){return t*Math.PI/180}},{key:\"getTurn\",value:function(t,n){var r=Math.sin(n-t);return r>0?e.COUNTERCLOCKWISE:r<0?e.CLOCKWISE:e.NONE}},{key:\"angleBetweenOriented\",value:function(t,n,r){var i=e.angle(n,t),o=e.angle(n,r)-i;return o<=-Math.PI?o+e.PI_TIMES_2:o>Math.PI?o-e.PI_TIMES_2:o}}]),e}();On.PI_TIMES_2=2*Math.PI,On.PI_OVER_2=Math.PI/2,On.PI_OVER_4=Math.PI/4,On.COUNTERCLOCKWISE=ft.COUNTERCLOCKWISE,On.CLOCKWISE=ft.CLOCKWISE,On.NONE=ft.COLLINEAR;var Rn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"addNextSegment\",value:function(t,e){if(this._s0=this._s1,this._s1=this._s2,this._s2=t,this._seg0.setCoordinates(this._s0,this._s1),this.computeOffsetSegment(this._seg0,this._side,this._distance,this._offset0),this._seg1.setCoordinates(this._s1,this._s2),this.computeOffsetSegment(this._seg1,this._side,this._distance,this._offset1),this._s1.equals(this._s2))return null;var n=ft.index(this._s0,this._s1,this._s2),r=n===ft.CLOCKWISE&&this._side===tt.LEFT||n===ft.COUNTERCLOCKWISE&&this._side===tt.RIGHT;0===n?this.addCollinear(e):r?this.addOutsideTurn(n,e):this.addInsideTurn(n,e)}},{key:\"addLineEndCap\",value:function(t,e){var n=new bn(t,e),r=new bn;this.computeOffsetSegment(n,tt.LEFT,this._distance,r);var i=new bn;this.computeOffsetSegment(n,tt.RIGHT,this._distance,i);var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o);switch(this._bufParams.getEndCapStyle()){case y.CAP_ROUND:this._segList.addPt(r.p1),this.addDirectedFillet(e,a+Math.PI/2,a-Math.PI/2,ft.CLOCKWISE,this._distance),this._segList.addPt(i.p1);break;case y.CAP_FLAT:this._segList.addPt(r.p1),this._segList.addPt(i.p1);break;case y.CAP_SQUARE:var u=new z;u.x=Math.abs(this._distance)*Math.cos(a),u.y=Math.abs(this._distance)*Math.sin(a);var l=new z(r.p1.x+u.x,r.p1.y+u.y),h=new z(i.p1.x+u.x,i.p1.y+u.y);this._segList.addPt(l),this._segList.addPt(h)}}},{key:\"getCoordinates\",value:function(){return this._segList.getCoordinates()}},{key:\"addMitreJoin\",value:function(t,e,n,r){var i=_t.intersection(e.p0,e.p1,n.p0,n.p1);if(null!==i&&(r<=0?1:i.distance(t)/Math.abs(r))<=this._bufParams.getMitreLimit())return this._segList.addPt(i),null;this.addLimitedMitreJoin(e,n,r,this._bufParams.getMitreLimit())}},{key:\"addOutsideTurn\",value:function(t,n){if(this._offset0.p1.distance(this._offset1.p0)<this._distance*e.OFFSET_SEGMENT_SEPARATION_FACTOR)return this._segList.addPt(this._offset0.p1),null;this._bufParams.getJoinStyle()===y.JOIN_MITRE?this.addMitreJoin(this._s1,this._offset0,this._offset1,this._distance):this._bufParams.getJoinStyle()===y.JOIN_BEVEL?this.addBevelJoin(this._offset0,this._offset1):(n&&this._segList.addPt(this._offset0.p1),this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,t,this._distance),this._segList.addPt(this._offset1.p0))}},{key:\"createSquare\",value:function(t){this._segList.addPt(new z(t.x+this._distance,t.y+this._distance)),this._segList.addPt(new z(t.x+this._distance,t.y-this._distance)),this._segList.addPt(new z(t.x-this._distance,t.y-this._distance)),this._segList.addPt(new z(t.x-this._distance,t.y+this._distance)),this._segList.closeRing()}},{key:\"addSegments\",value:function(t,e){this._segList.addPts(t,e)}},{key:\"addFirstSegment\",value:function(){this._segList.addPt(this._offset1.p0)}},{key:\"addCornerFillet\",value:function(t,e,n,r,i){var o=e.x-t.x,s=e.y-t.y,a=Math.atan2(s,o),u=n.x-t.x,l=n.y-t.y,h=Math.atan2(l,u);r===ft.CLOCKWISE?a<=h&&(a+=2*Math.PI):a>=h&&(a-=2*Math.PI),this._segList.addPt(e),this.addDirectedFillet(t,a,h,r,i),this._segList.addPt(n)}},{key:\"addLastSegment\",value:function(){this._segList.addPt(this._offset1.p1)}},{key:\"initSideSegments\",value:function(t,e,n){this._s1=t,this._s2=e,this._side=n,this._seg1.setCoordinates(t,e),this.computeOffsetSegment(this._seg1,n,this._distance,this._offset1)}},{key:\"addLimitedMitreJoin\",value:function(t,e,n,r){var i=this._seg0.p1,o=On.angle(i,this._seg0.p0),s=On.angleBetweenOriented(this._seg0.p0,i,this._seg1.p1)/2,a=On.normalize(o+s),u=On.normalize(a+Math.PI),l=r*n,h=n-l*Math.abs(Math.sin(s)),c=i.x+l*Math.cos(u),f=i.y+l*Math.sin(u),g=new z(c,f),p=new bn(i,g),v=p.pointAlongOffset(1,h),d=p.pointAlongOffset(1,-h);this._side===tt.LEFT?(this._segList.addPt(v),this._segList.addPt(d)):(this._segList.addPt(d),this._segList.addPt(v))}},{key:\"addDirectedFillet\",value:function(t,e,n,r,i){var o=r===ft.CLOCKWISE?-1:1,s=Math.abs(e-n),a=Math.trunc(s/this._filletAngleQuantum+.5);if(a<1)return null;for(var u=s/a,l=new z,h=0;h<a;h++){var c=e+o*h*u;l.x=t.x+i*Math.cos(c),l.y=t.y+i*Math.sin(c),this._segList.addPt(l)}}},{key:\"computeOffsetSegment\",value:function(t,e,n,r){var i=e===tt.LEFT?1:-1,o=t.p1.x-t.p0.x,s=t.p1.y-t.p0.y,a=Math.sqrt(o*o+s*s),u=i*n*o/a,l=i*n*s/a;r.p0.x=t.p0.x-l,r.p0.y=t.p0.y+u,r.p1.x=t.p1.x-l,r.p1.y=t.p1.y+u}},{key:\"addInsideTurn\",value:function(t,n){if(this._li.computeIntersection(this._offset0.p0,this._offset0.p1,this._offset1.p0,this._offset1.p1),this._li.hasIntersection())this._segList.addPt(this._li.getIntersection(0));else if(this._hasNarrowConcaveAngle=!0,this._offset0.p1.distance(this._offset1.p0)<this._distance*e.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR)this._segList.addPt(this._offset0.p1);else{if(this._segList.addPt(this._offset0.p1),this._closingSegLengthFactor>0){var r=new z((this._closingSegLengthFactor*this._offset0.p1.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset0.p1.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(r);var i=new z((this._closingSegLengthFactor*this._offset1.p0.x+this._s1.x)/(this._closingSegLengthFactor+1),(this._closingSegLengthFactor*this._offset1.p0.y+this._s1.y)/(this._closingSegLengthFactor+1));this._segList.addPt(i)}else this._segList.addPt(this._s1);this._segList.addPt(this._offset1.p0)}}},{key:\"createCircle\",value:function(t){var e=new z(t.x+this._distance,t.y);this._segList.addPt(e),this.addDirectedFillet(t,0,2*Math.PI,-1,this._distance),this._segList.closeRing()}},{key:\"addBevelJoin\",value:function(t,e){this._segList.addPt(t.p1),this._segList.addPt(e.p0)}},{key:\"init\",value:function(t){this._distance=t,this._maxCurveSegmentError=t*(1-Math.cos(this._filletAngleQuantum/2)),this._segList=new Tn,this._segList.setPrecisionModel(this._precisionModel),this._segList.setMinimumVertexDistance(t*e.CURVE_VERTEX_SNAP_DISTANCE_FACTOR)}},{key:\"addCollinear\",value:function(t){this._li.computeIntersection(this._s0,this._s1,this._s1,this._s2),this._li.getIntersectionNum()>=2&&(this._bufParams.getJoinStyle()===y.JOIN_BEVEL||this._bufParams.getJoinStyle()===y.JOIN_MITRE?(t&&this._segList.addPt(this._offset0.p1),this._segList.addPt(this._offset1.p0)):this.addCornerFillet(this._s1,this._offset0.p1,this._offset1.p0,ft.CLOCKWISE,this._distance))}},{key:\"closeRing\",value:function(){this._segList.closeRing()}},{key:\"hasNarrowConcaveAngle\",value:function(){return this._hasNarrowConcaveAngle}}],[{key:\"constructor_\",value:function(){this._maxCurveSegmentError=0,this._filletAngleQuantum=null,this._closingSegLengthFactor=1,this._segList=null,this._distance=0,this._precisionModel=null,this._bufParams=null,this._li=null,this._s0=null,this._s1=null,this._s2=null,this._seg0=new bn,this._seg1=new bn,this._offset0=new bn,this._offset1=new bn,this._side=0,this._hasNarrowConcaveAngle=!1;var t=arguments[0],n=arguments[1],r=arguments[2];this._precisionModel=t,this._bufParams=n,this._li=new Ce,this._filletAngleQuantum=Math.PI/2/n.getQuadrantSegments(),n.getQuadrantSegments()>=8&&n.getJoinStyle()===y.JOIN_ROUND&&(this._closingSegLengthFactor=e.MAX_CLOSING_SEG_LEN_FACTOR),this.init(r)}}]),e}();Rn.OFFSET_SEGMENT_SEPARATION_FACTOR=.001,Rn.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=.001,Rn.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1e-6,Rn.MAX_CLOSING_SEG_LEN_FACTOR=80;var An=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getOffsetCurve\",value:function(t,e){if(this._distance=e,0===e)return null;var n=e<0,r=Math.abs(e),i=this.getSegGen(r);t.length<=1?this.computePointCurve(t[0],i):this.computeOffsetCurve(t,n,i);var o=i.getCoordinates();return n&&Wt.reverse(o),o}},{key:\"computeSingleSidedBufferCurve\",value:function(t,e,n){var r=this.simplifyTolerance(this._distance);if(e){n.addSegments(t,!0);var i=Cn.simplify(t,-r),o=i.length-1;n.initSideSegments(i[o],i[o-1],tt.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(i[s],!0)}else{n.addSegments(t,!1);var a=Cn.simplify(t,r),u=a.length-1;n.initSideSegments(a[0],a[1],tt.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment(),n.closeRing()}},{key:\"computeRingBufferCurve\",value:function(t,e,n){var r=this.simplifyTolerance(this._distance);e===tt.RIGHT&&(r=-r);var i=Cn.simplify(t,r),o=i.length-1;n.initSideSegments(i[o-1],i[0],e);for(var s=1;s<=o;s++){var a=1!==s;n.addNextSegment(i[s],a)}n.closeRing()}},{key:\"computeLineBufferCurve\",value:function(t,e){var n=this.simplifyTolerance(this._distance),r=Cn.simplify(t,n),i=r.length-1;e.initSideSegments(r[0],r[1],tt.LEFT);for(var o=2;o<=i;o++)e.addNextSegment(r[o],!0);e.addLastSegment(),e.addLineEndCap(r[i-1],r[i]);var s=Cn.simplify(t,-n),a=s.length-1;e.initSideSegments(s[a],s[a-1],tt.LEFT);for(var u=a-2;u>=0;u--)e.addNextSegment(s[u],!0);e.addLastSegment(),e.addLineEndCap(s[1],s[0]),e.closeRing()}},{key:\"computePointCurve\",value:function(t,e){switch(this._bufParams.getEndCapStyle()){case y.CAP_ROUND:e.createCircle(t);break;case y.CAP_SQUARE:e.createSquare(t)}}},{key:\"getLineCurve\",value:function(t,e){if(this._distance=e,this.isLineOffsetEmpty(e))return null;var n=Math.abs(e),r=this.getSegGen(n);if(t.length<=1)this.computePointCurve(t[0],r);else if(this._bufParams.isSingleSided()){var i=e<0;this.computeSingleSidedBufferCurve(t,i,r)}else this.computeLineBufferCurve(t,r);return r.getCoordinates()}},{key:\"getBufferParameters\",value:function(){return this._bufParams}},{key:\"simplifyTolerance\",value:function(t){return t*this._bufParams.getSimplifyFactor()}},{key:\"getRingCurve\",value:function(t,n,r){if(this._distance=r,t.length<=2)return this.getLineCurve(t,r);if(0===r)return e.copyCoordinates(t);var i=this.getSegGen(r);return this.computeRingBufferCurve(t,n,i),i.getCoordinates()}},{key:\"computeOffsetCurve\",value:function(t,e,n){var r=this.simplifyTolerance(this._distance);if(e){var i=Cn.simplify(t,-r),o=i.length-1;n.initSideSegments(i[o],i[o-1],tt.LEFT),n.addFirstSegment();for(var s=o-2;s>=0;s--)n.addNextSegment(i[s],!0)}else{var a=Cn.simplify(t,r),u=a.length-1;n.initSideSegments(a[0],a[1],tt.LEFT),n.addFirstSegment();for(var l=2;l<=u;l++)n.addNextSegment(a[l],!0)}n.addLastSegment()}},{key:\"isLineOffsetEmpty\",value:function(t){return 0===t||t<0&&!this._bufParams.isSingleSided()}},{key:\"getSegGen\",value:function(t){return new Rn(this._precisionModel,this._bufParams,t)}}],[{key:\"constructor_\",value:function(){this._distance=0,this._precisionModel=null,this._bufParams=null;var t=arguments[0],e=arguments[1];this._precisionModel=t,this._bufParams=e}},{key:\"copyCoordinates\",value:function(t){for(var e=new Array(t.length).fill(null),n=0;n<e.length;n++)e[n]=new z(t[n]);return e}}]),e}(),Dn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"findStabbedSegments\",value:function(){if(1===arguments.length){for(var t=arguments[0],e=new dt,n=this._subgraphs.iterator();n.hasNext();){var r=n.next(),i=r.getEnvelope();t.y<i.getMinY()||t.y>i.getMaxY()||this.findStabbedSegments(t,r.getDirectedEdges(),e)}return e}if(3===arguments.length)if(ot(arguments[2],rt)&&arguments[0]instanceof z&&arguments[1]instanceof Ke){for(var o=arguments[0],s=arguments[1],a=arguments[2],u=s.getEdge().getCoordinates(),l=0;l<u.length-1;l++)if(this._seg.p0=u[l],this._seg.p1=u[l+1],this._seg.p0.y>this._seg.p1.y&&this._seg.reverse(),!(Math.max(this._seg.p0.x,this._seg.p1.x)<o.x||this._seg.isHorizontal()||o.y<this._seg.p0.y||o.y>this._seg.p1.y||ft.index(this._seg.p0,this._seg.p1,o)===ft.RIGHT)){var h=s.getDepth(tt.LEFT);this._seg.p0.equals(u[l])||(h=s.getDepth(tt.RIGHT));var c=new Fn(this._seg,h);a.add(c)}}else if(ot(arguments[2],rt)&&arguments[0]instanceof z&&ot(arguments[1],rt))for(var f=arguments[0],g=arguments[2],p=arguments[1].iterator();p.hasNext();){var v=p.next();v.isForward()&&this.findStabbedSegments(f,v,g)}}},{key:\"getDepth\",value:function(t){var e=this.findStabbedSegments(t);return 0===e.size()?0:an.min(e)._leftDepth}}],[{key:\"constructor_\",value:function(){this._subgraphs=null,this._seg=new bn;var t=arguments[0];this._subgraphs=t}}]),e}(),Fn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"compareTo\",value:function(t){var e=t;if(this._upwardSeg.minX()>=e._upwardSeg.maxX())return 1;if(this._upwardSeg.maxX()<=e._upwardSeg.minX())return-1;var n=this._upwardSeg.orientationIndex(e._upwardSeg);return 0!==n||0!=(n=-1*e._upwardSeg.orientationIndex(this._upwardSeg))?n:this._upwardSeg.compareTo(e._upwardSeg)}},{key:\"compareX\",value:function(t,e){var n=t.p0.compareTo(e.p0);return 0!==n?n:t.p1.compareTo(e.p1)}},{key:\"toString\",value:function(){return this._upwardSeg.toString()}},{key:\"interfaces_\",get:function(){return[k]}}],[{key:\"constructor_\",value:function(){this._upwardSeg=null,this._leftDepth=null;var t=arguments[0],e=arguments[1];this._upwardSeg=new bn(t),this._leftDepth=e}}]),e}();Dn.DepthSegment=Fn;var qn=function(e){r(o,e);var i=c(o);function o(){var e;return t(this,o),e=i.call(this),o.constructor_.apply(l(e),arguments),e}return n(o,null,[{key:\"constructor_\",value:function(){_.constructor_.call(this,\"Projective point not representable on the Cartesian plane.\")}}]),o}(_),Vn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getY\",value:function(){var t=this.y/this.w;if(A.isNaN(t)||A.isInfinite(t))throw new qn;return t}},{key:\"getX\",value:function(){var t=this.x/this.w;if(A.isNaN(t)||A.isInfinite(t))throw new qn;return t}},{key:\"getCoordinate\",value:function(){var t=new z;return t.x=this.getX(),t.y=this.getY(),t}}],[{key:\"constructor_\",value:function(){if(this.x=null,this.y=null,this.w=null,0===arguments.length)this.x=0,this.y=0,this.w=1;else if(1===arguments.length){var t=arguments[0];this.x=t.x,this.y=t.y,this.w=1}else if(2===arguments.length){if(\"number\"==typeof arguments[0]&&\"number\"==typeof arguments[1]){var n=arguments[0],r=arguments[1];this.x=n,this.y=r,this.w=1}else if(arguments[0]instanceof e&&arguments[1]instanceof e){var i=arguments[0],o=arguments[1];this.x=i.y*o.w-o.y*i.w,this.y=o.x*i.w-i.x*o.w,this.w=i.x*o.y-o.x*i.y}else if(arguments[0]instanceof z&&arguments[1]instanceof z){var s=arguments[0],a=arguments[1];this.x=s.y-a.y,this.y=a.x-s.x,this.w=s.x*a.y-a.x*s.y}}else if(3===arguments.length){var u=arguments[0],l=arguments[1],h=arguments[2];this.x=u,this.y=l,this.w=h}else if(4===arguments.length){var c=arguments[0],f=arguments[1],g=arguments[2],p=arguments[3],v=c.y-f.y,d=f.x-c.x,y=c.x*f.y-f.x*c.y,m=g.y-p.y,_=p.x-g.x,x=g.x*p.y-p.x*g.y;this.x=d*x-_*y,this.y=m*y-v*x,this.w=v*_-m*d}}}]),e}(),Gn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"area\",value:function(){return e.area(this.p0,this.p1,this.p2)}},{key:\"signedArea\",value:function(){return e.signedArea(this.p0,this.p1,this.p2)}},{key:\"interpolateZ\",value:function(t){if(null===t)throw new x(\"Supplied point is null.\");return e.interpolateZ(t,this.p0,this.p1,this.p2)}},{key:\"longestSideLength\",value:function(){return e.longestSideLength(this.p0,this.p1,this.p2)}},{key:\"isAcute\",value:function(){return e.isAcute(this.p0,this.p1,this.p2)}},{key:\"circumcentre\",value:function(){return e.circumcentre(this.p0,this.p1,this.p2)}},{key:\"area3D\",value:function(){return e.area3D(this.p0,this.p1,this.p2)}},{key:\"centroid\",value:function(){return e.centroid(this.p0,this.p1,this.p2)}},{key:\"inCentre\",value:function(){return e.inCentre(this.p0,this.p1,this.p2)}}],[{key:\"constructor_\",value:function(){this.p0=null,this.p1=null,this.p2=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.p0=t,this.p1=e,this.p2=n}},{key:\"area\",value:function(t,e,n){return Math.abs(((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2)}},{key:\"signedArea\",value:function(t,e,n){return((n.x-t.x)*(e.y-t.y)-(e.x-t.x)*(n.y-t.y))/2}},{key:\"det\",value:function(t,e,n,r){return t*r-e*n}},{key:\"interpolateZ\",value:function(t,e,n,r){var i=e.x,o=e.y,s=n.x-i,a=r.x-i,u=n.y-o,l=r.y-o,h=s*l-a*u,c=t.x-i,f=t.y-o,g=(l*c-a*f)/h,p=(-u*c+s*f)/h;return e.getZ()+g*(n.getZ()-e.getZ())+p*(r.getZ()-e.getZ())}},{key:\"longestSideLength\",value:function(t,e,n){var r=t.distance(e),i=e.distance(n),o=n.distance(t),s=r;return i>s&&(s=i),o>s&&(s=o),s}},{key:\"circumcentreDD\",value:function(t,e,n){var r=lt.valueOf(t.x).subtract(n.x),i=lt.valueOf(t.y).subtract(n.y),o=lt.valueOf(e.x).subtract(n.x),s=lt.valueOf(e.y).subtract(n.y),a=lt.determinant(r,i,o,s).multiply(2),u=r.sqr().add(i.sqr()),l=o.sqr().add(s.sqr()),h=lt.determinant(i,u,s,l),c=lt.determinant(r,u,o,l),f=lt.valueOf(n.x).subtract(h.divide(a)).doubleValue(),g=lt.valueOf(n.y).add(c.divide(a)).doubleValue();return new z(f,g)}},{key:\"isAcute\",value:function(t,e,n){return!!On.isAcute(t,e,n)&&!!On.isAcute(e,n,t)&&!!On.isAcute(n,t,e)}},{key:\"circumcentre\",value:function(t,n,r){var i=r.x,o=r.y,s=t.x-i,a=t.y-o,u=n.x-i,l=n.y-o,h=2*e.det(s,a,u,l),c=e.det(a,s*s+a*a,l,u*u+l*l),f=e.det(s,s*s+a*a,u,u*u+l*l);return new z(i-c/h,o+f/h)}},{key:\"perpendicularBisector\",value:function(t,e){var n=e.x-t.x,r=e.y-t.y,i=new Vn(t.x+n/2,t.y+r/2,1),o=new Vn(t.x-r+n/2,t.y+n+r/2,1);return new Vn(i,o)}},{key:\"angleBisector\",value:function(t,e,n){var r=e.distance(t),i=r/(r+e.distance(n)),o=n.x-t.x,s=n.y-t.y;return new z(t.x+i*o,t.y+i*s)}},{key:\"area3D\",value:function(t,e,n){var r=e.x-t.x,i=e.y-t.y,o=e.getZ()-t.getZ(),s=n.x-t.x,a=n.y-t.y,u=n.getZ()-t.getZ(),l=i*u-o*a,h=o*s-r*u,c=r*a-i*s,f=l*l+h*h+c*c;return Math.sqrt(f)/2}},{key:\"centroid\",value:function(t,e,n){var r=(t.x+e.x+n.x)/3,i=(t.y+e.y+n.y)/3;return new z(r,i)}},{key:\"inCentre\",value:function(t,e,n){var r=e.distance(n),i=t.distance(n),o=t.distance(e),s=r+i+o,a=(r*t.x+i*e.x+o*n.x)/s,u=(r*t.y+i*e.y+o*n.y)/s;return new z(a,u)}}]),e}(),Bn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"addRingSide\",value:function(t,e,n,r,i){if(0===e&&t.length<zt.MINIMUM_VALID_SIZE)return null;var o=r,s=i;t.length>=zt.MINIMUM_VALID_SIZE&&ft.isCCW(t)&&(o=i,s=r,n=tt.opposite(n));var a=this._curveBuilder.getRingCurve(t,n,e);this.addCurve(a,o,s)}},{key:\"addRingBothSides\",value:function(t,e){this.addRingSide(t,e,tt.LEFT,Z.EXTERIOR,Z.INTERIOR),this.addRingSide(t,e,tt.RIGHT,Z.INTERIOR,Z.EXTERIOR)}},{key:\"addPoint\",value:function(t){if(this._distance<=0)return null;var e=t.getCoordinates(),n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,Z.EXTERIOR,Z.INTERIOR)}},{key:\"addPolygon\",value:function(t){var e=this._distance,n=tt.LEFT;this._distance<0&&(e=-this._distance,n=tt.RIGHT);var r=t.getExteriorRing(),i=Wt.removeRepeatedPoints(r.getCoordinates());if(this._distance<0&&this.isErodedCompletely(r,this._distance))return null;if(this._distance<=0&&i.length<3)return null;this.addRingSide(i,e,n,Z.EXTERIOR,Z.INTERIOR);for(var o=0;o<t.getNumInteriorRing();o++){var s=t.getInteriorRingN(o),a=Wt.removeRepeatedPoints(s.getCoordinates());this._distance>0&&this.isErodedCompletely(s,-this._distance)||this.addRingSide(a,e,tt.opposite(n),Z.INTERIOR,Z.EXTERIOR)}}},{key:\"isTriangleErodedCompletely\",value:function(t,e){var n=new Gn(t[0],t[1],t[2]),r=n.inCentre();return kt.pointToSegment(r,n.p0,n.p1)<Math.abs(e)}},{key:\"addLineString\",value:function(t){if(this._curveBuilder.isLineOffsetEmpty(this._distance))return null;var e=Wt.removeRepeatedPoints(t.getCoordinates());if(Wt.isRing(e)&&!this._curveBuilder.getBufferParameters().isSingleSided())this.addRingBothSides(e,this._distance);else{var n=this._curveBuilder.getLineCurve(e,this._distance);this.addCurve(n,Z.EXTERIOR,Z.INTERIOR)}}},{key:\"addCurve\",value:function(t,e,n){if(null===t||t.length<2)return null;var r=new kn(t,new Ae(0,Z.BOUNDARY,e,n));this._curveList.add(r)}},{key:\"getCurves\",value:function(){return this.add(this._inputGeom),this._curveList}},{key:\"add\",value:function(t){if(t.isEmpty())return null;if(t instanceof Ft)this.addPolygon(t);else if(t instanceof Ct)this.addLineString(t);else if(t instanceof Ot)this.addPoint(t);else if(t instanceof Yt)this.addCollection(t);else if(t instanceof se)this.addCollection(t);else if(t instanceof ee)this.addCollection(t);else{if(!(t instanceof Bt))throw new J(t.getGeometryType());this.addCollection(t)}}},{key:\"isErodedCompletely\",value:function(t,e){var n=t.getCoordinates();if(n.length<4)return e<0;if(4===n.length)return this.isTriangleErodedCompletely(n,e);var r=t.getEnvelopeInternal(),i=Math.min(r.getHeight(),r.getWidth());return e<0&&2*Math.abs(e)>i}},{key:\"addCollection\",value:function(t){for(var e=0;e<t.getNumGeometries();e++){var n=t.getGeometryN(e);this.add(n)}}}],[{key:\"constructor_\",value:function(){this._inputGeom=null,this._distance=null,this._curveBuilder=null,this._curveList=new dt;var t=arguments[0],e=arguments[1],n=arguments[2];this._inputGeom=t,this._distance=e,this._curveBuilder=n}}]),e}(),Yn=function(){function e(){t(this,e)}return n(e,[{key:\"locate\",value:function(t){}}]),e}(),zn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"next\",value:function(){if(this._atStart)return this._atStart=!1,e.isAtomic(this._parent)&&this._index++,this._parent;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return this._subcollectionIterator.next();this._subcollectionIterator=null}if(this._index>=this._max)throw new W;var t=this._parent.getGeometryN(this._index++);return t instanceof Bt?(this._subcollectionIterator=new e(t),this._subcollectionIterator.next()):t}},{key:\"remove\",value:function(){throw new J(this.getClass().getName())}},{key:\"hasNext\",value:function(){if(this._atStart)return!0;if(null!==this._subcollectionIterator){if(this._subcollectionIterator.hasNext())return!0;this._subcollectionIterator=null}return!(this._index>=this._max)}},{key:\"interfaces_\",get:function(){return[yn]}}],[{key:\"constructor_\",value:function(){this._parent=null,this._atStart=null,this._max=null,this._index=null,this._subcollectionIterator=null;var t=arguments[0];this._parent=t,this._atStart=!0,this._index=0,this._max=t.getNumGeometries()}},{key:\"isAtomic\",value:function(t){return!(t instanceof Bt)}}]),e}(),jn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"locate\",value:function(t){return e.locate(t,this._geom)}},{key:\"interfaces_\",get:function(){return[Yn]}}],[{key:\"constructor_\",value:function(){this._geom=null;var t=arguments[0];this._geom=t}},{key:\"locatePointInPolygon\",value:function(t,n){if(n.isEmpty())return Z.EXTERIOR;var r=n.getExteriorRing(),i=e.locatePointInRing(t,r);if(i!==Z.INTERIOR)return i;for(var o=0;o<n.getNumInteriorRing();o++){var s=n.getInteriorRingN(o),a=e.locatePointInRing(t,s);if(a===Z.BOUNDARY)return Z.BOUNDARY;if(a===Z.INTERIOR)return Z.EXTERIOR}return Z.INTERIOR}},{key:\"locatePointInRing\",value:function(t,e){return e.getEnvelopeInternal().intersects(t)?Oe.locateInRing(t,e.getCoordinates()):Z.EXTERIOR}},{key:\"containsPointInPolygon\",value:function(t,n){return Z.EXTERIOR!==e.locatePointInPolygon(t,n)}},{key:\"locateInGeometry\",value:function(t,n){if(n instanceof Ft)return e.locatePointInPolygon(t,n);if(n instanceof Bt)for(var r=new zn(n);r.hasNext();){var i=r.next();if(i!==n){var o=e.locateInGeometry(t,i);if(o!==Z.EXTERIOR)return o}}return Z.EXTERIOR}},{key:\"isContained\",value:function(t,n){return Z.EXTERIOR!==e.locate(t,n)}},{key:\"locate\",value:function(t,n){return n.isEmpty()?Z.EXTERIOR:n.getEnvelopeInternal().intersects(t)?e.locateInGeometry(t,n):Z.EXTERIOR}}]),e}(),Xn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getNextCW\",value:function(t){this.getEdges();var e=this._edgeList.indexOf(t),n=e-1;return 0===e&&(n=this._edgeList.size()-1),this._edgeList.get(n)}},{key:\"propagateSideLabels\",value:function(t){for(var e=Z.NONE,n=this.iterator();n.hasNext();){var r=n.next().getLabel();r.isArea(t)&&r.getLocation(t,tt.LEFT)!==Z.NONE&&(e=r.getLocation(t,tt.LEFT))}if(e===Z.NONE)return null;for(var i=e,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getLabel();if(a.getLocation(t,tt.ON)===Z.NONE&&a.setLocation(t,tt.ON,i),a.isArea(t)){var u=a.getLocation(t,tt.LEFT),l=a.getLocation(t,tt.RIGHT);if(l!==Z.NONE){if(l!==i)throw new pt(\"side location conflict\",s.getCoordinate());u===Z.NONE&&V.shouldNeverReachHere(\"found single null side (at \"+s.getCoordinate()+\")\"),i=u}else V.isTrue(a.getLocation(t,tt.LEFT)===Z.NONE,\"found single null side\"),a.setLocation(t,tt.RIGHT,i),a.setLocation(t,tt.LEFT,i)}}}},{key:\"getCoordinate\",value:function(){var t=this.iterator();return t.hasNext()?t.next().getCoordinate():null}},{key:\"print\",value:function(t){xt.out.println(\"EdgeEndStar:   \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();)e.next().print(t)}},{key:\"isAreaLabelsConsistent\",value:function(t){return this.computeEdgeEndLabels(t.getBoundaryNodeRule()),this.checkAreaLabelsConsistent(0)}},{key:\"checkAreaLabelsConsistent\",value:function(t){var e=this.getEdges();if(e.size()<=0)return!0;var n=e.size()-1,r=e.get(n).getLabel().getLocation(t,tt.LEFT);V.isTrue(r!==Z.NONE,\"Found unlabelled area edge\");for(var i=r,o=this.iterator();o.hasNext();){var s=o.next().getLabel();V.isTrue(s.isArea(t),\"Found non-area edge\");var a=s.getLocation(t,tt.LEFT),u=s.getLocation(t,tt.RIGHT);if(a===u)return!1;if(u!==i)return!1;i=a}return!0}},{key:\"findIndex\",value:function(t){this.iterator();for(var e=0;e<this._edgeList.size();e++)if(this._edgeList.get(e)===t)return e;return-1}},{key:\"iterator\",value:function(){return this.getEdges().iterator()}},{key:\"getEdges\",value:function(){return null===this._edgeList&&(this._edgeList=new dt(this._edgeMap.values())),this._edgeList}},{key:\"getLocation\",value:function(t,e,n){return this._ptInAreaLocation[t]===Z.NONE&&(this._ptInAreaLocation[t]=jn.locate(e,n[t].getGeometry())),this._ptInAreaLocation[t]}},{key:\"toString\",value:function(){var t=new st;t.append(\"EdgeEndStar:   \"+this.getCoordinate()),t.append(\"\\n\");for(var e=this.iterator();e.hasNext();){var n=e.next();t.append(n),t.append(\"\\n\")}return t.toString()}},{key:\"computeEdgeEndLabels\",value:function(t){for(var e=this.iterator();e.hasNext();)e.next().computeLabel(t)}},{key:\"computeLabelling\",value:function(t){this.computeEdgeEndLabels(t[0].getBoundaryNodeRule()),this.propagateSideLabels(0),this.propagateSideLabels(1);for(var e=[!1,!1],n=this.iterator();n.hasNext();)for(var r=n.next().getLabel(),i=0;i<2;i++)r.isLine(i)&&r.getLocation(i)===Z.BOUNDARY&&(e[i]=!0);for(var o=this.iterator();o.hasNext();)for(var s=o.next(),a=s.getLabel(),u=0;u<2;u++)if(a.isAnyNull(u)){var l=Z.NONE;if(e[u])l=Z.EXTERIOR;else{var h=s.getCoordinate();l=this.getLocation(u,h,t)}a.setAllLocationsIfNull(u,l)}}},{key:\"getDegree\",value:function(){return this._edgeMap.size()}},{key:\"insertEdgeEnd\",value:function(t,e){this._edgeMap.put(t,e),this._edgeList=null}}],[{key:\"constructor_\",value:function(){this._edgeMap=new Ze,this._edgeList=null,this._ptInAreaLocation=[Z.NONE,Z.NONE]}}]),e}(),Un=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"linkResultDirectedEdges\",value:function(){this.getResultAreaEdges();for(var t=null,e=null,n=this._SCANNING_FOR_INCOMING,r=0;r<this._resultAreaEdgeList.size();r++){var i=this._resultAreaEdgeList.get(r),o=i.getSym();if(i.getLabel().isArea())switch(null===t&&i.isInResult()&&(t=i),n){case this._SCANNING_FOR_INCOMING:if(!o.isInResult())continue;e=o,n=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(!i.isInResult())continue;e.setNext(i),n=this._SCANNING_FOR_INCOMING}}if(n===this._LINKING_TO_OUTGOING){if(null===t)throw new pt(\"no outgoing dirEdge found\",this.getCoordinate());V.isTrue(t.isInResult(),\"unable to link last incoming dirEdge\"),e.setNext(t)}}},{key:\"insert\",value:function(t){var e=t;this.insertEdgeEnd(e,e)}},{key:\"getRightmostEdge\",value:function(){var t=this.getEdges(),e=t.size();if(e<1)return null;var n=t.get(0);if(1===e)return n;var r=t.get(e-1),i=n.getQuadrant(),o=r.getQuadrant();return We.isNorthern(i)&&We.isNorthern(o)?n:We.isNorthern(i)||We.isNorthern(o)?0!==n.getDy()?n:0!==r.getDy()?r:(V.shouldNeverReachHere(\"found two horizontal edges incident on node\"),null):r}},{key:\"print\",value:function(t){xt.out.println(\"DirectedEdgeStar: \"+this.getCoordinate());for(var e=this.iterator();e.hasNext();){var n=e.next();t.print(\"out \"),n.print(t),t.println(),t.print(\"in \"),n.getSym().print(t),t.println()}}},{key:\"getResultAreaEdges\",value:function(){if(null!==this._resultAreaEdgeList)return this._resultAreaEdgeList;this._resultAreaEdgeList=new dt;for(var t=this.iterator();t.hasNext();){var e=t.next();(e.isInResult()||e.getSym().isInResult())&&this._resultAreaEdgeList.add(e)}return this._resultAreaEdgeList}},{key:\"updateLabelling\",value:function(t){for(var e=this.iterator();e.hasNext();){var n=e.next().getLabel();n.setAllLocationsIfNull(0,t.getLocation(0)),n.setAllLocationsIfNull(1,t.getLocation(1))}}},{key:\"linkAllDirectedEdges\",value:function(){this.getEdges();for(var t=null,e=null,n=this._edgeList.size()-1;n>=0;n--){var r=this._edgeList.get(n),i=r.getSym();null===e&&(e=i),null!==t&&i.setNext(t),t=r}e.setNext(t)}},{key:\"computeDepths\",value:function(){if(1===arguments.length){var t=arguments[0],e=this.findIndex(t),n=t.getDepth(tt.LEFT),r=t.getDepth(tt.RIGHT),i=this.computeDepths(e+1,this._edgeList.size(),n);if(this.computeDepths(0,e,i)!==r)throw new pt(\"depth mismatch at \"+t.getCoordinate())}else if(3===arguments.length){for(var o=arguments[1],s=arguments[2],a=arguments[0];a<o;a++){var u=this._edgeList.get(a);u.setEdgeDepths(tt.RIGHT,s),s=u.getDepth(tt.LEFT)}return s}}},{key:\"mergeSymLabels\",value:function(){for(var t=this.iterator();t.hasNext();){var e=t.next();e.getLabel().merge(e.getSym().getLabel())}}},{key:\"linkMinimalDirectedEdges\",value:function(t){for(var e=null,n=null,r=this._SCANNING_FOR_INCOMING,i=this._resultAreaEdgeList.size()-1;i>=0;i--){var o=this._resultAreaEdgeList.get(i),s=o.getSym();switch(null===e&&o.getEdgeRing()===t&&(e=o),r){case this._SCANNING_FOR_INCOMING:if(s.getEdgeRing()!==t)continue;n=s,r=this._LINKING_TO_OUTGOING;break;case this._LINKING_TO_OUTGOING:if(o.getEdgeRing()!==t)continue;n.setNextMin(o),r=this._SCANNING_FOR_INCOMING}}r===this._LINKING_TO_OUTGOING&&(V.isTrue(null!==e,\"found null for first outgoing dirEdge\"),V.isTrue(e.getEdgeRing()===t,\"unable to link last incoming dirEdge\"),n.setNextMin(e))}},{key:\"getOutgoingDegree\",value:function(){if(0===arguments.length){for(var t=0,e=this.iterator();e.hasNext();)e.next().isInResult()&&t++;return t}if(1===arguments.length){for(var n=arguments[0],r=0,i=this.iterator();i.hasNext();)i.next().getEdgeRing()===n&&r++;return r}}},{key:\"getLabel\",value:function(){return this._label}},{key:\"findCoveredLineEdges\",value:function(){for(var t=Z.NONE,e=this.iterator();e.hasNext();){var n=e.next(),r=n.getSym();if(!n.isLineEdge()){if(n.isInResult()){t=Z.INTERIOR;break}if(r.isInResult()){t=Z.EXTERIOR;break}}}if(t===Z.NONE)return null;for(var i=t,o=this.iterator();o.hasNext();){var s=o.next(),a=s.getSym();s.isLineEdge()?s.getEdge().setCovered(i===Z.INTERIOR):(s.isInResult()&&(i=Z.EXTERIOR),a.isInResult()&&(i=Z.INTERIOR))}}},{key:\"computeLabelling\",value:function(t){f(i(s.prototype),\"computeLabelling\",this).call(this,t),this._label=new Ae(Z.NONE);for(var e=this.iterator();e.hasNext();)for(var n=e.next().getEdge().getLabel(),r=0;r<2;r++){var o=n.getLocation(r);o!==Z.INTERIOR&&o!==Z.BOUNDARY||this._label.setLocation(r,Z.INTERIOR)}}}],[{key:\"constructor_\",value:function(){this._resultAreaEdgeList=null,this._label=null,this._SCANNING_FOR_INCOMING=1,this._LINKING_TO_OUTGOING=2}}]),s}(Xn),Zn=function(e){r(o,e);var i=c(o);function o(){return t(this,o),i.call(this)}return n(o,[{key:\"createNode\",value:function(t){return new Ge(t,new Un)}}]),o}(Qe),Hn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"compareTo\",value:function(t){var n=t;return e.compareOriented(this._pts,this._orientation,n._pts,n._orientation)}},{key:\"interfaces_\",get:function(){return[k]}}],[{key:\"constructor_\",value:function(){this._pts=null,this._orientation=null;var t=arguments[0];this._pts=t,this._orientation=e.orientation(t)}},{key:\"orientation\",value:function(t){return 1===Wt.increasingDirection(t)}},{key:\"compareOriented\",value:function(t,e,n,r){for(var i=e?1:-1,o=r?1:-1,s=e?t.length:-1,a=r?n.length:-1,u=e?0:t.length-1,l=r?0:n.length-1;;){var h=t[u].compareTo(n[l]);if(0!==h)return h;var c=(u+=i)===s,f=(l+=o)===a;if(c&&!f)return-1;if(!c&&f)return 1;if(c&&f)return 0}}}]),e}(),Wn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"print\",value:function(t){t.print(\"MULTILINESTRING ( \");for(var e=0;e<this._edges.size();e++){var n=this._edges.get(e);e>0&&t.print(\",\"),t.print(\"(\");for(var r=n.getCoordinates(),i=0;i<r.length;i++)i>0&&t.print(\",\"),t.print(r[i].x+\" \"+r[i].y);t.println(\")\")}t.print(\")  \")}},{key:\"addAll\",value:function(t){for(var e=t.iterator();e.hasNext();)this.add(e.next())}},{key:\"findEdgeIndex\",value:function(t){for(var e=0;e<this._edges.size();e++)if(this._edges.get(e).equals(t))return e;return-1}},{key:\"iterator\",value:function(){return this._edges.iterator()}},{key:\"getEdges\",value:function(){return this._edges}},{key:\"get\",value:function(t){return this._edges.get(t)}},{key:\"findEqualEdge\",value:function(t){var e=new Hn(t.getCoordinates());return this._ocaMap.get(e)}},{key:\"add\",value:function(t){this._edges.add(t);var e=new Hn(t.getCoordinates());this._ocaMap.put(e,t)}}],[{key:\"constructor_\",value:function(){this._edges=new dt,this._ocaMap=new Ze}}]),e}(),Jn=function(){function e(){t(this,e)}return n(e,[{key:\"processIntersections\",value:function(t,e,n,r){}},{key:\"isDone\",value:function(){}}]),e}(),Kn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"isTrivialIntersection\",value:function(t,n,r,i){if(t===r&&1===this._li.getIntersectionNum()){if(e.isAdjacentSegments(n,i))return!0;if(t.isClosed()){var o=t.size()-1;if(0===n&&i===o||0===i&&n===o)return!0}}return!1}},{key:\"getProperIntersectionPoint\",value:function(){return this._properIntersectionPoint}},{key:\"hasProperInteriorIntersection\",value:function(){return this._hasProperInterior}},{key:\"getLineIntersector\",value:function(){return this._li}},{key:\"hasProperIntersection\",value:function(){return this._hasProper}},{key:\"processIntersections\",value:function(t,e,n,r){if(t===n&&e===r)return null;this.numTests++;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&(this.numIntersections++,this._li.isInteriorIntersection()&&(this.numInteriorIntersections++,this._hasInterior=!0),this.isTrivialIntersection(t,e,n,r)||(this._hasIntersection=!0,t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1),this._li.isProper()&&(this.numProperIntersections++,this._hasProper=!0,this._hasProperInterior=!0)))}},{key:\"hasIntersection\",value:function(){return this._hasIntersection}},{key:\"isDone\",value:function(){return!1}},{key:\"hasInteriorIntersection\",value:function(){return this._hasInterior}},{key:\"interfaces_\",get:function(){return[Jn]}}],[{key:\"constructor_\",value:function(){this._hasIntersection=!1,this._hasProper=!1,this._hasProperInterior=!1,this._hasInterior=!1,this._properIntersectionPoint=null,this._li=null,this._isSelfIntersection=null,this.numIntersections=0,this.numInteriorIntersections=0,this.numProperIntersections=0,this.numTests=0;var t=arguments[0];this._li=t}},{key:\"isAdjacentSegments\",value:function(t,e){return 1===Math.abs(t-e)}}]),e}(),Qn=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getSegmentIndex\",value:function(){return this.segmentIndex}},{key:\"getCoordinate\",value:function(){return this.coord}},{key:\"print\",value:function(t){t.print(this.coord),t.print(\" seg # = \"+this.segmentIndex),t.println(\" dist = \"+this.dist)}},{key:\"compareTo\",value:function(t){var e=t;return this.compare(e.segmentIndex,e.dist)}},{key:\"isEndPoint\",value:function(t){return 0===this.segmentIndex&&0===this.dist||this.segmentIndex===t}},{key:\"toString\",value:function(){return this.coord+\" seg # = \"+this.segmentIndex+\" dist = \"+this.dist}},{key:\"getDistance\",value:function(){return this.dist}},{key:\"compare\",value:function(t,e){return this.segmentIndex<t?-1:this.segmentIndex>t?1:this.dist<e?-1:this.dist>e?1:0}},{key:\"interfaces_\",get:function(){return[k]}}],[{key:\"constructor_\",value:function(){this.coord=null,this.segmentIndex=null,this.dist=null;var t=arguments[0],e=arguments[1],n=arguments[2];this.coord=new z(t),this.segmentIndex=e,this.dist=n}}]),e}(),$n=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"print\",value:function(t){t.println(\"Intersections:\");for(var e=this.iterator();e.hasNext();)e.next().print(t)}},{key:\"iterator\",value:function(){return this._nodeMap.values().iterator()}},{key:\"addSplitEdges\",value:function(t){this.addEndpoints();for(var e=this.iterator(),n=e.next();e.hasNext();){var r=e.next(),i=this.createSplitEdge(n,r);t.add(i),n=r}}},{key:\"addEndpoints\",value:function(){var t=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0),this.add(this.edge.pts[t],t,0)}},{key:\"createSplitEdge\",value:function(t,e){var n=e.segmentIndex-t.segmentIndex+2,r=this.edge.pts[e.segmentIndex],i=e.dist>0||!e.coord.equals2D(r);i||n--;var o=new Array(n).fill(null),s=0;o[s++]=new z(t.coord);for(var a=t.segmentIndex+1;a<=e.segmentIndex;a++)o[s++]=this.edge.pts[a];return i&&(o[s]=e.coord),new or(o,new Ae(this.edge._label))}},{key:\"add\",value:function(t,e,n){var r=new Qn(t,e,n),i=this._nodeMap.get(r);return null!==i?i:(this._nodeMap.put(r,r),r)}},{key:\"isIntersection\",value:function(t){for(var e=this.iterator();e.hasNext();)if(e.next().coord.equals(t))return!0;return!1}}],[{key:\"constructor_\",value:function(){this._nodeMap=new Ze,this.edge=null;var t=arguments[0];this.edge=t}}]),e}(),tr=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"isIntersects\",value:function(){return!this.isDisjoint()}},{key:\"isCovers\",value:function(){return(e.isTrue(this._matrix[Z.INTERIOR][Z.INTERIOR])||e.isTrue(this._matrix[Z.INTERIOR][Z.BOUNDARY])||e.isTrue(this._matrix[Z.BOUNDARY][Z.INTERIOR])||e.isTrue(this._matrix[Z.BOUNDARY][Z.BOUNDARY]))&&this._matrix[Z.EXTERIOR][Z.INTERIOR]===Mt.FALSE&&this._matrix[Z.EXTERIOR][Z.BOUNDARY]===Mt.FALSE}},{key:\"isCoveredBy\",value:function(){return(e.isTrue(this._matrix[Z.INTERIOR][Z.INTERIOR])||e.isTrue(this._matrix[Z.INTERIOR][Z.BOUNDARY])||e.isTrue(this._matrix[Z.BOUNDARY][Z.INTERIOR])||e.isTrue(this._matrix[Z.BOUNDARY][Z.BOUNDARY]))&&this._matrix[Z.INTERIOR][Z.EXTERIOR]===Mt.FALSE&&this._matrix[Z.BOUNDARY][Z.EXTERIOR]===Mt.FALSE}},{key:\"set\",value:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<t.length;e++){var n=Math.trunc(e/3),r=e%3;this._matrix[n][r]=Mt.toDimensionValue(t.charAt(e))}else if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];this._matrix[i][o]=s}}},{key:\"isContains\",value:function(){return e.isTrue(this._matrix[Z.INTERIOR][Z.INTERIOR])&&this._matrix[Z.EXTERIOR][Z.INTERIOR]===Mt.FALSE&&this._matrix[Z.EXTERIOR][Z.BOUNDARY]===Mt.FALSE}},{key:\"setAtLeast\",value:function(){if(1===arguments.length)for(var t=arguments[0],e=0;e<t.length;e++){var n=Math.trunc(e/3),r=e%3;this.setAtLeast(n,r,Mt.toDimensionValue(t.charAt(e)))}else if(3===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2];this._matrix[i][o]<s&&(this._matrix[i][o]=s)}}},{key:\"setAtLeastIfValid\",value:function(t,e,n){t>=0&&e>=0&&this.setAtLeast(t,e,n)}},{key:\"isWithin\",value:function(){return e.isTrue(this._matrix[Z.INTERIOR][Z.INTERIOR])&&this._matrix[Z.INTERIOR][Z.EXTERIOR]===Mt.FALSE&&this._matrix[Z.BOUNDARY][Z.EXTERIOR]===Mt.FALSE}},{key:\"isTouches\",value:function(t,n){return t>n?this.isTouches(n,t):(t===Mt.A&&n===Mt.A||t===Mt.L&&n===Mt.L||t===Mt.L&&n===Mt.A||t===Mt.P&&n===Mt.A||t===Mt.P&&n===Mt.L)&&this._matrix[Z.INTERIOR][Z.INTERIOR]===Mt.FALSE&&(e.isTrue(this._matrix[Z.INTERIOR][Z.BOUNDARY])||e.isTrue(this._matrix[Z.BOUNDARY][Z.INTERIOR])||e.isTrue(this._matrix[Z.BOUNDARY][Z.BOUNDARY]))}},{key:\"isOverlaps\",value:function(t,n){return t===Mt.P&&n===Mt.P||t===Mt.A&&n===Mt.A?e.isTrue(this._matrix[Z.INTERIOR][Z.INTERIOR])&&e.isTrue(this._matrix[Z.INTERIOR][Z.EXTERIOR])&&e.isTrue(this._matrix[Z.EXTERIOR][Z.INTERIOR]):t===Mt.L&&n===Mt.L&&1===this._matrix[Z.INTERIOR][Z.INTERIOR]&&e.isTrue(this._matrix[Z.INTERIOR][Z.EXTERIOR])&&e.isTrue(this._matrix[Z.EXTERIOR][Z.INTERIOR])}},{key:\"isEquals\",value:function(t,n){return t===n&&e.isTrue(this._matrix[Z.INTERIOR][Z.INTERIOR])&&this._matrix[Z.INTERIOR][Z.EXTERIOR]===Mt.FALSE&&this._matrix[Z.BOUNDARY][Z.EXTERIOR]===Mt.FALSE&&this._matrix[Z.EXTERIOR][Z.INTERIOR]===Mt.FALSE&&this._matrix[Z.EXTERIOR][Z.BOUNDARY]===Mt.FALSE}},{key:\"toString\",value:function(){for(var t=new Qt(\"123456789\"),e=0;e<3;e++)for(var n=0;n<3;n++)t.setCharAt(3*e+n,Mt.toDimensionSymbol(this._matrix[e][n]));return t.toString()}},{key:\"setAll\",value:function(t){for(var e=0;e<3;e++)for(var n=0;n<3;n++)this._matrix[e][n]=t}},{key:\"get\",value:function(t,e){return this._matrix[t][e]}},{key:\"transpose\",value:function(){var t=this._matrix[1][0];return this._matrix[1][0]=this._matrix[0][1],this._matrix[0][1]=t,t=this._matrix[2][0],this._matrix[2][0]=this._matrix[0][2],this._matrix[0][2]=t,t=this._matrix[2][1],this._matrix[2][1]=this._matrix[1][2],this._matrix[1][2]=t,this}},{key:\"matches\",value:function(t){if(9!==t.length)throw new x(\"Should be length 9: \"+t);for(var n=0;n<3;n++)for(var r=0;r<3;r++)if(!e.matches(this._matrix[n][r],t.charAt(3*n+r)))return!1;return!0}},{key:\"add\",value:function(t){for(var e=0;e<3;e++)for(var n=0;n<3;n++)this.setAtLeast(e,n,t.get(e,n))}},{key:\"isDisjoint\",value:function(){return this._matrix[Z.INTERIOR][Z.INTERIOR]===Mt.FALSE&&this._matrix[Z.INTERIOR][Z.BOUNDARY]===Mt.FALSE&&this._matrix[Z.BOUNDARY][Z.INTERIOR]===Mt.FALSE&&this._matrix[Z.BOUNDARY][Z.BOUNDARY]===Mt.FALSE}},{key:\"isCrosses\",value:function(t,n){return t===Mt.P&&n===Mt.L||t===Mt.P&&n===Mt.A||t===Mt.L&&n===Mt.A?e.isTrue(this._matrix[Z.INTERIOR][Z.INTERIOR])&&e.isTrue(this._matrix[Z.INTERIOR][Z.EXTERIOR]):t===Mt.L&&n===Mt.P||t===Mt.A&&n===Mt.P||t===Mt.A&&n===Mt.L?e.isTrue(this._matrix[Z.INTERIOR][Z.INTERIOR])&&e.isTrue(this._matrix[Z.EXTERIOR][Z.INTERIOR]):t===Mt.L&&n===Mt.L&&0===this._matrix[Z.INTERIOR][Z.INTERIOR]}},{key:\"interfaces_\",get:function(){return[b]}}],[{key:\"constructor_\",value:function(){if(this._matrix=null,0===arguments.length)this._matrix=Array(3).fill().map((function(){return Array(3)})),this.setAll(Mt.FALSE);else if(1===arguments.length)if(\"string\"==typeof arguments[0]){var t=arguments[0];e.constructor_.call(this),this.set(t)}else if(arguments[0]instanceof e){var n=arguments[0];e.constructor_.call(this),this._matrix[Z.INTERIOR][Z.INTERIOR]=n._matrix[Z.INTERIOR][Z.INTERIOR],this._matrix[Z.INTERIOR][Z.BOUNDARY]=n._matrix[Z.INTERIOR][Z.BOUNDARY],this._matrix[Z.INTERIOR][Z.EXTERIOR]=n._matrix[Z.INTERIOR][Z.EXTERIOR],this._matrix[Z.BOUNDARY][Z.INTERIOR]=n._matrix[Z.BOUNDARY][Z.INTERIOR],this._matrix[Z.BOUNDARY][Z.BOUNDARY]=n._matrix[Z.BOUNDARY][Z.BOUNDARY],this._matrix[Z.BOUNDARY][Z.EXTERIOR]=n._matrix[Z.BOUNDARY][Z.EXTERIOR],this._matrix[Z.EXTERIOR][Z.INTERIOR]=n._matrix[Z.EXTERIOR][Z.INTERIOR],this._matrix[Z.EXTERIOR][Z.BOUNDARY]=n._matrix[Z.EXTERIOR][Z.BOUNDARY],this._matrix[Z.EXTERIOR][Z.EXTERIOR]=n._matrix[Z.EXTERIOR][Z.EXTERIOR]}}},{key:\"matches\",value:function(){if(Number.isInteger(arguments[0])&&\"string\"==typeof arguments[1]){var t=arguments[0],n=arguments[1];return n===Mt.SYM_DONTCARE||n===Mt.SYM_TRUE&&(t>=0||t===Mt.TRUE)||n===Mt.SYM_FALSE&&t===Mt.FALSE||n===Mt.SYM_P&&t===Mt.P||n===Mt.SYM_L&&t===Mt.L||n===Mt.SYM_A&&t===Mt.A}if(\"string\"==typeof arguments[0]&&\"string\"==typeof arguments[1]){var r=arguments[1];return new e(arguments[0]).matches(r)}}},{key:\"isTrue\",value:function(t){return t>=0||t===Mt.TRUE}}]),e}(),er=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"size\",value:function(){return this._size}},{key:\"addAll\",value:function(t){return null===t||0===t.length?null:(this.ensureCapacity(this._size+t.length),xt.arraycopy(t,0,this._data,this._size,t.length),void(this._size+=t.length))}},{key:\"ensureCapacity\",value:function(t){if(t<=this._data.length)return null;var e=Math.max(t,2*this._data.length);this._data=At.copyOf(this._data,e)}},{key:\"toArray\",value:function(){var t=new Array(this._size).fill(null);return xt.arraycopy(this._data,0,t,0,this._size),t}},{key:\"add\",value:function(t){this.ensureCapacity(this._size+1),this._data[this._size]=t,++this._size}}],[{key:\"constructor_\",value:function(){if(this._data=null,this._size=0,0===arguments.length)e.constructor_.call(this,10);else if(1===arguments.length){var t=arguments[0];this._data=new Array(t).fill(null)}}}]),e}(),nr=function(){function e(){t(this,e)}return n(e,[{key:\"getChainStartIndices\",value:function(t){var e=0,n=new er(Math.trunc(t.length/2));n.add(e);do{var r=this.findChainEnd(t,e);n.add(r),e=r}while(e<t.length-1);return n.toArray()}},{key:\"findChainEnd\",value:function(t,e){for(var n=We.quadrant(t[e],t[e+1]),r=e+1;r<t.length&&We.quadrant(t[r-1],t[r])===n;)r++;return r-1}},{key:\"OLDgetChainStartIndices\",value:function(t){var n=0,r=new dt;r.add(n);do{var i=this.findChainEnd(t,n);r.add(i),n=i}while(n<t.length-1);return e.toIntArray(r)}}],[{key:\"toIntArray\",value:function(t){for(var e=new Array(t.size()).fill(null),n=0;n<e.length;n++)e[n]=t.get(n).intValue();return e}}]),e}(),rr=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getCoordinates\",value:function(){return this.pts}},{key:\"getMaxX\",value:function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e>n?e:n}},{key:\"getMinX\",value:function(t){var e=this.pts[this.startIndex[t]].x,n=this.pts[this.startIndex[t+1]].x;return e<n?e:n}},{key:\"computeIntersectsForChain\",value:function(){if(4===arguments.length){var t=arguments[0],e=arguments[1],n=arguments[2],r=arguments[3];this.computeIntersectsForChain(this.startIndex[t],this.startIndex[t+1],e,e.startIndex[n],e.startIndex[n+1],r)}else if(6===arguments.length){var i=arguments[0],o=arguments[1],s=arguments[2],a=arguments[3],u=arguments[4],l=arguments[5];if(o-i==1&&u-a==1)return l.addIntersections(this.e,i,s.e,a),null;if(!this.overlaps(i,o,s,a,u))return null;var h=Math.trunc((i+o)/2),c=Math.trunc((a+u)/2);i<h&&(a<c&&this.computeIntersectsForChain(i,h,s,a,c,l),c<u&&this.computeIntersectsForChain(i,h,s,c,u,l)),h<o&&(a<c&&this.computeIntersectsForChain(h,o,s,a,c,l),c<u&&this.computeIntersectsForChain(h,o,s,c,u,l))}}},{key:\"overlaps\",value:function(t,e,n,r,i){return X.intersects(this.pts[t],this.pts[e],n.pts[r],n.pts[i])}},{key:\"getStartIndexes\",value:function(){return this.startIndex}},{key:\"computeIntersects\",value:function(t,e){for(var n=0;n<this.startIndex.length-1;n++)for(var r=0;r<t.startIndex.length-1;r++)this.computeIntersectsForChain(n,t,r,e)}}],[{key:\"constructor_\",value:function(){this.e=null,this.pts=null,this.startIndex=null;var t=arguments[0];this.e=t,this.pts=t.getCoordinates();var e=new nr;this.startIndex=e.getChainStartIndices(this.pts)}}]),e}(),ir=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"getDepth\",value:function(t,e){return this._depth[t][e]}},{key:\"setDepth\",value:function(t,e,n){this._depth[t][e]=n}},{key:\"isNull\",value:function(){if(0===arguments.length){for(var t=0;t<2;t++)for(var n=0;n<3;n++)if(this._depth[t][n]!==e.NULL_VALUE)return!1;return!0}if(1===arguments.length){var r=arguments[0];return this._depth[r][1]===e.NULL_VALUE}if(2===arguments.length){var i=arguments[0],o=arguments[1];return this._depth[i][o]===e.NULL_VALUE}}},{key:\"normalize\",value:function(){for(var t=0;t<2;t++)if(!this.isNull(t)){var e=this._depth[t][1];this._depth[t][2]<e&&(e=this._depth[t][2]),e<0&&(e=0);for(var n=1;n<3;n++){var r=0;this._depth[t][n]>e&&(r=1),this._depth[t][n]=r}}}},{key:\"getDelta\",value:function(t){return this._depth[t][tt.RIGHT]-this._depth[t][tt.LEFT]}},{key:\"getLocation\",value:function(t,e){return this._depth[t][e]<=0?Z.EXTERIOR:Z.INTERIOR}},{key:\"toString\",value:function(){return\"A: \"+this._depth[0][1]+\",\"+this._depth[0][2]+\" B: \"+this._depth[1][1]+\",\"+this._depth[1][2]}},{key:\"add\",value:function(){if(1===arguments.length)for(var t=arguments[0],n=0;n<2;n++)for(var r=1;r<3;r++){var i=t.getLocation(n,r);i!==Z.EXTERIOR&&i!==Z.INTERIOR||(this.isNull(n,r)?this._depth[n][r]=e.depthAtLocation(i):this._depth[n][r]+=e.depthAtLocation(i))}else if(3===arguments.length){var o=arguments[0],s=arguments[1];arguments[2]===Z.INTERIOR&&this._depth[o][s]++}}}],[{key:\"constructor_\",value:function(){this._depth=Array(2).fill().map((function(){return Array(3)}));for(var t=0;t<2;t++)for(var n=0;n<3;n++)this._depth[t][n]=e.NULL_VALUE}},{key:\"depthAtLocation\",value:function(t){return t===Z.EXTERIOR?0:t===Z.INTERIOR?1:e.NULL_VALUE}}]),e}();ir.NULL_VALUE=-1;var or=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"getDepth\",value:function(){return this._depth}},{key:\"getCollapsedEdge\",value:function(){var t=new Array(2).fill(null);return t[0]=this.pts[0],t[1]=this.pts[1],new s(t,Ae.toLineLabel(this._label))}},{key:\"isIsolated\",value:function(){return this._isIsolated}},{key:\"getCoordinates\",value:function(){return this.pts}},{key:\"setIsolated\",value:function(t){this._isIsolated=t}},{key:\"setName\",value:function(t){this._name=t}},{key:\"equals\",value:function(t){if(!(t instanceof s))return!1;var e=t;if(this.pts.length!==e.pts.length)return!1;for(var n=!0,r=!0,i=this.pts.length,o=0;o<this.pts.length;o++)if(this.pts[o].equals2D(e.pts[o])||(n=!1),this.pts[o].equals2D(e.pts[--i])||(r=!1),!n&&!r)return!1;return!0}},{key:\"getCoordinate\",value:function(){if(0===arguments.length)return this.pts.length>0?this.pts[0]:null;if(1===arguments.length){var t=arguments[0];return this.pts[t]}}},{key:\"print\",value:function(t){t.print(\"edge \"+this._name+\": \"),t.print(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.print(\",\"),t.print(this.pts[e].x+\" \"+this.pts[e].y);t.print(\")  \"+this._label+\" \"+this._depthDelta)}},{key:\"computeIM\",value:function(t){s.updateIM(this._label,t)}},{key:\"isCollapsed\",value:function(){return!!this._label.isArea()&&3===this.pts.length&&!!this.pts[0].equals(this.pts[2])}},{key:\"isClosed\",value:function(){return this.pts[0].equals(this.pts[this.pts.length-1])}},{key:\"getMaximumSegmentIndex\",value:function(){return this.pts.length-1}},{key:\"getDepthDelta\",value:function(){return this._depthDelta}},{key:\"getNumPoints\",value:function(){return this.pts.length}},{key:\"printReverse\",value:function(t){t.print(\"edge \"+this._name+\": \");for(var e=this.pts.length-1;e>=0;e--)t.print(this.pts[e]+\" \");t.println(\"\")}},{key:\"getMonotoneChainEdge\",value:function(){return null===this._mce&&(this._mce=new rr(this)),this._mce}},{key:\"getEnvelope\",value:function(){if(null===this._env){this._env=new X;for(var t=0;t<this.pts.length;t++)this._env.expandToInclude(this.pts[t])}return this._env}},{key:\"addIntersection\",value:function(t,e,n,r){var i=new z(t.getIntersection(r)),o=e,s=t.getEdgeDistance(n,r),a=o+1;if(a<this.pts.length){var u=this.pts[a];i.equals2D(u)&&(o=a,s=0)}this.eiList.add(i,o,s)}},{key:\"toString\",value:function(){var t=new Qt;t.append(\"edge \"+this._name+\": \"),t.append(\"LINESTRING (\");for(var e=0;e<this.pts.length;e++)e>0&&t.append(\",\"),t.append(this.pts[e].x+\" \"+this.pts[e].y);return t.append(\")  \"+this._label+\" \"+this._depthDelta),t.toString()}},{key:\"isPointwiseEqual\",value:function(t){if(this.pts.length!==t.pts.length)return!1;for(var e=0;e<this.pts.length;e++)if(!this.pts[e].equals2D(t.pts[e]))return!1;return!0}},{key:\"setDepthDelta\",value:function(t){this._depthDelta=t}},{key:\"getEdgeIntersectionList\",value:function(){return this.eiList}},{key:\"addIntersections\",value:function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++)this.addIntersection(t,e,n,r)}}],[{key:\"constructor_\",value:function(){if(this.pts=null,this._env=null,this.eiList=new $n(this),this._name=null,this._mce=null,this._isIsolated=!0,this._depth=new ir,this._depthDelta=0,1===arguments.length){var t=arguments[0];s.constructor_.call(this,t,null)}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this.pts=e,this._label=n}}},{key:\"updateIM\",value:function(){if(!(2===arguments.length&&arguments[1]instanceof tr&&arguments[0]instanceof Ae))return f(i(s),\"updateIM\",this).apply(this,arguments);var t=arguments[0],e=arguments[1];e.setAtLeastIfValid(t.getLocation(0,tt.ON),t.getLocation(1,tt.ON),1),t.isArea()&&(e.setAtLeastIfValid(t.getLocation(0,tt.LEFT),t.getLocation(1,tt.LEFT),2),e.setAtLeastIfValid(t.getLocation(0,tt.RIGHT),t.getLocation(1,tt.RIGHT),2))}}]),s}(Ve),sr=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"setWorkingPrecisionModel\",value:function(t){this._workingPrecisionModel=t}},{key:\"insertUniqueEdge\",value:function(t){var n=this._edgeList.findEqualEdge(t);if(null!==n){var r=n.getLabel(),i=t.getLabel();n.isPointwiseEqual(t)||(i=new Ae(t.getLabel())).flip(),r.merge(i);var o=e.depthDelta(i),s=n.getDepthDelta()+o;n.setDepthDelta(s)}else this._edgeList.add(t),t.setDepthDelta(e.depthDelta(t.getLabel()))}},{key:\"buildSubgraphs\",value:function(t,e){for(var n=new dt,r=t.iterator();r.hasNext();){var i=r.next(),o=i.getRightmostCoordinate(),s=new Dn(n).getDepth(o);i.computeDepth(s),i.findResultEdges(),n.add(i),e.add(i.getDirectedEdges(),i.getNodes())}}},{key:\"createSubgraphs\",value:function(t){for(var e=new dt,n=t.getNodes().iterator();n.hasNext();){var r=n.next();if(!r.isVisited()){var i=new mt;i.create(r),e.add(i)}}return an.sort(e,an.reverseOrder()),e}},{key:\"createEmptyResultGeometry\",value:function(){return this._geomFact.createPolygon()}},{key:\"getNoder\",value:function(t){if(null!==this._workingNoder)return this._workingNoder;var e=new Ln,n=new Ce;return n.setPrecisionModel(t),e.setSegmentIntersector(new Kn(n)),e}},{key:\"buffer\",value:function(t,e){var n=this._workingPrecisionModel;null===n&&(n=t.getPrecisionModel()),this._geomFact=t.getFactory();var r=new An(n,this._bufParams),i=new Bn(t,e,r).getCurves();if(i.size()<=0)return this.createEmptyResultGeometry();this.computeNodedEdges(i,n),this._graph=new $e(new Zn),this._graph.addEdges(this._edgeList.getEdges());var o=this.createSubgraphs(this._graph),s=new tn(this._geomFact);this.buildSubgraphs(o,s);var a=s.getPolygons();return a.size()<=0?this.createEmptyResultGeometry():this._geomFact.buildGeometry(a)}},{key:\"computeNodedEdges\",value:function(t,e){var n=this.getNoder(e);n.computeNodes(t);for(var r=n.getNodedSubstrings().iterator();r.hasNext();){var i=r.next(),o=i.getCoordinates();if(2!==o.length||!o[0].equals2D(o[1])){var s=i.getData(),a=new or(i.getCoordinates(),new Ae(s));this.insertUniqueEdge(a)}}}},{key:\"setNoder\",value:function(t){this._workingNoder=t}}],[{key:\"constructor_\",value:function(){this._bufParams=null,this._workingPrecisionModel=null,this._workingNoder=null,this._geomFact=null,this._graph=null,this._edgeList=new Wn;var t=arguments[0];this._bufParams=t}},{key:\"depthDelta\",value:function(t){var e=t.getLocation(0,tt.LEFT),n=t.getLocation(0,tt.RIGHT);return e===Z.INTERIOR&&n===Z.EXTERIOR?1:e===Z.EXTERIOR&&n===Z.INTERIOR?-1:0}},{key:\"convertSegStrings\",value:function(t){for(var e=new ae,n=new dt;t.hasNext();){var r=t.next(),i=e.createLineString(r.getCoordinates());n.add(i)}return e.buildGeometry(n)}}]),e}(),ar=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"rescale\",value:function(){if(ot(arguments[0],H))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.rescale(e.getCoordinates())}else if(arguments[0]instanceof Array){for(var n=arguments[0],r=0;r<n.length;r++)n[r].x=n[r].x/this._scaleFactor+this._offsetX,n[r].y=n[r].y/this._scaleFactor+this._offsetY;2===n.length&&n[0].equals2D(n[1])&&xt.out.println(n)}}},{key:\"scale\",value:function(){if(ot(arguments[0],H)){for(var t=arguments[0],e=new dt(t.size()),n=t.iterator();n.hasNext();){var r=n.next();e.add(new kn(this.scale(r.getCoordinates()),r.getData()))}return e}if(arguments[0]instanceof Array){for(var i=arguments[0],o=new Array(i.length).fill(null),s=0;s<i.length;s++)o[s]=new z(Math.round((i[s].x-this._offsetX)*this._scaleFactor),Math.round((i[s].y-this._offsetY)*this._scaleFactor),i[s].getZ());return Wt.removeRepeatedPoints(o)}}},{key:\"isIntegerPrecision\",value:function(){return 1===this._scaleFactor}},{key:\"getNodedSubstrings\",value:function(){var t=this._noder.getNodedSubstrings();return this._isScaled&&this.rescale(t),t}},{key:\"computeNodes\",value:function(t){var e=t;this._isScaled&&(e=this.scale(t)),this._noder.computeNodes(e)}},{key:\"interfaces_\",get:function(){return[Sn]}}],[{key:\"constructor_\",value:function(){if(this._noder=null,this._scaleFactor=null,this._offsetX=null,this._offsetY=null,this._isScaled=!1,2===arguments.length){var t=arguments[0],n=arguments[1];e.constructor_.call(this,t,n,0,0)}else if(4===arguments.length){var r=arguments[0],i=arguments[1];this._noder=r,this._scaleFactor=i,this._isScaled=!this.isIntegerPrecision()}}}]),e}(),ur=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"checkEndPtVertexIntersections\",value:function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next().getCoordinates();this.checkEndPtVertexIntersections(e[0],this._segStrings),this.checkEndPtVertexIntersections(e[e.length-1],this._segStrings)}else if(2===arguments.length)for(var n=arguments[0],r=arguments[1].iterator();r.hasNext();)for(var i=r.next().getCoordinates(),o=1;o<i.length-1;o++)if(i[o].equals(n))throw new F(\"found endpt/interior pt intersection at index \"+o+\" :pt \"+n)}},{key:\"checkInteriorIntersections\",value:function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();)for(var e=t.next(),n=this._segStrings.iterator();n.hasNext();){var r=n.next();this.checkInteriorIntersections(e,r)}else if(2===arguments.length)for(var i=arguments[0],o=arguments[1],s=i.getCoordinates(),a=o.getCoordinates(),u=0;u<s.length-1;u++)for(var l=0;l<a.length-1;l++)this.checkInteriorIntersections(i,u,o,l);else if(4===arguments.length){var h=arguments[0],c=arguments[1],f=arguments[2],g=arguments[3];if(h===f&&c===g)return null;var p=h.getCoordinates()[c],v=h.getCoordinates()[c+1],d=f.getCoordinates()[g],y=f.getCoordinates()[g+1];if(this._li.computeIntersection(p,v,d,y),this._li.hasIntersection()&&(this._li.isProper()||this.hasInteriorIntersection(this._li,p,v)||this.hasInteriorIntersection(this._li,d,y)))throw new F(\"found non-noded intersection at \"+p+\"-\"+v+\" and \"+d+\"-\"+y)}}},{key:\"checkValid\",value:function(){this.checkEndPtVertexIntersections(),this.checkInteriorIntersections(),this.checkCollapses()}},{key:\"checkCollapses\",value:function(){if(0===arguments.length)for(var t=this._segStrings.iterator();t.hasNext();){var e=t.next();this.checkCollapses(e)}else if(1===arguments.length)for(var n=arguments[0].getCoordinates(),r=0;r<n.length-2;r++)this.checkCollapse(n[r],n[r+1],n[r+2])}},{key:\"hasInteriorIntersection\",value:function(t,e,n){for(var r=0;r<t.getIntersectionNum();r++){var i=t.getIntersection(r);if(!i.equals(e)&&!i.equals(n))return!0}return!1}},{key:\"checkCollapse\",value:function(t,n,r){if(t.equals(r))throw new F(\"found non-noded collapse at \"+e.fact.createLineString([t,n,r]))}}],[{key:\"constructor_\",value:function(){this._li=new Ce,this._segStrings=null;var t=arguments[0];this._segStrings=t}}]),e}();ur.fact=new ae;var lr=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"intersectsScaled\",value:function(t,e){var n=Math.min(t.x,e.x),r=Math.max(t.x,e.x),i=Math.min(t.y,e.y),o=Math.max(t.y,e.y),s=this._maxx<n||this._minx>r||this._maxy<i||this._miny>o;if(s)return!1;var a=this.intersectsToleranceSquare(t,e);return V.isTrue(!(s&&a),\"Found bad envelope test\"),a}},{key:\"initCorners\",value:function(t){var e=.5;this._minx=t.x-e,this._maxx=t.x+e,this._miny=t.y-e,this._maxy=t.y+e,this._corner[0]=new z(this._maxx,this._maxy),this._corner[1]=new z(this._minx,this._maxy),this._corner[2]=new z(this._minx,this._miny),this._corner[3]=new z(this._maxx,this._miny)}},{key:\"intersects\",value:function(t,e){return 1===this._scaleFactor?this.intersectsScaled(t,e):(this.copyScaled(t,this._p0Scaled),this.copyScaled(e,this._p1Scaled),this.intersectsScaled(this._p0Scaled,this._p1Scaled))}},{key:\"scale\",value:function(t){return Math.round(t*this._scaleFactor)}},{key:\"getCoordinate\",value:function(){return this._originalPt}},{key:\"copyScaled\",value:function(t,e){e.x=this.scale(t.x),e.y=this.scale(t.y)}},{key:\"getSafeEnvelope\",value:function(){if(null===this._safeEnv){var t=e.SAFE_ENV_EXPANSION_FACTOR/this._scaleFactor;this._safeEnv=new X(this._originalPt.x-t,this._originalPt.x+t,this._originalPt.y-t,this._originalPt.y+t)}return this._safeEnv}},{key:\"intersectsPixelClosure\",value:function(t,e){return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!(this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),this._li.hasIntersection()||(this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),this._li.hasIntersection()))))}},{key:\"intersectsToleranceSquare\",value:function(t,e){var n=!1,r=!1;return this._li.computeIntersection(t,e,this._corner[0],this._corner[1]),!!(this._li.isProper()||(this._li.computeIntersection(t,e,this._corner[1],this._corner[2]),this._li.isProper()||(this._li.hasIntersection()&&(n=!0),this._li.computeIntersection(t,e,this._corner[2],this._corner[3]),this._li.isProper()||(this._li.hasIntersection()&&(r=!0),this._li.computeIntersection(t,e,this._corner[3],this._corner[0]),this._li.isProper()||n&&r||t.equals(this._pt)||e.equals(this._pt)))))}},{key:\"addSnappedNode\",value:function(t,e){var n=t.getCoordinate(e),r=t.getCoordinate(e+1);return!!this.intersects(n,r)&&(t.addIntersection(this.getCoordinate(),e),!0)}}],[{key:\"constructor_\",value:function(){this._li=null,this._pt=null,this._originalPt=null,this._ptScaled=null,this._p0Scaled=null,this._p1Scaled=null,this._scaleFactor=null,this._minx=null,this._maxx=null,this._miny=null,this._maxy=null,this._corner=new Array(4).fill(null),this._safeEnv=null;var t=arguments[0],e=arguments[1],n=arguments[2];if(this._originalPt=t,this._pt=t,this._scaleFactor=e,this._li=n,e<=0)throw new x(\"Scale factor must be non-zero\");1!==e&&(this._pt=new z(this.scale(t.x),this.scale(t.y)),this._p0Scaled=new z,this._p1Scaled=new z),this.initCorners(this._pt)}}]),e}();lr.SAFE_ENV_EXPANSION_FACTOR=.75;var hr=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"select\",value:function(){if(1===arguments.length);else if(2===arguments.length){var t=arguments[1];arguments[0].getLineSegment(t,this.selectedSegment),this.select(this.selectedSegment)}}}],[{key:\"constructor_\",value:function(){this.selectedSegment=new bn}}]),e}(),cr=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"snap\",value:function(){if(1===arguments.length){var e=arguments[0];return this.snap(e,null,-1)}if(3===arguments.length){var r=arguments[0],i=arguments[1],o=arguments[2],s=r.getSafeEnvelope(),a=new fr(r,i,o);return this._index.query(s,new(function(){function e(){t(this,e)}return n(e,[{key:\"interfaces_\",get:function(){return[hn]}},{key:\"visitItem\",value:function(t){t.select(s,a)}}]),e}())),a.isNodeAdded()}}}],[{key:\"constructor_\",value:function(){this._index=null;var t=arguments[0];this._index=t}}]),e}(),fr=function(e){r(s,e);var o=c(s);function s(){var e;return t(this,s),e=o.call(this),s.constructor_.apply(l(e),arguments),e}return n(s,[{key:\"isNodeAdded\",value:function(){return this._isNodeAdded}},{key:\"select\",value:function(){if(!(2===arguments.length&&Number.isInteger(arguments[1])&&arguments[0]instanceof In))return f(i(s.prototype),\"select\",this).apply(this,arguments);var t=arguments[1],e=arguments[0].getContext();if(this._parentEdge===e&&(t===this._hotPixelVertexIndex||t+1===this._hotPixelVertexIndex))return null;this._isNodeAdded|=this._hotPixel.addSnappedNode(e,t)}}],[{key:\"constructor_\",value:function(){this._hotPixel=null,this._parentEdge=null,this._hotPixelVertexIndex=null,this._isNodeAdded=!1;var t=arguments[0],e=arguments[1],n=arguments[2];this._hotPixel=t,this._parentEdge=e,this._hotPixelVertexIndex=n}}]),s}(hr);cr.HotPixelSnapAction=fr;var gr=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"processIntersections\",value:function(t,e,n,r){if(t===n&&e===r)return null;var i=t.getCoordinates()[e],o=t.getCoordinates()[e+1],s=n.getCoordinates()[r],a=n.getCoordinates()[r+1];if(this._li.computeIntersection(i,o,s,a),this._li.hasIntersection()&&this._li.isInteriorIntersection()){for(var u=0;u<this._li.getIntersectionNum();u++)this._interiorIntersections.add(this._li.getIntersection(u));t.addIntersections(this._li,e,0),n.addIntersections(this._li,r,1)}}},{key:\"isDone\",value:function(){return!1}},{key:\"getInteriorIntersections\",value:function(){return this._interiorIntersections}},{key:\"interfaces_\",get:function(){return[Jn]}}],[{key:\"constructor_\",value:function(){this._li=null,this._interiorIntersections=null;var t=arguments[0];this._li=t,this._interiorIntersections=new dt}}]),e}(),pr=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"checkCorrectness\",value:function(t){var e=kn.getNodedSubstrings(t),n=new ur(e);try{n.checkValid()}catch(t){if(!(t instanceof _))throw t;t.printStackTrace()}}},{key:\"getNodedSubstrings\",value:function(){return kn.getNodedSubstrings(this._nodedSegStrings)}},{key:\"snapRound\",value:function(t,e){var n=this.findInteriorIntersections(t,e);this.computeIntersectionSnaps(n),this.computeVertexSnaps(t)}},{key:\"findInteriorIntersections\",value:function(t,e){var n=new gr(e);return this._noder.setSegmentIntersector(n),this._noder.computeNodes(t),n.getInteriorIntersections()}},{key:\"computeVertexSnaps\",value:function(){if(ot(arguments[0],H))for(var t=arguments[0].iterator();t.hasNext();){var e=t.next();this.computeVertexSnaps(e)}else if(arguments[0]instanceof kn)for(var n=arguments[0],r=n.getCoordinates(),i=0;i<r.length;i++){var o=new lr(r[i],this._scaleFactor,this._li);this._pointSnapper.snap(o,n,i)&&n.addIntersection(r[i],i)}}},{key:\"computeNodes\",value:function(t){this._nodedSegStrings=t,this._noder=new Ln,this._pointSnapper=new cr(this._noder.getIndex()),this.snapRound(t,this._li)}},{key:\"computeIntersectionSnaps\",value:function(t){for(var e=t.iterator();e.hasNext();){var n=e.next(),r=new lr(n,this._scaleFactor,this._li);this._pointSnapper.snap(r)}}},{key:\"interfaces_\",get:function(){return[Sn]}}],[{key:\"constructor_\",value:function(){this._pm=null,this._li=null,this._scaleFactor=null,this._noder=null,this._pointSnapper=null,this._nodedSegStrings=null;var t=arguments[0];this._pm=t,this._li=new Ce,this._li.setPrecisionModel(t),this._scaleFactor=t.getScale()}}]),e}(),vr=function(){function e(){t(this,e),e.constructor_.apply(this,arguments)}return n(e,[{key:\"bufferFixedPrecision\",value:function(t){var e=new ar(new pr(new ie(1)),t.getScale()),n=new sr(this._bufParams);n.setWorkingPrecisionModel(t),n.setNoder(e),this._resultGeometry=n.buffer(this._argGeom,this._distance)}},{key:\"bufferReducedPrecision\",value:function(){if(0===arguments.length){for(var t=e.MAX_PRECISION_DIGITS;t>=0;t--){try{this.bufferReducedPrecision(t)}catch(t){if(!(t instanceof pt))throw t;this._saveException=t}if(null!==this._resultGeometry)return null}throw this._saveException}if(1===arguments.length){var n=arguments[0],r=e.precisionScaleFactor(this._argGeom,this._distance,n),i=new ie(r);this.bufferFixedPrecision(i)}}},{key:\"computeGeometry\",value:function(){if(this.bufferOriginalPrecision(),null!==this._resultGeometry)return null;var t=this._argGeom.getFactory().getPrecisionModel();t.getType()===ie.FIXED?this.bufferFixedPrecision(t):this.bufferReducedPrecision()}},{key:\"setQuadrantSegments\",value:function(t){this._bufParams.setQuadrantSegments(t)}},{key:\"bufferOriginalPrecision\",value:function(){try{var t=new sr(this._bufParams);this._resultGeometry=t.buffer(this._argGeom,this._distance)}catch(t){if(!(t instanceof F))throw t;this._saveException=t}}},{key:\"getResultGeometry\",value:function(t){return this._distance=t,this.computeGeometry(),this._resultGeometry}},{key:\"setEndCapStyle\",value:function(t){this._bufParams.setEndCapStyle(t)}}],[{key:\"constructor_\",value:function(){if(this._argGeom=null,this._distance=null,this._bufParams=new y,this._resultGeometry=null,this._saveException=null,1===arguments.length){var t=arguments[0];this._argGeom=t}else if(2===arguments.length){var e=arguments[0],n=arguments[1];this._argGeom=e,this._bufParams=n}}},{key:\"bufferOp\",value:function(){if(2===arguments.length){var t=arguments[1];return new e(arguments[0]).getResultGeometry(t)}if(3===arguments.length){if(Number.isInteger(arguments[2])&&arguments[0]instanceof U&&\"number\"==typeof arguments[1]){var n=arguments[1],r=arguments[2],i=new e(arguments[0]);return i.setQuadrantSegments(r),i.getResultGeometry(n)}if(arguments[2]instanceof y&&arguments[0]instanceof U&&\"number\"==typeof arguments[1]){var o=arguments[1];return new e(arguments[0],arguments[2]).getResultGeometry(o)}}else if(4===arguments.length){var s=arguments[1],a=arguments[2],u=arguments[3],l=new e(arguments[0]);return l.setQuadrantSegments(a),l.setEndCapStyle(u),l.getResultGeometry(s)}}},{key:\"precisionScaleFactor\",value:function(t,e,n){var r=t.getEnvelopeInternal(),i=Et.max(Math.abs(r.getMaxX()),Math.abs(r.getMaxY()),Math.abs(r.getMinX()),Math.abs(r.getMinY()))+2*(e>0?e:0),o=n-Math.trunc(Math.log(i)/Math.log(10)+1);return Math.pow(10,o)}}]),e}();vr.CAP_ROUND=y.CAP_ROUND,vr.CAP_BUTT=y.CAP_FLAT,vr.CAP_FLAT=y.CAP_FLAT,vr.CAP_SQUARE=y.CAP_SQUARE,vr.MAX_PRECISION_DIGITS=12;var dr=[\"Point\",\"MultiPoint\",\"LineString\",\"MultiLineString\",\"Polygon\",\"MultiPolygon\"],yr=function(){function e(n){t(this,e),this.geometryFactory=n||new ae}return n(e,[{key:\"read\",value:function(t){var e,n=(e=\"string\"==typeof t?JSON.parse(t):t).type;if(!mr[n])throw new Error(\"Unknown GeoJSON type: \"+e.type);return-1!==dr.indexOf(n)?mr[n].call(this,e.coordinates):\"GeometryCollection\"===n?mr[n].call(this,e.geometries):mr[n].call(this,e)}},{key:\"write\",value:function(t){var e=t.getGeometryType();if(!_r[e])throw new Error(\"Geometry is not supported\");return _r[e].call(this,t)}}]),e}(),mr={Feature:function(t){var e={};for(var n in t)e[n]=t[n];if(t.geometry){var r=t.geometry.type;if(!mr[r])throw new Error(\"Unknown GeoJSON type: \"+t.type);e.geometry=this.read(t.geometry)}return t.bbox&&(e.bbox=mr.bbox.call(this,t.bbox)),e},FeatureCollection:function(t){var e={};if(t.features){e.features=[];for(var n=0;n<t.features.length;++n)e.features.push(this.read(t.features[n]))}return t.bbox&&(e.bbox=this.parse.bbox.call(this,t.bbox)),e},coordinates:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(a(z,g(r)))}return e},bbox:function(t){return this.geometryFactory.createLinearRing([new z(t[0],t[1]),new z(t[2],t[1]),new z(t[2],t[3]),new z(t[0],t[3]),new z(t[0],t[1])])},Point:function(t){var e=a(z,g(t));return this.geometryFactory.createPoint(e)},MultiPoint:function(t){for(var e=[],n=0;n<t.length;++n)e.push(mr.Point.call(this,t[n]));return this.geometryFactory.createMultiPoint(e)},LineString:function(t){var e=mr.coordinates.call(this,t);return this.geometryFactory.createLineString(e)},MultiLineString:function(t){for(var e=[],n=0;n<t.length;++n)e.push(mr.LineString.call(this,t[n]));return this.geometryFactory.createMultiLineString(e)},Polygon:function(t){for(var e=mr.coordinates.call(this,t[0]),n=this.geometryFactory.createLinearRing(e),r=[],i=1;i<t.length;++i){var o=t[i],s=mr.coordinates.call(this,o),a=this.geometryFactory.createLinearRing(s);r.push(a)}return this.geometryFactory.createPolygon(n,r)},MultiPolygon:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(mr.Polygon.call(this,r))}return this.geometryFactory.createMultiPolygon(e)},GeometryCollection:function(t){for(var e=[],n=0;n<t.length;++n){var r=t[n];e.push(this.read(r))}return this.geometryFactory.createGeometryCollection(e)}},_r={coordinate:function(t){var e=[t.x,t.y];return t.z&&e.push(t.z),t.m&&e.push(t.m),e},Point:function(t){return{type:\"Point\",coordinates:_r.coordinate.call(this,t.getCoordinate())}},MultiPoint:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=_r.Point.call(this,r);e.push(i.coordinates)}return{type:\"MultiPoint\",coordinates:e}},LineString:function(t){for(var e=[],n=t.getCoordinates(),r=0;r<n.length;++r){var i=n[r];e.push(_r.coordinate.call(this,i))}return{type:\"LineString\",coordinates:e}},MultiLineString:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=_r.LineString.call(this,r);e.push(i.coordinates)}return{type:\"MultiLineString\",coordinates:e}},Polygon:function(t){var e=[],n=_r.LineString.call(this,t._shell);e.push(n.coordinates);for(var r=0;r<t._holes.length;++r){var i=t._holes[r],o=_r.LineString.call(this,i);e.push(o.coordinates)}return{type:\"Polygon\",coordinates:e}},MultiPolygon:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=_r.Polygon.call(this,r);e.push(i.coordinates)}return{type:\"MultiPolygon\",coordinates:e}},GeometryCollection:function(t){for(var e=[],n=0;n<t._geometries.length;++n){var r=t._geometries[n],i=r.getGeometryType();e.push(_r[i].call(this,r))}return{type:\"GeometryCollection\",geometries:e}}};return{BufferOp:vr,GeoJSONReader:function(){function e(n){t(this,e),this.parser=new yr(n||new ae)}return n(e,[{key:\"read\",value:function(t){return this.parser.read(t)}}]),e}(),GeoJSONWriter:function(){function e(){t(this,e),this.parser=new yr(this.geometryFactory)}return n(e,[{key:\"write\",value:function(t){return this.parser.write(t)}}]),e}()}}()}(Fn)),Fn.exports),Vn=mn(qn);function Gn(){return new Bn}function Bn(){this.reset()}Bn.prototype={constructor:Bn,reset:function(){this.s=this.t=0},add:function(t){zn(Yn,t,this.t),zn(this,Yn.s,this.s),this.s?this.t+=Yn.t:this.s=Yn.t},valueOf:function(){return this.s}};var Yn=new Bn;function zn(t,e,n){var r=t.s=e+n,i=r-e,o=r-i;t.t=e-o+(n-i)}var jn=1e-6,Xn=Math.PI,Un=Xn/2,Zn=Xn/4,Hn=2*Xn,Wn=180/Xn,Jn=Xn/180,Kn=Math.abs,Qn=Math.atan,$n=Math.atan2,tr=Math.cos,er=Math.sin,nr=Math.sqrt;function rr(t){return t>1?0:t<-1?Xn:Math.acos(t)}function ir(t){return t>1?Un:t<-1?-Un:Math.asin(t)}function or(){}function sr(t,e){t&&ur.hasOwnProperty(t.type)&&ur[t.type](t,e)}var ar={Feature:function(t,e){sr(t.geometry,e)},FeatureCollection:function(t,e){for(var n=t.features,r=-1,i=n.length;++r<i;)sr(n[r].geometry,e)}},ur={Sphere:function(t,e){e.sphere()},Point:function(t,e){t=t.coordinates,e.point(t[0],t[1],t[2])},MultiPoint:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)t=n[r],e.point(t[0],t[1],t[2])},LineString:function(t,e){lr(t.coordinates,e,0)},MultiLineString:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)lr(n[r],e,0)},Polygon:function(t,e){hr(t.coordinates,e)},MultiPolygon:function(t,e){for(var n=t.coordinates,r=-1,i=n.length;++r<i;)hr(n[r],e)},GeometryCollection:function(t,e){for(var n=t.geometries,r=-1,i=n.length;++r<i;)sr(n[r],e)}};function lr(t,e,n){var r,i=-1,o=t.length-n;for(e.lineStart();++i<o;)r=t[i],e.point(r[0],r[1],r[2]);e.lineEnd()}function hr(t,e){var n=-1,r=t.length;for(e.polygonStart();++n<r;)lr(t[n],e,1);e.polygonEnd()}function cr(t){return[$n(t[1],t[0]),ir(t[2])]}function fr(t){var e=t[0],n=t[1],r=tr(n);return[r*tr(e),r*er(e),er(n)]}function gr(t,e){return t[0]*e[0]+t[1]*e[1]+t[2]*e[2]}function pr(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}function vr(t,e){t[0]+=e[0],t[1]+=e[1],t[2]+=e[2]}function dr(t,e){return[t[0]*e,t[1]*e,t[2]*e]}function yr(t){var e=nr(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=e,t[1]/=e,t[2]/=e}function mr(t,e){function n(n,r){return n=t(n,r),e(n[0],n[1])}return t.invert&&e.invert&&(n.invert=function(n,r){return(n=e.invert(n,r))&&t.invert(n[0],n[1])}),n}function _r(t,e){return[t>Xn?t-Hn:t<-Xn?t+Hn:t,e]}function xr(t){return function(e,n){return[(e+=t)>Xn?e-Hn:e<-Xn?e+Hn:e,n]}}function Er(t){var e=xr(t);return e.invert=xr(-t),e}function kr(t,e){var n=tr(t),r=er(t),i=tr(e),o=er(e);function s(t,e){var s=tr(e),a=tr(t)*s,u=er(t)*s,l=er(e),h=l*n+a*r;return[$n(u*i-h*o,a*n-l*r),ir(h*i+u*o)]}return s.invert=function(t,e){var s=tr(e),a=tr(t)*s,u=er(t)*s,l=er(e),h=l*i-u*o;return[$n(u*i+l*o,a*n+h*r),ir(h*n-a*r)]},s}function br(t,e){(e=fr(e))[0]-=t,yr(e);var n=rr(-e[1]);return((-e[2]<0?-n:n)+Hn-jn)%Hn}function wr(){var t,e=[];return{point:function(e,n){t.push([e,n])},lineStart:function(){e.push(t=[])},lineEnd:or,rejoin:function(){e.length>1&&e.push(e.pop().concat(e.shift()))},result:function(){var n=e;return e=[],t=null,n}}}function Ir(t,e){return Kn(t[0]-e[0])<jn&&Kn(t[1]-e[1])<jn}function Nr(t,e,n,r){this.x=t,this.z=e,this.o=n,this.e=r,this.v=!1,this.n=this.p=null}function Sr(t,e,n,r,i){var o,s,a=[],u=[];if(t.forEach((function(t){if(!((e=t.length-1)<=0)){var e,n,r=t[0],s=t[e];if(Ir(r,s)){for(i.lineStart(),o=0;o<e;++o)i.point((r=t[o])[0],r[1]);i.lineEnd()}else a.push(n=new Nr(r,t,null,!0)),u.push(n.o=new Nr(r,null,n,!1)),a.push(n=new Nr(s,t,null,!1)),u.push(n.o=new Nr(s,null,n,!0))}})),a.length){for(u.sort(e),Mr(a),Mr(u),o=0,s=u.length;o<s;++o)u[o].e=n=!n;for(var l,h,c=a[0];;){for(var f=c,g=!0;f.v;)if((f=f.n)===c)return;l=f.z,i.lineStart();do{if(f.v=f.o.v=!0,f.e){if(g)for(o=0,s=l.length;o<s;++o)i.point((h=l[o])[0],h[1]);else r(f.x,f.n.x,1,i);f=f.n}else{if(g)for(l=f.p.z,o=l.length-1;o>=0;--o)i.point((h=l[o])[0],h[1]);else r(f.x,f.p.x,-1,i);f=f.p}l=(f=f.o).z,g=!g}while(!f.v);i.lineEnd()}}}function Mr(t){if(e=t.length){for(var e,n,r=0,i=t[0];++r<e;)i.n=n=t[r],n.p=i,i=n;i.n=n=t[0],n.p=i}}function Lr(t,e){return t<e?-1:t>e?1:t>=e?0:NaN}function Pr(t){for(var e,n,r,i=t.length,o=-1,s=0;++o<i;)s+=t[o].length;for(n=new Array(s);--i>=0;)for(e=(r=t[i]).length;--e>=0;)n[--s]=r[e];return n}Gn(),Gn(),Gn(),_r.invert=_r,function(t){var e;1===t.length&&(e=t,t=function(t,n){return Lr(e(t),n)})}(Lr);var Cr=1e9,Tr=-Cr;function Or(t,e,n,r){function i(i,o){return t<=i&&i<=n&&e<=o&&o<=r}function o(i,o,a,l){var h=0,c=0;if(null==i||(h=s(i,a))!==(c=s(o,a))||u(i,o)<0^a>0)do{l.point(0===h||3===h?t:n,h>1?r:e)}while((h=(h+a+4)%4)!==c);else l.point(o[0],o[1])}function s(r,i){return Kn(r[0]-t)<jn?i>0?0:3:Kn(r[0]-n)<jn?i>0?2:1:Kn(r[1]-e)<jn?i>0?1:0:i>0?3:2}function a(t,e){return u(t.x,e.x)}function u(t,e){var n=s(t,1),r=s(e,1);return n!==r?n-r:0===n?e[1]-t[1]:1===n?t[0]-e[0]:2===n?t[1]-e[1]:e[0]-t[0]}return function(s){var u,l,h,c,f,g,p,v,d,y,m,_=s,x=wr(),E={point:k,lineStart:function(){E.point=b,l&&l.push(h=[]);y=!0,d=!1,p=v=NaN},lineEnd:function(){u&&(b(c,f),g&&d&&x.rejoin(),u.push(x.result()));E.point=k,d&&_.lineEnd()},polygonStart:function(){_=x,u=[],l=[],m=!0},polygonEnd:function(){var e=function(){for(var e=0,n=0,i=l.length;n<i;++n)for(var o,s,a=l[n],u=1,h=a.length,c=a[0],f=c[0],g=c[1];u<h;++u)o=f,s=g,f=(c=a[u])[0],g=c[1],s<=r?g>r&&(f-o)*(r-s)>(g-s)*(t-o)&&++e:g<=r&&(f-o)*(r-s)<(g-s)*(t-o)&&--e;return e}(),n=m&&e,i=(u=Pr(u)).length;(n||i)&&(s.polygonStart(),n&&(s.lineStart(),o(null,null,1,s),s.lineEnd()),i&&Sr(u,a,e,o,s),s.polygonEnd());_=s,u=l=h=null}};function k(t,e){i(t,e)&&_.point(t,e)}function b(o,s){var a=i(o,s);if(l&&h.push([o,s]),y)c=o,f=s,g=a,y=!1,a&&(_.lineStart(),_.point(o,s));else if(a&&d)_.point(o,s);else{var u=[p=Math.max(Tr,Math.min(Cr,p)),v=Math.max(Tr,Math.min(Cr,v))],x=[o=Math.max(Tr,Math.min(Cr,o)),s=Math.max(Tr,Math.min(Cr,s))];!function(t,e,n,r,i,o){var s,a=t[0],u=t[1],l=0,h=1,c=e[0]-a,f=e[1]-u;if(s=n-a,c||!(s>0)){if(s/=c,c<0){if(s<l)return;s<h&&(h=s)}else if(c>0){if(s>h)return;s>l&&(l=s)}if(s=i-a,c||!(s<0)){if(s/=c,c<0){if(s>h)return;s>l&&(l=s)}else if(c>0){if(s<l)return;s<h&&(h=s)}if(s=r-u,f||!(s>0)){if(s/=f,f<0){if(s<l)return;s<h&&(h=s)}else if(f>0){if(s>h)return;s>l&&(l=s)}if(s=o-u,f||!(s<0)){if(s/=f,f<0){if(s>h)return;s>l&&(l=s)}else if(f>0){if(s<l)return;s<h&&(h=s)}return l>0&&(t[0]=a+l*c,t[1]=u+l*f),h<1&&(e[0]=a+h*c,e[1]=u+h*f),!0}}}}}(u,x,t,e,n,r)?a&&(_.lineStart(),_.point(o,s),m=!1):(d||(_.lineStart(),_.point(u[0],u[1])),_.point(x[0],x[1]),a||_.lineEnd(),m=!1)}p=o,v=s,d=a}return E}}var Rr=Gn();function Ar(t){return t}Gn(),Gn(),Gn();var Dr=1/0,Fr=Dr,qr=-Dr,Vr=qr,Gr={point:function(t,e){t<Dr&&(Dr=t);t>qr&&(qr=t);e<Fr&&(Fr=e);e>Vr&&(Vr=e)},lineStart:or,lineEnd:or,polygonStart:or,polygonEnd:or,result:function(){var t=[[Dr,Fr],[qr,Vr]];return qr=Vr=-(Fr=Dr=1/0),t}};function Br(t,e,n,r){return function(i,o){var s,a,u,l=e(o),h=i.invert(r[0],r[1]),c=wr(),f=e(c),g=!1,p={point:v,lineStart:y,lineEnd:m,polygonStart:function(){p.point=_,p.lineStart=x,p.lineEnd=E,a=[],s=[]},polygonEnd:function(){p.point=v,p.lineStart=y,p.lineEnd=m,a=Pr(a);var t=function(t,e){var n=e[0],r=e[1],i=[er(n),-tr(n),0],o=0,s=0;Rr.reset();for(var a=0,u=t.length;a<u;++a)if(h=(l=t[a]).length)for(var l,h,c=l[h-1],f=c[0],g=c[1]/2+Zn,p=er(g),v=tr(g),d=0;d<h;++d,f=m,p=x,v=E,c=y){var y=l[d],m=y[0],_=y[1]/2+Zn,x=er(_),E=tr(_),k=m-f,b=k>=0?1:-1,w=b*k,I=w>Xn,N=p*x;if(Rr.add($n(N*b*er(w),v*E+N*tr(w))),o+=I?k+b*Hn:k,I^f>=n^m>=n){var S=pr(fr(c),fr(y));yr(S);var M=pr(i,S);yr(M);var L=(I^k>=0?-1:1)*ir(M[2]);(r>L||r===L&&(S[0]||S[1]))&&(s+=I^k>=0?1:-1)}}return(o<-jn||o<jn&&Rr<-jn)^1&s}(s,h);a.length?(g||(o.polygonStart(),g=!0),Sr(a,zr,t,n,o)):t&&(g||(o.polygonStart(),g=!0),o.lineStart(),n(null,null,1,o),o.lineEnd()),g&&(o.polygonEnd(),g=!1),a=s=null},sphere:function(){o.polygonStart(),o.lineStart(),n(null,null,1,o),o.lineEnd(),o.polygonEnd()}};function v(e,n){var r=i(e,n);t(e=r[0],n=r[1])&&o.point(e,n)}function d(t,e){var n=i(t,e);l.point(n[0],n[1])}function y(){p.point=d,l.lineStart()}function m(){p.point=v,l.lineEnd()}function _(t,e){u.push([t,e]);var n=i(t,e);f.point(n[0],n[1])}function x(){f.lineStart(),u=[]}function E(){_(u[0][0],u[0][1]),f.lineEnd();var t,e,n,r,i=f.clean(),l=c.result(),h=l.length;if(u.pop(),s.push(u),u=null,h)if(1&i){if((e=(n=l[0]).length-1)>0){for(g||(o.polygonStart(),g=!0),o.lineStart(),t=0;t<e;++t)o.point((r=n[t])[0],r[1]);o.lineEnd()}}else h>1&&2&i&&l.push(l.pop().concat(l.shift())),a.push(l.filter(Yr))}return p}}function Yr(t){return t.length>1}function zr(t,e){return((t=t.x)[0]<0?t[1]-Un-jn:Un-t[1])-((e=e.x)[0]<0?e[1]-Un-jn:Un-e[1])}Gn();var jr=Br((function(){return!0}),(function(t){var e,n=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),e=1},point:function(o,s){var a=o>0?Xn:-Xn,u=Kn(o-n);Kn(u-Xn)<jn?(t.point(n,r=(r+s)/2>0?Un:-Un),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(o,r),e=0):i!==a&&u>=Xn&&(Kn(n-i)<jn&&(n-=i*jn),Kn(o-a)<jn&&(o-=a*jn),r=function(t,e,n,r){var i,o,s=er(t-n);return Kn(s)>jn?Qn((er(e)*(o=tr(r))*er(n)-er(r)*(i=tr(e))*er(t))/(i*o*s)):(e+r)/2}(n,r,o,s),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),e=0),t.point(n=o,r=s),i=a},lineEnd:function(){t.lineEnd(),n=r=NaN},clean:function(){return 2-e}}}),(function(t,e,n,r){var i;if(null==t)i=n*Un,r.point(-Xn,i),r.point(0,i),r.point(Xn,i),r.point(Xn,0),r.point(Xn,-i),r.point(0,-i),r.point(-Xn,-i),r.point(-Xn,0),r.point(-Xn,i);else if(Kn(t[0]-e[0])>jn){var o=t[0]<e[0]?Xn:-Xn;i=n*o/2,r.point(-o,i),r.point(0,i),r.point(o,i)}else r.point(e[0],e[1])}),[-Xn,-Un]);function Xr(t,e){var n=tr(t),r=n>0,i=Kn(n)>jn;function o(t,e){return tr(t)*tr(e)>n}function s(t,e,r){var i=[1,0,0],o=pr(fr(t),fr(e)),s=gr(o,o),a=o[0],u=s-a*a;if(!u)return!r&&t;var l=n*s/u,h=-n*a/u,c=pr(i,o),f=dr(i,l);vr(f,dr(o,h));var g=c,p=gr(f,g),v=gr(g,g),d=p*p-v*(gr(f,f)-1);if(!(d<0)){var y=nr(d),m=dr(g,(-p-y)/v);if(vr(m,f),m=cr(m),!r)return m;var _,x=t[0],E=e[0],k=t[1],b=e[1];E<x&&(_=x,x=E,E=_);var w=E-x,I=Kn(w-Xn)<jn;if(!I&&b<k&&(_=k,k=b,b=_),I||w<jn?I?k+b>0^m[1]<(Kn(m[0]-x)<jn?k:b):k<=m[1]&&m[1]<=b:w>Xn^(x<=m[0]&&m[0]<=E)){var N=dr(g,(-p+y)/v);return vr(N,f),[m,cr(N)]}}}function a(e,n){var i=r?t:Xn-t,o=0;return e<-i?o|=1:e>i&&(o|=2),n<-i?o|=4:n>i&&(o|=8),o}return Br(o,(function(t){var e,n,u,l,h;return{lineStart:function(){l=u=!1,h=1},point:function(c,f){var g,p=[c,f],v=o(c,f),d=r?v?0:a(c,f):v?a(c+(c<0?Xn:-Xn),f):0;if(!e&&(l=u=v)&&t.lineStart(),v!==u&&(!(g=s(e,p))||Ir(e,g)||Ir(p,g))&&(p[0]+=jn,p[1]+=jn,v=o(p[0],p[1])),v!==u)h=0,v?(t.lineStart(),g=s(p,e),t.point(g[0],g[1])):(g=s(e,p),t.point(g[0],g[1]),t.lineEnd()),e=g;else if(i&&e&&r^v){var y;d&n||!(y=s(p,e,!0))||(h=0,r?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!v||e&&Ir(e,p)||t.point(p[0],p[1]),e=p,u=v,n=d},lineEnd:function(){u&&t.lineEnd(),e=null},clean:function(){return h|(l&&u)<<1}}}),(function(n,r,i,o){!function(t,e,n,r,i,o){if(n){var s=tr(e),a=er(e),u=r*n;null==i?(i=e+r*Hn,o=e-u/2):(i=br(s,i),o=br(s,o),(r>0?i<o:i>o)&&(i+=r*Hn));for(var l,h=i;r>0?h>o:h<o;h-=u)l=cr([s,-a*tr(h),-a*er(h)]),t.point(l[0],l[1])}}(o,t,e,i,n,r)}),r?[0,-t]:[-Xn,t-Xn])}function Ur(t){return function(e){var n=new Zr;for(var r in t)n[r]=t[r];return n.stream=e,n}}function Zr(){}function Hr(t,e,n){var r=e[1][0]-e[0][0],i=e[1][1]-e[0][1],o=t.clipExtent&&t.clipExtent();t.scale(150).translate([0,0]),null!=o&&t.clipExtent(null),function(t,e){t&&ar.hasOwnProperty(t.type)?ar[t.type](t,e):sr(t,e)}(n,t.stream(Gr));var s=Gr.result(),a=Math.min(r/(s[1][0]-s[0][0]),i/(s[1][1]-s[0][1])),u=+e[0][0]+(r-a*(s[1][0]+s[0][0]))/2,l=+e[0][1]+(i-a*(s[1][1]+s[0][1]))/2;return null!=o&&t.clipExtent(o),t.scale(150*a).translate([u,l])}Zr.prototype={constructor:Zr,point:function(t,e){this.stream.point(t,e)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var Wr=16,Jr=tr(30*Jn);function Kr(t,e){return+e?function(t,e){function n(r,i,o,s,a,u,l,h,c,f,g,p,v,d){var y=l-r,m=h-i,_=y*y+m*m;if(_>4*e&&v--){var x=s+f,E=a+g,k=u+p,b=nr(x*x+E*E+k*k),w=ir(k/=b),I=Kn(Kn(k)-1)<jn||Kn(o-c)<jn?(o+c)/2:$n(E,x),N=t(I,w),S=N[0],M=N[1],L=S-r,P=M-i,C=m*L-y*P;(C*C/_>e||Kn((y*L+m*P)/_-.5)>.3||s*f+a*g+u*p<Jr)&&(n(r,i,o,s,a,u,S,M,I,x/=b,E/=b,k,v,d),d.point(S,M),n(S,M,I,x,E,k,l,h,c,f,g,p,v,d))}}return function(e){var r,i,o,s,a,u,l,h,c,f,g,p,v={point:d,lineStart:y,lineEnd:_,polygonStart:function(){e.polygonStart(),v.lineStart=x},polygonEnd:function(){e.polygonEnd(),v.lineStart=y}};function d(n,r){n=t(n,r),e.point(n[0],n[1])}function y(){h=NaN,v.point=m,e.lineStart()}function m(r,i){var o=fr([r,i]),s=t(r,i);n(h,c,l,f,g,p,h=s[0],c=s[1],l=r,f=o[0],g=o[1],p=o[2],Wr,e),e.point(h,c)}function _(){v.point=d,e.lineEnd()}function x(){y(),v.point=E,v.lineEnd=k}function E(t,e){m(r=t,e),i=h,o=c,s=f,a=g,u=p,v.point=m}function k(){n(h,c,l,f,g,p,i,o,r,s,a,u,Wr,e),v.lineEnd=_,_()}return v}}(t,e):function(t){return Ur({point:function(e,n){e=t(e,n),this.stream.point(e[0],e[1])}})}(t)}var Qr=Ur({point:function(t,e){this.stream.point(t*Jn,e*Jn)}});function $r(t){return function(t){var e,n,r,i,o,s,a,u,l,h,c=150,f=480,g=250,p=0,v=0,d=0,y=0,m=0,_=null,x=jr,E=null,k=Ar,b=.5,w=Kr(S,b);function I(t){return[(t=o(t[0]*Jn,t[1]*Jn))[0]*c+n,r-t[1]*c]}function N(t){return(t=o.invert((t[0]-n)/c,(r-t[1])/c))&&[t[0]*Wn,t[1]*Wn]}function S(t,i){return[(t=e(t,i))[0]*c+n,r-t[1]*c]}function M(){o=mr(i=function(t,e,n){return(t%=Hn)?e||n?mr(Er(t),kr(e,n)):Er(t):e||n?kr(e,n):_r}(d,y,m),e);var t=e(p,v);return n=f-t[0]*c,r=g+t[1]*c,L()}function L(){return l=h=null,I}return I.stream=function(t){return l&&h===t?l:l=Qr(x(i,w(k(h=t))))},I.clipAngle=function(t){return arguments.length?(x=+t?Xr(_=t*Jn,6*Jn):(_=null,jr),L()):_*Wn},I.clipExtent=function(t){return arguments.length?(k=null==t?(E=s=a=u=null,Ar):Or(E=+t[0][0],s=+t[0][1],a=+t[1][0],u=+t[1][1]),L()):null==E?null:[[E,s],[a,u]]},I.scale=function(t){return arguments.length?(c=+t,M()):c},I.translate=function(t){return arguments.length?(f=+t[0],g=+t[1],M()):[f,g]},I.center=function(t){return arguments.length?(p=t[0]%360*Jn,v=t[1]%360*Jn,M()):[p*Wn,v*Wn]},I.rotate=function(t){return arguments.length?(d=t[0]%360*Jn,y=t[1]%360*Jn,m=t.length>2?t[2]%360*Jn:0,M()):[d*Wn,y*Wn,m*Wn]},I.precision=function(t){return arguments.length?(w=Kr(S,b=t*t),L()):nr(b)},I.fitExtent=function(t,e){return Hr(I,t,e)},I.fitSize=function(t,e){return function(t,e,n){return Hr(t,[[0,0],e],n)}(I,t,e)},function(){return e=t.apply(this,arguments),I.invert=e.invert&&N,M()}}((function(){return t}))()}function ti(t){return function(e,n){var r=tr(e),i=tr(n),o=t(r*i);return[o*i*er(e),o*er(n)]}}function ei(t){return function(e,n){var r=nr(e*e+n*n),i=t(r),o=er(i),s=tr(i);return[$n(e*o,r*s),ir(r&&n*o/r)]}}ti((function(t){return nr(2/(1+t))})).invert=ei((function(t){return 2*ir(t/2)}));var ni=ti((function(t){return(t=rr(t))&&t/er(t)}));function ri(){return $r(ni).scale(79.4188).clipAngle(179.999)}function ii(t,e){return[t,e]}ni.invert=ei((function(t){return t})),ii.invert=ii;var oi=Vn.BufferOp,si=Vn.GeoJSONReader,ai=Vn.GeoJSONWriter;function ui(t,e,n,r){var i=t.properties||{},o=\"Feature\"===t.type?t.geometry:t;if(\"GeometryCollection\"===o.type){var s=[];return mt(t,(function(t){var i=ui(t,e,n,r);i&&s.push(i)})),C(s)}var a=function(t){var e=An(t).geometry.coordinates,n=[-e[0],-e[1]];return ri().rotate(n).scale(x)}(o),u={type:o.type,coordinates:hi(o.coordinates,a)},l=(new si).read(u),h=F(q(e,n),\"meters\"),c=oi.bufferOp(l,h,r);if(!li((c=(new ai).write(c)).coordinates))return b({type:c.type,coordinates:ci(c.coordinates,a)},i)}function li(t){return Array.isArray(t[0])?li(t[0]):isNaN(t[0])}function hi(t,e){return\"object\"!==m(t[0])?e(t):t.map((function(t){return hi(t,e)}))}function ci(t,e){return\"object\"!==m(t[0])?e.invert(t):t.map((function(t){return ci(t,e)}))}function fi(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=0,r=0,i=0;return mt(t,(function(t,o,s){var a=e.weight?null==s?void 0:s[e.weight]:void 0;if(!U(a=null==a?1:a))throw new Error(\"weight value must be a number for feature index \"+o);(a=Number(a))>0&&ct(t,(function(t){n+=t[0]*a,r+=t[1]*a,i+=a}))})),I([n/i,r/i],e.properties,e)}function gi(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=0,r=0,i=0;return ct(t,(function(t){n+=t[0],r+=t[1],i++}),!0),I([n/i,r/i],e.properties)}function pi(t,e,n,r,i){var o=r.tolerance||.001,s=0,a=0,u=0,l=0;if(vt(n,(function(e){var n,r=null==(n=e.properties)?void 0:n.weight,i=null==r?1:r;if(!U(i=Number(i)))throw new Error(\"weight value must be a number\");if(i>0){l+=1;var o=i*ut(e,t);0===o&&(o=1);var h=i/o;s+=e.geometry.coordinates[0]*h,a+=e.geometry.coordinates[1]*h,u+=h}})),l<1)throw new Error(\"no features to measure\");var h=s/u,c=a/u;return 1===l||0===i||Math.abs(h-e[0])<o&&Math.abs(c-e[1])<o?I([h,c],{medianCandidates:r.medianCandidates}):(r.medianCandidates.push([h,c]),pi([h,c],t,n,r,i-1))}var vi={exports:{}},di=_n(Ke),yi=function(){return s((function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:mi;if(i(this,t),this.data=e,this.length=this.data.length,this.compare=n,this.length>0)for(var r=(this.length>>1)-1;r>=0;r--)this._down(r)}),[{key:\"push\",value:function(t){this.data.push(t),this.length++,this._up(this.length-1)}},{key:\"pop\",value:function(){if(0!==this.length){var t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}}},{key:\"peek\",value:function(){return this.data[0]}},{key:\"_up\",value:function(t){for(var e=this.data,n=this.compare,r=e[t];t>0;){var i=t-1>>1,o=e[i];if(n(r,o)>=0)break;e[t]=o,t=i}e[t]=r}},{key:\"_down\",value:function(t){for(var e=this.data,n=this.compare,r=this.length>>1,i=e[t];t<r;){var o=1+(t<<1),s=e[o],a=o+1;if(a<this.length&&n(e[a],s)<0&&(o=a,s=e[a]),n(s,i)>=0)break;e[t]=s,t=o}e[t]=i}}])}();function mi(t,e){return t<e?-1:t>e?1:0}var _i,xi,Ei,ki,bi,wi=_n(Object.freeze({__proto__:null,default:yi})),Ii={exports:{}};function Ni(){if(bi)return Ii.exports;bi=1;var t=(xi||(xi=1,_i=function(t,e,n,r){var i=t[0],o=t[1],s=!1;void 0===n&&(n=0),void 0===r&&(r=e.length);for(var a=(r-n)/2,u=0,l=a-1;u<a;l=u++){var h=e[n+2*u+0],c=e[n+2*u+1],f=e[n+2*l+0],g=e[n+2*l+1];c>o!=g>o&&i<(f-h)*(o-c)/(g-c)+h&&(s=!s)}return s}),_i),e=(ki||(ki=1,Ei=function(t,e,n,r){var i=t[0],o=t[1],s=!1;void 0===n&&(n=0),void 0===r&&(r=e.length);for(var a=r-n,u=0,l=a-1;u<a;l=u++){var h=e[u+n][0],c=e[u+n][1],f=e[l+n][0],g=e[l+n][1];c>o!=g>o&&i<(f-h)*(o-c)/(g-c)+h&&(s=!s)}return s}),Ei);return Ii.exports=function(n,r,i,o){return r.length>0&&Array.isArray(r[0])?e(n,r,i,o):t(n,r,i,o)},Ii.exports.nested=e,Ii.exports.flat=t,Ii.exports}var Si,Mi,Li={exports:{}};Li.exports;function Pi(){return Si||(Si=1,function(t,e){!function(t){var e=134217729,n=33306690738754706e-32;function r(t,e,n,r,i){var o,s,a,u,l=e[0],h=r[0],c=0,f=0;h>l==h>-l?(o=l,l=e[++c]):(o=h,h=r[++f]);var g=0;if(c<t&&f<n)for(h>l==h>-l?(a=o-((s=l+o)-l),l=e[++c]):(a=o-((s=h+o)-h),h=r[++f]),o=s,0!==a&&(i[g++]=a);c<t&&f<n;)h>l==h>-l?(a=o-((s=o+l)-(u=s-o))+(l-u),l=e[++c]):(a=o-((s=o+h)-(u=s-o))+(h-u),h=r[++f]),o=s,0!==a&&(i[g++]=a);for(;c<t;)a=o-((s=o+l)-(u=s-o))+(l-u),l=e[++c],o=s,0!==a&&(i[g++]=a);for(;f<n;)a=o-((s=o+h)-(u=s-o))+(h-u),h=r[++f],o=s,0!==a&&(i[g++]=a);return 0===o&&0!==g||(i[g++]=o),g}function i(t){return new Float64Array(t)}var o=33306690738754716e-32,s=22204460492503146e-32,a=11093356479670487e-47,u=i(4),l=i(8),h=i(12),c=i(16),f=i(4);t.orient2d=function(t,i,g,p,v,d){var y=(i-d)*(g-v),m=(t-v)*(p-d),_=y-m;if(0===y||0===m||y>0!=m>0)return _;var x=Math.abs(y+m);return Math.abs(_)>=o*x?_:-function(t,i,o,g,p,v,d){var y,m,_,x,E,k,b,w,I,N,S,M,L,P,C,T,O,R,A=t-p,D=o-p,F=i-v,q=g-v;E=(C=(w=A-(b=(k=e*A)-(k-A)))*(N=q-(I=(k=e*q)-(k-q)))-((P=A*q)-b*I-w*I-b*N))-(S=C-(O=(w=F-(b=(k=e*F)-(k-F)))*(N=D-(I=(k=e*D)-(k-D)))-((T=F*D)-b*I-w*I-b*N))),u[0]=C-(S+E)+(E-O),E=(L=P-((M=P+S)-(E=M-P))+(S-E))-(S=L-T),u[1]=L-(S+E)+(E-T),E=(R=M+S)-M,u[2]=M-(R-E)+(S-E),u[3]=R;var V=function(t,e){for(var n=e[0],r=1;r<t;r++)n+=e[r];return n}(4,u),G=s*d;if(V>=G||-V>=G)return V;if(y=t-(A+(E=t-A))+(E-p),_=o-(D+(E=o-D))+(E-p),m=i-(F+(E=i-F))+(E-v),x=g-(q+(E=g-q))+(E-v),0===y&&0===m&&0===_&&0===x)return V;if(G=a*d+n*Math.abs(V),(V+=A*x+q*y-(F*_+D*m))>=G||-V>=G)return V;E=(C=(w=y-(b=(k=e*y)-(k-y)))*(N=q-(I=(k=e*q)-(k-q)))-((P=y*q)-b*I-w*I-b*N))-(S=C-(O=(w=m-(b=(k=e*m)-(k-m)))*(N=D-(I=(k=e*D)-(k-D)))-((T=m*D)-b*I-w*I-b*N))),f[0]=C-(S+E)+(E-O),E=(L=P-((M=P+S)-(E=M-P))+(S-E))-(S=L-T),f[1]=L-(S+E)+(E-T),E=(R=M+S)-M,f[2]=M-(R-E)+(S-E),f[3]=R;var B=r(4,u,4,f,l);E=(C=(w=A-(b=(k=e*A)-(k-A)))*(N=x-(I=(k=e*x)-(k-x)))-((P=A*x)-b*I-w*I-b*N))-(S=C-(O=(w=F-(b=(k=e*F)-(k-F)))*(N=_-(I=(k=e*_)-(k-_)))-((T=F*_)-b*I-w*I-b*N))),f[0]=C-(S+E)+(E-O),E=(L=P-((M=P+S)-(E=M-P))+(S-E))-(S=L-T),f[1]=L-(S+E)+(E-T),E=(R=M+S)-M,f[2]=M-(R-E)+(S-E),f[3]=R;var Y=r(B,l,4,f,h);E=(C=(w=y-(b=(k=e*y)-(k-y)))*(N=x-(I=(k=e*x)-(k-x)))-((P=y*x)-b*I-w*I-b*N))-(S=C-(O=(w=m-(b=(k=e*m)-(k-m)))*(N=_-(I=(k=e*_)-(k-_)))-((T=m*_)-b*I-w*I-b*N))),f[0]=C-(S+E)+(E-O),E=(L=P-((M=P+S)-(E=M-P))+(S-E))-(S=L-T),f[1]=L-(S+E)+(E-T),E=(R=M+S)-M,f[2]=M-(R-E)+(S-E),f[3]=R;var z=r(Y,h,4,f,c);return c[z-1]}(t,i,g,p,v,d,x)},t.orient2dfast=function(t,e,n,r,i,o){return(e-o)*(n-i)-(t-i)*(r-o)},Object.defineProperty(t,\"__esModule\",{value:!0})}(e)}(0,Li.exports)),Li.exports}var Ci=function(){if(Mi)return vi.exports;Mi=1;var t=di,e=wi,n=Ni(),r=Pi().orient2d;function i(e,r,i){r=Math.max(0,void 0===r?2:r),i=i||0;var s=function(t){for(var e=t[0],r=t[0],i=t[0],o=t[0],s=0;s<t.length;s++){var a=t[s];a[0]<e[0]&&(e=a),a[0]>i[0]&&(i=a),a[1]<r[1]&&(r=a),a[1]>o[1]&&(o=a)}var u=[e,r,i,o],l=u.slice();for(s=0;s<t.length;s++)n(t[s],u)||l.push(t[s]);return function(t){t.sort(d);for(var e=[],n=0;n<t.length;n++){for(;e.length>=2&&h(e[e.length-2],e[e.length-1],t[n])<=0;)e.pop();e.push(t[n])}for(var r=[],i=t.length-1;i>=0;i--){for(;r.length>=2&&h(r[r.length-2],r[r.length-1],t[i])<=0;)r.pop();r.push(t[i])}return r.pop(),e.pop(),e.concat(r)}(l)}(e),a=new t(16);a.toBBox=function(t){return{minX:t[0],minY:t[1],maxX:t[0],maxY:t[1]}},a.compareMinX=function(t,e){return t[0]-e[0]},a.compareMinY=function(t,e){return t[1]-e[1]},a.load(e);for(var u,l=[],p=0;p<s.length;p++){var v=s[p];a.remove(v),u=f(v,u),l.push(u)}var y=new t(16);for(p=0;p<l.length;p++)y.insert(c(l[p]));for(var m=r*r,_=i*i;l.length;){var x=l.shift(),E=x.p,k=x.next.p,b=g(E,k);if(!(b<_)){var w=b/m;(v=o(a,x.prev.p,E,k,x.next.next.p,w,y))&&Math.min(g(v,E),g(v,k))<=w&&(l.push(x),l.push(f(v,x)),a.remove(v),y.remove(x),y.insert(c(x)),y.insert(c(x.next)))}}x=u;var I=[];do{I.push(x.p),x=x.next}while(x!==u);return I.push(x.p),I}function o(t,n,r,i,o,u,h){for(var c=new e([],s),f=t.data;f;){for(var g=0;g<f.children.length;g++){var v=f.children[g],d=f.leaf?p(v,r,i):a(r,i,v);d>u||c.push({node:v,dist:d})}for(;c.length&&!c.peek().node.children;){var y=c.pop(),m=y.node,_=p(m,n,r),x=p(m,i,o);if(y.dist<_&&y.dist<x&&l(r,m,h)&&l(i,m,h))return m}(f=c.pop())&&(f=f.node)}return null}function s(t,e){return t.dist-e.dist}function a(t,e,n){if(u(t,n)||u(e,n))return 0;var r=v(t[0],t[1],e[0],e[1],n.minX,n.minY,n.maxX,n.minY);if(0===r)return 0;var i=v(t[0],t[1],e[0],e[1],n.minX,n.minY,n.minX,n.maxY);if(0===i)return 0;var o=v(t[0],t[1],e[0],e[1],n.maxX,n.minY,n.maxX,n.maxY);if(0===o)return 0;var s=v(t[0],t[1],e[0],e[1],n.minX,n.maxY,n.maxX,n.maxY);return 0===s?0:Math.min(r,i,o,s)}function u(t,e){return t[0]>=e.minX&&t[0]<=e.maxX&&t[1]>=e.minY&&t[1]<=e.maxY}function l(t,e,n){for(var r,i,o,s,a=Math.min(t[0],e[0]),u=Math.min(t[1],e[1]),l=Math.max(t[0],e[0]),c=Math.max(t[1],e[1]),f=n.search({minX:a,minY:u,maxX:l,maxY:c}),g=0;g<f.length;g++)if(r=f[g].p,i=f[g].next.p,o=t,r!==(s=e)&&i!==o&&h(r,i,o)>0!=h(r,i,s)>0&&h(o,s,r)>0!=h(o,s,i)>0)return!1;return!0}function h(t,e,n){return r(t[0],t[1],e[0],e[1],n[0],n[1])}function c(t){var e=t.p,n=t.next.p;return t.minX=Math.min(e[0],n[0]),t.minY=Math.min(e[1],n[1]),t.maxX=Math.max(e[0],n[0]),t.maxY=Math.max(e[1],n[1]),t}function f(t,e){var n={p:t,prev:null,next:null,minX:0,minY:0,maxX:0,maxY:0};return e?(n.next=e.next,n.prev=e,e.next.prev=n,e.next=n):(n.prev=n,n.next=n),n}function g(t,e){var n=t[0]-e[0],r=t[1]-e[1];return n*n+r*r}function p(t,e,n){var r=e[0],i=e[1],o=n[0]-r,s=n[1]-i;if(0!==o||0!==s){var a=((t[0]-r)*o+(t[1]-i)*s)/(o*o+s*s);a>1?(r=n[0],i=n[1]):a>0&&(r+=o*a,i+=s*a)}return(o=t[0]-r)*o+(s=t[1]-i)*s}function v(t,e,n,r,i,o,s,a){var u,l,h,c,f=n-t,g=r-e,p=s-i,v=a-o,d=t-i,y=e-o,m=f*f+g*g,_=f*p+g*v,x=p*p+v*v,E=f*d+g*y,k=p*d+v*y,b=m*x-_*_,w=b,I=b;0===b?(l=0,w=1,c=k,I=x):(c=m*k-_*E,(l=_*k-x*E)<0?(l=0,c=k,I=x):l>w&&(l=w,c=k+_,I=x)),c<0?(c=0,-E<0?l=0:-E>m?l=w:(l=-E,w=m)):c>I&&(c=I,-E+_<0?l=0:-E+_>m?l=w:(l=-E+_,w=m));var N=(1-(h=0===c?0:c/I))*i+h*s-((1-(u=0===l?0:l/w))*t+u*n),S=(1-h)*o+h*a-((1-u)*e+u*r);return N*N+S*S}function d(t,e){return t[0]===e[0]?t[1]-e[1]:t[0]-e[0]}return e.default&&(e=e.default),vi.exports=i,vi.exports.default=i,vi.exports}(),Ti=mn(Ci);function Oi(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};e.concavity=e.concavity||1/0;var n=[];if(ct(t,(function(t){n.push([t[0],t[1]])})),!n.length)return null;var r=Ti(n,e.concavity);return r.length>3?S([r]):null}function Ri(t,e){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.steps||64,i=n.properties?n.properties:!Array.isArray(t)&&\"Feature\"===t.type&&t.properties?t.properties:{},o=[],s=0;s<r;s++)o.push(at(t,e,-360*s/r,n).geometry.coordinates);return o.push(o[0]),S([o],i)}function Ai(t){if(!t)throw new Error(\"geojson is required\");switch(t.type){case\"Feature\":return Di(t);case\"FeatureCollection\":return function(t){var e={type:\"FeatureCollection\"};return Object.keys(t).forEach((function(n){switch(n){case\"type\":case\"features\":return;default:e[n]=t[n]}})),e.features=t.features.map((function(t){return Di(t)})),e}(t);case\"Point\":case\"LineString\":case\"Polygon\":case\"MultiPoint\":case\"MultiLineString\":case\"MultiPolygon\":case\"GeometryCollection\":return qi(t);default:throw new Error(\"unknown GeoJSON type\")}}function Di(t){var e={type:\"Feature\"};return Object.keys(t).forEach((function(n){switch(n){case\"type\":case\"properties\":case\"geometry\":return;default:e[n]=t[n]}})),e.properties=Fi(t.properties),null==t.geometry?e.geometry=null:e.geometry=qi(t.geometry),e}function Fi(t){var e={};return t?(Object.keys(t).forEach((function(n){var r=t[n];\"object\"===m(r)?null===r?e[n]=null:Array.isArray(r)?e[n]=r.map((function(t){return t})):e[n]=Fi(r):e[n]=r})),e):e}function qi(t){var e={type:t.type};return t.bbox&&(e.bbox=t.bbox),\"GeometryCollection\"===t.type?(e.geometries=t.geometries.map((function(t){return qi(t)})),e):(e.coordinates=Vi(t.coordinates),e)}function Vi(t){var e=t;return\"object\"!==m(e[0])?e.slice():e.map((function(t){return Vi(t)}))}function Gi(t,e){if(!t)throw new Error(\"geojson is required\");if(\"FeatureCollection\"!==t.type)throw new Error(\"geojson must be a FeatureCollection\");if(null==e)throw new Error(\"filter is required\");var n=[];return vt(t,(function(t){ji(t.properties,e)&&n.push(t)})),C(n)}function Bi(t,e,n){if(!t)throw new Error(\"geojson is required\");if(\"FeatureCollection\"!==t.type)throw new Error(\"geojson must be a FeatureCollection\");if(null==e)throw new Error(\"property is required\");for(var r=zi(t,e),i=Object.keys(r),o=0;o<i.length;o++){for(var s=i[o],a=r[s],u=[],l=0;l<a.length;l++)u.push(t.features[a[l]]);n(C(u),s,o)}}function Yi(t,e,n,r){var i=r;return Bi(t,e,(function(t,e,o){i=0===o&&void 0===r?t:n(i,t,e,o)})),i}function zi(t,e){var n={};return vt(t,(function(t,r){var i=t.properties||{};if(Object.prototype.hasOwnProperty.call(i,String(e))){var o=i[e];Object.prototype.hasOwnProperty.call(n,o)?n[o].push(r):n[o]=[r]}})),n}function ji(t,e){if(void 0===t)return!1;var n=m(e);if(\"number\"===n||\"string\"===n)return Object.prototype.hasOwnProperty.call(t,e);if(Array.isArray(e)){for(var r=0;r<e.length;r++)if(!ji(t,e[r]))return!1;return!0}return Xi(t,e)}function Xi(t,e){for(var n=Object.keys(e),r=0;r<n.length;r++){var i=n[r];if(t[i]!==e[i])return!1}return!0}function Ui(t,e){if(!e)return{};if(!e.length)return{};for(var n={},r=0;r<e.length;r++){var i=e[r];Object.prototype.hasOwnProperty.call(t,i)&&(n[i]=t[i])}return n}var Zi,Hi,Wi,Ji,Ki,Qi,$i=Object.freeze({__proto__:null,applyFilter:ji,clusterEach:Bi,clusterReduce:Yi,createBins:zi,filterProperties:Ui,getCluster:Gi,propertiesContainsFilter:Xi}),to=qe;function eo(){return Hi||(Hi=1,Zi={eudist:function(t,e,n){for(var r=t.length,i=0,o=0;o<r;o++){var s=(t[o]||0)-(e[o]||0);i+=s*s}return n?Math.sqrt(i):i},mandist:function(t,e,n){for(var r=t.length,i=0,o=0;o<r;o++)i+=Math.abs((t[o]||0)-(e[o]||0));return n?Math.sqrt(i):i},dist:function(t,e,n){var r=Math.abs(t-e);return n?r:r*r}}),Zi}var no=function(){if(Qi)return Ki;Qi=1;var t=eo(),e=function(){if(Ji)return Wi;Ji=1;var t=eo(),e=t.eudist,n=t.dist;return Wi={kmrand:function(t,e){for(var n={},r=[],i=e<<2,o=t.length,s=t[0].length>0;r.length<e&&i-- >0;){var a=t[Math.floor(Math.random()*o)],u=s?a.join(\"_\"):\"\"+a;n[u]||(n[u]=!0,r.push(a))}if(r.length<e)throw new Error(\"Error initializating clusters\");return r},kmpp:function(t,r){var i=t[0].length?e:n,o=[],s=t.length,a=t[0].length>0,u=t[Math.floor(Math.random()*s)];for(a&&u.join(\"_\"),o.push(u);o.length<r;){for(var l=[],h=o.length,c=0,f=[],g=0;g<s;g++){for(var p=1/0,v=0;v<h;v++){var d=i(t[g],o[v]);d<=p&&(p=d)}l[g]=p}for(var y=0;y<s;y++)c+=l[y];for(var m=0;m<s;m++)f[m]={i:m,v:t[m],pr:l[m]/c,cs:0};f.sort((function(t,e){return t.pr-e.pr})),f[0].cs=f[0].pr;for(var _=1;_<s;_++)f[_].cs=f[_-1].cs+f[_].pr;for(var x=Math.random(),E=0;E<s-1&&f[E++].cs<x;);o.push(f[E-1].v)}return o}},Wi}(),n=t.eudist;t.mandist,t.dist;var r=e.kmrand,i=e.kmpp;function o(t,e,n){n=n||[];for(var r=0;r<t;r++)n[r]=e;return n}return Ki=function(t,e,s,a){var u=[],l=[],h=[],c=[],f=!1,g=a||1e4,p=t.length,v=t[0].length,d=v>0,y=[];if(s)u=\"kmrand\"==s?r(t,e):\"kmpp\"==s?i(t,e):s;else for(var m={};u.length<e;){var _=Math.floor(Math.random()*p);m[_]||(m[_]=!0,u.push(t[_]))}do{o(e,0,y);for(var x=0;x<p;x++){for(var E=1/0,k=0,b=0;b<e;b++){(c=d?n(t[x],u[b]):Math.abs(t[x]-u[b]))<=E&&(E=c,k=b)}h[x]=k,y[k]++}for(var w=[],I=(l=[],0);I<e;I++)w[I]=d?o(v,0,w[I]):0,l[I]=u[I];if(d){for(var N=0;N<e;N++)u[N]=[];for(var S=0;S<p;S++)for(var M=w[h[S]],L=t[S],P=0;P<v;P++)M[P]+=L[P];f=!0;for(var C=0;C<e;C++){for(var T=u[C],O=w[C],R=l[C],A=y[C],D=0;D<v;D++)T[D]=O[D]/A||0;if(f)for(var F=0;F<v;F++)if(R[F]!=T[F]){f=!1;break}}}else{for(var q=0;q<p;q++){w[h[q]]+=t[q]}for(var V=0;V<e;V++)u[V]=w[V]/y[V]||0;f=!0;for(var G=0;G<e;G++)if(l[G]!=u[G]){f=!1;break}}f=f||--g<=0}while(!f);return{it:1e4-g,k:e,idxs:h,centroids:u}},Ki}(),ro=mn(no);var io=qe;function oo(t,e){var n=!1;return C(function(t){if(t.length<3)return[];t.sort(ao);var e,n,r,i,o,s,a=t.length-1,u=t[a].x,l=t[0].x,h=t[a].y,c=h,f=1e-12;for(;a--;)t[a].y<h&&(h=t[a].y),t[a].y>c&&(c=t[a].y);var g,p=l-u,v=c-h,d=p>v?p:v,y=.5*(l+u),m=.5*(c+h),_=[new so({__sentinel:!0,x:y-20*d,y:m-d},{__sentinel:!0,x:y,y:m+20*d},{__sentinel:!0,x:y+20*d,y:m-d})],x=[],E=[];a=t.length;for(;a--;){for(E.length=0,g=_.length;g--;)(p=t[a].x-_[g].x)>0&&p*p>_[g].r?(x.push(_[g]),_.splice(g,1)):p*p+(v=t[a].y-_[g].y)*v>_[g].r||(E.push(_[g].a,_[g].b,_[g].b,_[g].c,_[g].c,_[g].a),_.splice(g,1));for(uo(E),g=E.length;g;)n=E[--g],e=E[--g],r=t[a],i=n.x-e.x,o=n.y-e.y,s=2*(i*(r.y-n.y)-o*(r.x-n.x)),Math.abs(s)>f&&_.push(new so(e,n,r))}Array.prototype.push.apply(x,_),a=x.length;for(;a--;)(x[a].a.__sentinel||x[a].b.__sentinel||x[a].c.__sentinel)&&x.splice(a,1);return x}(t.features.map((function(t){var r={x:t.geometry.coordinates[0],y:t.geometry.coordinates[1]};return e?r.z=t.properties[e]:3===t.geometry.coordinates.length&&(n=!0,r.z=t.geometry.coordinates[2]),r}))).map((function(t){var e=[t.a.x,t.a.y],r=[t.b.x,t.b.y],i=[t.c.x,t.c.y],o={};return n?(e.push(t.a.z),r.push(t.b.z),i.push(t.c.z)):o={a:t.a.z,b:t.b.z,c:t.c.z},S([[e,r,i,e]],o)})))}var so=s((function t(e,n,r){i(this,t),this.a=e,this.b=n,this.c=r;var o,s,a=n.x-e.x,u=n.y-e.y,l=r.x-e.x,h=r.y-e.y,c=a*(e.x+n.x)+u*(e.y+n.y),f=l*(e.x+r.x)+h*(e.y+r.y),g=2*(a*(r.y-n.y)-u*(r.x-n.x));this.x=(h*c-u*f)/g,this.y=(a*f-l*c)/g,o=this.x-e.x,s=this.y-e.y,this.r=o*o+s*s}));function ao(t,e){return e.x-t.x}function uo(t){var e,n,r,i,o,s=t.length;t:for(;s;)for(n=t[--s],e=t[--s],r=s;r;)if(o=t[--r],e===(i=t[--r])&&n===o||e===o&&n===i){t.splice(s,2),t.splice(r,2),s-=2;continue t}}function lo(t){return t}function ho(t,e){var n=function(t){if(null==t)return lo;var e,n,r=t.scale[0],i=t.scale[1],o=t.translate[0],s=t.translate[1];return function(t,a){a||(e=n=0);var u=2,l=t.length,h=new Array(l);for(h[0]=(e+=t[0])*r+o,h[1]=(n+=t[1])*i+s;u<l;)h[u]=t[u],++u;return h}}(t.transform),r=t.arcs;function i(t,e){e.length&&e.pop();for(var i=r[t<0?~t:t],o=0,s=i.length;o<s;++o)e.push(n(i[o],o));t<0&&function(t,e){for(var n,r=t.length,i=r-e;i<--r;)n=t[i],t[i++]=t[r],t[r]=n}(e,s)}function o(t){return n(t)}function s(t){for(var e=[],n=0,r=t.length;n<r;++n)i(t[n],e);return e.length<2&&e.push(e[0]),e}function a(t){for(var e=s(t);e.length<4;)e.push(e[0]);return e}function u(t){return t.map(a)}return function t(e){var n,r=e.type;switch(r){case\"GeometryCollection\":return{type:r,geometries:e.geometries.map(t)};case\"Point\":n=o(e.coordinates);break;case\"MultiPoint\":n=e.coordinates.map(o);break;case\"LineString\":n=s(e.arcs);break;case\"MultiLineString\":n=e.arcs.map(s);break;case\"Polygon\":n=u(e.arcs);break;case\"MultiPolygon\":n=e.arcs.map(u);break;default:return null}return{type:r,coordinates:n}}(e)}function co(t,e){var n={},r={},i={},o=[],s=-1;function a(t,e){for(var r in t){var i=t[r];delete e[i.start],delete i.start,delete i.end,i.forEach((function(t){n[t<0?~t:t]=1})),o.push(i)}}return e.forEach((function(n,r){var i,o=t.arcs[n<0?~n:n];o.length<3&&!o[1][0]&&!o[1][1]&&(i=e[++s],e[s]=n,e[r]=i)})),e.forEach((function(e){var n,o,s=function(e){var n,r=t.arcs[e<0?~e:e],i=r[0];t.transform?(n=[0,0],r.forEach((function(t){n[0]+=t[0],n[1]+=t[1]}))):n=r[r.length-1];return e<0?[n,i]:[i,n]}(e),a=s[0],u=s[1];if(n=i[a])if(delete i[n.end],n.push(e),n.end=u,o=r[u]){delete r[o.start];var l=o===n?n:n.concat(o);r[l.start=n.start]=i[l.end=o.end]=l}else r[n.start]=i[n.end]=n;else if(n=r[u])if(delete r[n.start],n.unshift(e),n.start=a,o=i[a]){delete i[o.end];var h=o===n?n:o.concat(n);r[h.start=o.start]=i[h.end=n.end]=h}else r[n.start]=i[n.end]=n;else r[(n=[e]).start=a]=i[n.end=u]=n})),a(i,r),a(r,i),e.forEach((function(t){n[t<0?~t:t]||o.push([t])})),o}function fo(t){return ho(t,go.apply(this,arguments))}function go(t,e){var n={},r=[],i=[];function o(t){t.forEach((function(e){e.forEach((function(e){(n[e=e<0?~e:e]||(n[e]=[])).push(t)}))})),r.push(t)}function s(e){return function(t){for(var e,n=-1,r=t.length,i=t[r-1],o=0;++n<r;)e=i,i=t[n],o+=e[0]*i[1]-e[1]*i[0];return Math.abs(o)}(ho(t,{type:\"Polygon\",arcs:[e]}).coordinates[0])}return e.forEach((function t(e){switch(e.type){case\"GeometryCollection\":e.geometries.forEach(t);break;case\"Polygon\":o(e.arcs);break;case\"MultiPolygon\":e.arcs.forEach(o)}})),r.forEach((function(t){if(!t._){var e=[],r=[t];for(t._=1,i.push(e);t=r.pop();)e.push(t),t.forEach((function(t){t.forEach((function(t){n[t<0?~t:t].forEach((function(t){t._||(t._=1,r.push(t))}))}))}))}})),r.forEach((function(t){delete t._})),{type:\"MultiPolygon\",arcs:i.map((function(e){var r,i=[];if(e.forEach((function(t){t.forEach((function(t){t.forEach((function(t){n[t<0?~t:t].length<2&&i.push(t)}))}))})),(r=(i=co(t,i)).length)>1)for(var o,a,u=1,l=s(i[0]);u<r;++u)(o=s(i[u]))>l&&(a=i[0],i[0]=i[u],i[u]=a,l=o);return i})).filter((function(t){return t.length>0}))}}var po=Object.prototype.hasOwnProperty;function vo(t,e,n,r,i,o){3===arguments.length&&(r=o=Array,i=null);for(var s=new r(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),a=new o(t),u=t-1,l=0;l<t;++l)s[l]=i;return{set:function(r,o){for(var l=e(r)&u,h=s[l],c=0;h!=i;){if(n(h,r))return a[l]=o;if(++c>=t)throw new Error(\"full hashmap\");h=s[l=l+1&u]}return s[l]=r,a[l]=o,o},maybeSet:function(r,o){for(var l=e(r)&u,h=s[l],c=0;h!=i;){if(n(h,r))return a[l];if(++c>=t)throw new Error(\"full hashmap\");h=s[l=l+1&u]}return s[l]=r,a[l]=o,o},get:function(r,o){for(var l=e(r)&u,h=s[l],c=0;h!=i;){if(n(h,r))return a[l];if(++c>=t)break;h=s[l=l+1&u]}return o},keys:function(){for(var t=[],e=0,n=s.length;e<n;++e){var r=s[e];r!=i&&t.push(r)}return t}}}function yo(t,e){return t[0]===e[0]&&t[1]===e[1]}var mo=new ArrayBuffer(16),_o=new Float64Array(mo),xo=new Uint32Array(mo);function Eo(t){_o[0]=t[0],_o[1]=t[1];var e=xo[0]^xo[1];return 2147483647&(e=e<<5^e>>7^xo[2]^xo[3])}function ko(t){var e,n,r,i,o=t.coordinates,s=t.lines,a=t.rings,u=function(){for(var t=vo(1.4*o.length,E,k,Int32Array,-1,Int32Array),e=new Int32Array(o.length),n=0,r=o.length;n<r;++n)e[n]=t.maybeSet(n,n);return e}(),l=new Int32Array(o.length),h=new Int32Array(o.length),c=new Int32Array(o.length),f=new Int8Array(o.length),g=0;for(e=0,n=o.length;e<n;++e)l[e]=h[e]=c[e]=-1;for(e=0,n=s.length;e<n;++e){var p=s[e],v=p[0],d=p[1];for(r=u[v],i=u[++v],++g,f[r]=1;++v<=d;)x(e,r,r=i,i=u[v]);++g,f[i]=1}for(e=0,n=o.length;e<n;++e)l[e]=-1;for(e=0,n=a.length;e<n;++e){var y=a[e],m=y[0]+1,_=y[1];for(x(e,u[_-1],r=u[m-1],i=u[m]);++m<=_;)x(e,r,r=i,i=u[m])}function x(t,e,n,r){if(l[n]!==t){l[n]=t;var i=h[n];if(i>=0){var o=c[n];i===e&&o===r||i===r&&o===e||(++g,f[n]=1)}else h[n]=e,c[n]=r}}function E(t){return Eo(o[t])}function k(t,e){return yo(o[t],o[e])}l=h=c=null;var b,w=function(t,e,n,r,i){3===arguments.length&&(r=Array,i=null);for(var o=new r(t=1<<Math.max(4,Math.ceil(Math.log(t)/Math.LN2))),s=t-1,a=0;a<t;++a)o[a]=i;return{add:function(r){for(var a=e(r)&s,u=o[a],l=0;u!=i;){if(n(u,r))return!0;if(++l>=t)throw new Error(\"full hashset\");u=o[a=a+1&s]}return o[a]=r,!0},has:function(r){for(var a=e(r)&s,u=o[a],l=0;u!=i;){if(n(u,r))return!0;if(++l>=t)break;u=o[a=a+1&s]}return!1},values:function(){for(var t=[],e=0,n=o.length;e<n;++e){var r=o[e];r!=i&&t.push(r)}return t}}}(1.4*g,Eo,yo);for(e=0,n=o.length;e<n;++e)f[b=u[e]]&&w.add(o[b]);return w}function bo(t,e,n,r){wo(t,e,n),wo(t,e,e+r),wo(t,e+r,n)}function wo(t,e,n){for(var r,i=e+(n---e>>1);e<i;++e,--n)r=t[e],t[e]=t[n],t[n]=r}function Io(t){var e,n,r={};for(e in t)r[e]=null==(n=t[e])?{type:null}:(\"FeatureCollection\"===n.type?No:\"Feature\"===n.type?So:Mo)(n);return r}function No(t){var e={type:\"GeometryCollection\",geometries:t.features.map(So)};return null!=t.bbox&&(e.bbox=t.bbox),e}function So(t){var e,n=Mo(t.geometry);for(e in null!=t.id&&(n.id=t.id),null!=t.bbox&&(n.bbox=t.bbox),t.properties){n.properties=t.properties;break}return n}function Mo(t){if(null==t)return{type:null};var e=\"GeometryCollection\"===t.type?{type:\"GeometryCollection\",geometries:t.geometries.map(Mo)}:\"Point\"===t.type||\"MultiPoint\"===t.type?{type:t.type,coordinates:t.coordinates}:{type:t.type,arcs:t.coordinates};return null!=t.bbox&&(e.bbox=t.bbox),e}function Lo(t,e){var n=function(t){var e=1/0,n=1/0,r=-1/0,i=-1/0;function o(t){null!=t&&po.call(s,t.type)&&s[t.type](t)}var s={GeometryCollection:function(t){t.geometries.forEach(o)},Point:function(t){a(t.coordinates)},MultiPoint:function(t){t.coordinates.forEach(a)},LineString:function(t){u(t.arcs)},MultiLineString:function(t){t.arcs.forEach(u)},Polygon:function(t){t.arcs.forEach(u)},MultiPolygon:function(t){t.arcs.forEach(l)}};function a(t){var o=t[0],s=t[1];o<e&&(e=o),o>r&&(r=o),s<n&&(n=s),s>i&&(i=s)}function u(t){t.forEach(a)}function l(t){t.forEach(u)}for(var h in t)o(t[h]);return r>=e&&i>=n?[e,n,r,i]:void 0}(t=Io(t)),r=function(t){var e,n,r,i,o=t.coordinates,s=t.lines,a=t.rings,u=s.length+a.length;for(delete t.lines,delete t.rings,r=0,i=s.length;r<i;++r)for(e=s[r];e=e.next;)++u;for(r=0,i=a.length;r<i;++r)for(n=a[r];n=n.next;)++u;var l=vo(2*u*1.4,Eo,yo),h=t.arcs=[];for(r=0,i=s.length;r<i;++r){e=s[r];do{c(e)}while(e=e.next)}for(r=0,i=a.length;r<i;++r)if((n=a[r]).next)do{c(n)}while(n=n.next);else f(n);function c(t){var e,n,r,i,s,a,u,c;if(r=l.get(e=o[t[0]]))for(u=0,c=r.length;u<c;++u)if(g(i=r[u],t))return t[0]=i[0],void(t[1]=i[1]);if(s=l.get(n=o[t[1]]))for(u=0,c=s.length;u<c;++u)if(p(a=s[u],t))return t[1]=a[0],void(t[0]=a[1]);r?r.push(t):l.set(e,[t]),s?s.push(t):l.set(n,[t]),h.push(t)}function f(t){var e,n,r,i,s;if(n=l.get(o[t[0]]))for(i=0,s=n.length;i<s;++i){if(v(r=n[i],t))return t[0]=r[0],void(t[1]=r[1]);if(d(r,t))return t[0]=r[1],void(t[1]=r[0])}if(n=l.get(e=o[t[0]+y(t)]))for(i=0,s=n.length;i<s;++i){if(v(r=n[i],t))return t[0]=r[0],void(t[1]=r[1]);if(d(r,t))return t[0]=r[1],void(t[1]=r[0])}n?n.push(t):l.set(e,[t]),h.push(t)}function g(t,e){var n=t[0],r=e[0],i=t[1];if(n-i!=r-e[1])return!1;for(;n<=i;++n,++r)if(!yo(o[n],o[r]))return!1;return!0}function p(t,e){var n=t[0],r=e[0],i=t[1],s=e[1];if(n-i!=r-s)return!1;for(;n<=i;++n,--s)if(!yo(o[n],o[s]))return!1;return!0}function v(t,e){var n=t[0],r=e[0],i=t[1]-n;if(i!==e[1]-r)return!1;for(var s=y(t),a=y(e),u=0;u<i;++u)if(!yo(o[n+(u+s)%i],o[r+(u+a)%i]))return!1;return!0}function d(t,e){var n=t[0],r=e[0],i=t[1],s=e[1],a=i-n;if(a!==s-r)return!1;for(var u=y(t),l=a-y(e),h=0;h<a;++h)if(!yo(o[n+(h+u)%a],o[s-(h+l)%a]))return!1;return!0}function y(t){for(var e=t[0],n=t[1],r=e,i=r,s=o[r];++r<n;){var a=o[r];(a[0]<s[0]||a[0]===s[0]&&a[1]<s[1])&&(i=r,s=a)}return i-e}return t}(function(t){var e,n,r,i=ko(t),o=t.coordinates,s=t.lines,a=t.rings;for(n=0,r=s.length;n<r;++n)for(var u=s[n],l=u[0],h=u[1];++l<h;)i.has(o[l])&&(e={0:l,1:u[1]},u[1]=l,u=u.next=e);for(n=0,r=a.length;n<r;++n)for(var c=a[n],f=c[0],g=f,p=c[1],v=i.has(o[f]);++g<p;)i.has(o[g])&&(v?(e={0:g,1:c[1]},c[1]=g,c=c.next=e):(bo(o,f,p,p-g),o[p]=o[f],v=!0,g=f));return t}(function(t){var e=-1,n=[],r=[],i=[];function o(t){t&&po.call(s,t.type)&&s[t.type](t)}var s={GeometryCollection:function(t){t.geometries.forEach(o)},LineString:function(t){t.arcs=a(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(a)},Polygon:function(t){t.arcs=t.arcs.map(u)},MultiPolygon:function(t){t.arcs=t.arcs.map(l)}};function a(t){for(var r=0,o=t.length;r<o;++r)i[++e]=t[r];var s={0:e-o+1,1:e};return n.push(s),s}function u(t){for(var n=0,o=t.length;n<o;++n)i[++e]=t[n];var s={0:e-o+1,1:e};return r.push(s),s}function l(t){return t.map(u)}for(var h in t)o(t[h]);return{type:\"Topology\",coordinates:i,lines:n,rings:r,objects:t}}(t))),i=r.coordinates,o=vo(1.4*r.arcs.length,Po,Co);function s(t){t&&po.call(a,t.type)&&a[t.type](t)}t=r.objects,r.bbox=n,r.arcs=r.arcs.map((function(t,e){return o.set(t,e),i.slice(t[0],t[1]+1)})),delete r.coordinates,i=null;var a={GeometryCollection:function(t){t.geometries.forEach(s)},LineString:function(t){t.arcs=u(t.arcs)},MultiLineString:function(t){t.arcs=t.arcs.map(u)},Polygon:function(t){t.arcs=t.arcs.map(u)},MultiPolygon:function(t){t.arcs=t.arcs.map(l)}};function u(t){var e=[];do{var n=o.get(t);e.push(t[0]<t[1]?n:~n)}while(t=t.next);return e}function l(t){return t.map(u)}for(var h in t)s(t[h]);return r}function Po(t){var e,n=t[0],r=t[1];return r<n&&(e=n,n=r,r=e),n+31*r}function Co(t,e){var n,r=t[0],i=t[1],o=e[0],s=e[1];return i<r&&(n=r,r=i,i=n),s<o&&(n=o,o=s,s=n),r===o&&i===s}function To(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Z(e=e||{}))throw new Error(\"options is invalid\");var n=e.mutate;if(\"FeatureCollection\"!==it(t))throw new Error(\"geojson must be a FeatureCollection\");if(!t.features.length)throw new Error(\"geojson is empty\");!1!==n&&void 0!==n||(t=Ai(t));var r=[],i=It(t,(function(t,e){var n=function(t,e){var n,r=t.geometry.coordinates,i=e.geometry.coordinates,o=Oo(r[0]),s=Oo(r[r.length-1]),a=Oo(i[0]),u=Oo(i[i.length-1]);if(o===u)n=i.concat(r.slice(1));else if(a===s)n=r.concat(i.slice(1));else if(o===a)n=r.slice(1).reverse().concat(i);else{if(s!==u)return null;n=r.concat(i.reverse().slice(1))}return L(n)}(t,e);return n||(r.push(t),e)}));return i&&r.push(i),r.length?1===r.length?r[0]:T(r.map((function(t){return t.coordinates}))):null}function Oo(t){return t[0].toString()+\",\"+t[1].toString()}function Ro(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Z(e=e||{}))throw new Error(\"options is invalid\");var n=e.mutate;if(\"FeatureCollection\"!==it(t))throw new Error(\"geojson must be a FeatureCollection\");if(!t.features.length)throw new Error(\"geojson is empty\");!1!==n&&void 0!==n||(t=Ai(t));var r=function(t){var e={};xt(t,(function(t){e[t.geometry.type]=!0}));var n=Object.keys(e);if(1===n.length)return n[0];return null}(t);if(!r)throw new Error(\"geojson must be homogenous\");var i=t;switch(r){case\"LineString\":return To(i,e);case\"Polygon\":return function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(\"FeatureCollection\"!==it(t))throw new Error(\"geojson must be a FeatureCollection\");if(!t.features.length)throw new Error(\"geojson is empty\");!1!==e.mutate&&void 0!==e.mutate||(t=Ai(t));var n=[];xt(t,(function(t){n.push(t.geometry)}));var r=Lo({geoms:A(n).geometry});return fo(r,r.objects.geoms.geometries)}(i,e);default:throw new Error(r+\" is not supported\")}}var Ao=/^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,Do=Math.ceil,Fo=Math.floor,qo=\"[BigNumber Error] \",Vo=qo+\"Number primitive has more than 15 significant digits: \",Go=1e14,Bo=14,Yo=9007199254740991,zo=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],jo=1e7,Xo=1e9;function Uo(t){var e=0|t;return t>0||t===e?e:e-1}function Zo(t){for(var e,n,r=1,i=t.length,o=t[0]+\"\";r<i;){for(e=t[r++]+\"\",n=Bo-e.length;n--;e=\"0\"+e);o+=e}for(i=o.length;48===o.charCodeAt(--i););return o.slice(0,i+1||1)}function Ho(t,e){var n,r,i=t.c,o=e.c,s=t.s,a=e.s,u=t.e,l=e.e;if(!s||!a)return null;if(n=i&&!i[0],r=o&&!o[0],n||r)return n?r?0:-a:s;if(s!=a)return s;if(n=s<0,r=u==l,!i||!o)return r?0:!i^n?1:-1;if(!r)return u>l^n?1:-1;for(a=(u=i.length)<(l=o.length)?u:l,s=0;s<a;s++)if(i[s]!=o[s])return i[s]>o[s]^n?1:-1;return u==l?0:u>l^n?1:-1}function Wo(t,e,n,r){if(t<e||t>n||t!==Fo(t))throw Error(qo+(r||\"Argument\")+(\"number\"==typeof t?t<e||t>n?\" out of range: \":\" not an integer: \":\" not a primitive number: \")+String(t))}function Jo(t){var e=t.c.length-1;return Uo(t.e/Bo)==e&&t.c[e]%2!=0}function Ko(t,e){return(t.length>1?t.charAt(0)+\".\"+t.slice(1):t)+(e<0?\"e\":\"e+\")+e}function Qo(t,e,n){var r,i;if(e<0){for(i=n+\".\";++e;i+=n);t=i+t}else if(++e>(r=t.length)){for(i=n,e-=r;--e;i+=n);t+=i}else e<r&&(t=t.slice(0,e)+\".\"+t.slice(e));return t}var $o=function t(e){var n,r,i,o,s,a,u,l,h,c,f=S.prototype={constructor:S,toString:null,valueOf:null},g=new S(1),p=20,v=4,d=-7,y=21,_=-1e7,x=1e7,E=!1,k=1,b=0,w={prefix:\"\",groupSize:3,secondaryGroupSize:0,groupSeparator:\",\",decimalSeparator:\".\",fractionGroupSize:0,fractionGroupSeparator:\" \",suffix:\"\"},I=\"0123456789abcdefghijklmnopqrstuvwxyz\",N=!0;function S(t,e){var n,o,s,a,u,l,h,c,f=this;if(!(f instanceof S))return new S(t,e);if(null==e){if(t&&!0===t._isBigNumber)return f.s=t.s,void(!t.c||t.e>x?f.c=f.e=null:t.e<_?f.c=[f.e=0]:(f.e=t.e,f.c=t.c.slice()));if((l=\"number\"==typeof t)&&0*t==0){if(f.s=1/t<0?(t=-t,-1):1,t===~~t){for(a=0,u=t;u>=10;u/=10,a++);return void(a>x?f.c=f.e=null:(f.e=a,f.c=[t]))}c=String(t)}else{if(!Ao.test(c=String(t)))return i(f,c,l);f.s=45==c.charCodeAt(0)?(c=c.slice(1),-1):1}(a=c.indexOf(\".\"))>-1&&(c=c.replace(\".\",\"\")),(u=c.search(/e/i))>0?(a<0&&(a=u),a+=+c.slice(u+1),c=c.substring(0,u)):a<0&&(a=c.length)}else{if(Wo(e,2,I.length,\"Base\"),10==e&&N)return C(f=new S(t),p+f.e+1,v);if(c=String(t),l=\"number\"==typeof t){if(0*t!=0)return i(f,c,l,e);if(f.s=1/t<0?(c=c.slice(1),-1):1,S.DEBUG&&c.replace(/^0\\.0*|\\./,\"\").length>15)throw Error(Vo+t)}else f.s=45===c.charCodeAt(0)?(c=c.slice(1),-1):1;for(n=I.slice(0,e),a=u=0,h=c.length;u<h;u++)if(n.indexOf(o=c.charAt(u))<0){if(\".\"==o){if(u>a){a=h;continue}}else if(!s&&(c==c.toUpperCase()&&(c=c.toLowerCase())||c==c.toLowerCase()&&(c=c.toUpperCase()))){s=!0,u=-1,a=0;continue}return i(f,String(t),l,e)}l=!1,(a=(c=r(c,e,10,f.s)).indexOf(\".\"))>-1?c=c.replace(\".\",\"\"):a=c.length}for(u=0;48===c.charCodeAt(u);u++);for(h=c.length;48===c.charCodeAt(--h););if(c=c.slice(u,++h)){if(h-=u,l&&S.DEBUG&&h>15&&(t>Yo||t!==Fo(t)))throw Error(Vo+f.s*t);if((a=a-u-1)>x)f.c=f.e=null;else if(a<_)f.c=[f.e=0];else{if(f.e=a,f.c=[],u=(a+1)%Bo,a<0&&(u+=Bo),u<h){for(u&&f.c.push(+c.slice(0,u)),h-=Bo;u<h;)f.c.push(+c.slice(u,u+=Bo));u=Bo-(c=c.slice(u)).length}else u-=h;for(;u--;c+=\"0\");f.c.push(+c)}}else f.c=[f.e=0]}function M(t,e,n,r){var i,o,s,a,u;if(null==n?n=v:Wo(n,0,8),!t.c)return t.toString();if(i=t.c[0],s=t.e,null==e)u=Zo(t.c),u=1==r||2==r&&(s<=d||s>=y)?Ko(u,s):Qo(u,s,\"0\");else if(o=(t=C(new S(t),e,n)).e,a=(u=Zo(t.c)).length,1==r||2==r&&(e<=o||o<=d)){for(;a<e;u+=\"0\",a++);u=Ko(u,o)}else if(e-=s,u=Qo(u,o,\"0\"),o+1>a){if(--e>0)for(u+=\".\";e--;u+=\"0\");}else if((e+=o-a)>0)for(o+1==a&&(u+=\".\");e--;u+=\"0\");return t.s<0&&i?\"-\"+u:u}function L(t,e){for(var n,r,i=1,o=new S(t[0]);i<t.length;i++)(!(r=new S(t[i])).s||(n=Ho(o,r))===e||0===n&&o.s===e)&&(o=r);return o}function P(t,e,n){for(var r=1,i=e.length;!e[--i];e.pop());for(i=e[0];i>=10;i/=10,r++);return(n=r+n*Bo-1)>x?t.c=t.e=null:n<_?t.c=[t.e=0]:(t.e=n,t.c=e),t}function C(t,e,n,r){var i,o,s,a,u,l,h,c=t.c,f=zo;if(c){t:{for(i=1,a=c[0];a>=10;a/=10,i++);if((o=e-i)<0)o+=Bo,s=e,u=c[l=0],h=Fo(u/f[i-s-1]%10);else if((l=Do((o+1)/Bo))>=c.length){if(!r)break t;for(;c.length<=l;c.push(0));u=h=0,i=1,s=(o%=Bo)-Bo+1}else{for(u=a=c[l],i=1;a>=10;a/=10,i++);h=(s=(o%=Bo)-Bo+i)<0?0:Fo(u/f[i-s-1]%10)}if(r=r||e<0||null!=c[l+1]||(s<0?u:u%f[i-s-1]),r=n<4?(h||r)&&(0==n||n==(t.s<0?3:2)):h>5||5==h&&(4==n||r||6==n&&(o>0?s>0?u/f[i-s]:0:c[l-1])%10&1||n==(t.s<0?8:7)),e<1||!c[0])return c.length=0,r?(e-=t.e+1,c[0]=f[(Bo-e%Bo)%Bo],t.e=-e||0):c[0]=t.e=0,t;if(0==o?(c.length=l,a=1,l--):(c.length=l+1,a=f[Bo-o],c[l]=s>0?Fo(u/f[i-s]%f[s])*a:0),r)for(;;){if(0==l){for(o=1,s=c[0];s>=10;s/=10,o++);for(s=c[0]+=a,a=1;s>=10;s/=10,a++);o!=a&&(t.e++,c[0]==Go&&(c[0]=1));break}if(c[l]+=a,c[l]!=Go)break;c[l--]=0,a=1}for(o=c.length;0===c[--o];c.pop());}t.e>x?t.c=t.e=null:t.e<_&&(t.c=[t.e=0])}return t}function T(t){var e,n=t.e;return null===n?t.toString():(e=Zo(t.c),e=n<=d||n>=y?Ko(e,n):Qo(e,n,\"0\"),t.s<0?\"-\"+e:e)}return S.clone=t,S.ROUND_UP=0,S.ROUND_DOWN=1,S.ROUND_CEIL=2,S.ROUND_FLOOR=3,S.ROUND_HALF_UP=4,S.ROUND_HALF_DOWN=5,S.ROUND_HALF_EVEN=6,S.ROUND_HALF_CEIL=7,S.ROUND_HALF_FLOOR=8,S.EUCLID=9,S.config=S.set=function(t){var e,n;if(null!=t){if(\"object\"!=m(t))throw Error(qo+\"Object expected: \"+t);if(t.hasOwnProperty(e=\"DECIMAL_PLACES\")&&(Wo(n=t[e],0,Xo,e),p=n),t.hasOwnProperty(e=\"ROUNDING_MODE\")&&(Wo(n=t[e],0,8,e),v=n),t.hasOwnProperty(e=\"EXPONENTIAL_AT\")&&((n=t[e])&&n.pop?(Wo(n[0],-Xo,0,e),Wo(n[1],0,Xo,e),d=n[0],y=n[1]):(Wo(n,-Xo,Xo,e),d=-(y=n<0?-n:n))),t.hasOwnProperty(e=\"RANGE\"))if((n=t[e])&&n.pop)Wo(n[0],-Xo,-1,e),Wo(n[1],1,Xo,e),_=n[0],x=n[1];else{if(Wo(n,-Xo,Xo,e),!n)throw Error(qo+e+\" cannot be zero: \"+n);_=-(x=n<0?-n:n)}if(t.hasOwnProperty(e=\"CRYPTO\")){if((n=t[e])!==!!n)throw Error(qo+e+\" not true or false: \"+n);if(n){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw E=!n,Error(qo+\"crypto unavailable\");E=n}else E=n}if(t.hasOwnProperty(e=\"MODULO_MODE\")&&(Wo(n=t[e],0,9,e),k=n),t.hasOwnProperty(e=\"POW_PRECISION\")&&(Wo(n=t[e],0,Xo,e),b=n),t.hasOwnProperty(e=\"FORMAT\")){if(\"object\"!=m(n=t[e]))throw Error(qo+e+\" not an object: \"+n);w=n}if(t.hasOwnProperty(e=\"ALPHABET\")){if(\"string\"!=typeof(n=t[e])||/^.?$|[+\\-.\\s]|(.).*\\1/.test(n))throw Error(qo+e+\" invalid: \"+n);N=\"0123456789\"==n.slice(0,10),I=n}}return{DECIMAL_PLACES:p,ROUNDING_MODE:v,EXPONENTIAL_AT:[d,y],RANGE:[_,x],CRYPTO:E,MODULO_MODE:k,POW_PRECISION:b,FORMAT:w,ALPHABET:I}},S.isBigNumber=function(t){if(!t||!0!==t._isBigNumber)return!1;if(!S.DEBUG)return!0;var e,n,r=t.c,i=t.e,o=t.s;t:if(\"[object Array]\"=={}.toString.call(r)){if((1===o||-1===o)&&i>=-Xo&&i<=Xo&&i===Fo(i)){if(0===r[0]){if(0===i&&1===r.length)return!0;break t}if((e=(i+1)%Bo)<1&&(e+=Bo),String(r[0]).length==e){for(e=0;e<r.length;e++)if((n=r[e])<0||n>=Go||n!==Fo(n))break t;if(0!==n)return!0}}}else if(null===r&&null===i&&(null===o||1===o||-1===o))return!0;throw Error(qo+\"Invalid BigNumber: \"+t)},S.maximum=S.max=function(){return L(arguments,-1)},S.minimum=S.min=function(){return L(arguments,1)},S.random=(o=9007199254740992,s=Math.random()*o&2097151?function(){return Fo(Math.random()*o)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(t){var e,n,r,i,o,a=0,u=[],l=new S(g);if(null==t?t=p:Wo(t,0,Xo),i=Do(t/Bo),E)if(crypto.getRandomValues){for(e=crypto.getRandomValues(new Uint32Array(i*=2));a<i;)(o=131072*e[a]+(e[a+1]>>>11))>=9e15?(n=crypto.getRandomValues(new Uint32Array(2)),e[a]=n[0],e[a+1]=n[1]):(u.push(o%1e14),a+=2);a=i/2}else{if(!crypto.randomBytes)throw E=!1,Error(qo+\"crypto unavailable\");for(e=crypto.randomBytes(i*=7);a<i;)(o=281474976710656*(31&e[a])+1099511627776*e[a+1]+4294967296*e[a+2]+16777216*e[a+3]+(e[a+4]<<16)+(e[a+5]<<8)+e[a+6])>=9e15?crypto.randomBytes(7).copy(e,a):(u.push(o%1e14),a+=7);a=i/7}if(!E)for(;a<i;)(o=s())<9e15&&(u[a++]=o%1e14);for(i=u[--a],t%=Bo,i&&t&&(o=zo[Bo-t],u[a]=Fo(i/o)*o);0===u[a];u.pop(),a--);if(a<0)u=[r=0];else{for(r=-1;0===u[0];u.splice(0,1),r-=Bo);for(a=1,o=u[0];o>=10;o/=10,a++);a<Bo&&(r-=Bo-a)}return l.e=r,l.c=u,l}),S.sum=function(){for(var t=1,e=arguments,n=new S(e[0]);t<e.length;)n=n.plus(e[t++]);return n},r=function(){var t=\"0123456789\";function e(t,e,n,r){for(var i,o,s=[0],a=0,u=t.length;a<u;){for(o=s.length;o--;s[o]*=e);for(s[0]+=r.indexOf(t.charAt(a++)),i=0;i<s.length;i++)s[i]>n-1&&(null==s[i+1]&&(s[i+1]=0),s[i+1]+=s[i]/n|0,s[i]%=n)}return s.reverse()}return function(r,i,o,s,a){var u,l,h,c,f,g,d,y,m=r.indexOf(\".\"),_=p,x=v;for(m>=0&&(c=b,b=0,r=r.replace(\".\",\"\"),g=(y=new S(i)).pow(r.length-m),b=c,y.c=e(Qo(Zo(g.c),g.e,\"0\"),10,o,t),y.e=y.c.length),h=c=(d=e(r,i,o,a?(u=I,t):(u=t,I))).length;0==d[--c];d.pop());if(!d[0])return u.charAt(0);if(m<0?--h:(g.c=d,g.e=h,g.s=s,d=(g=n(g,y,_,x,o)).c,f=g.r,h=g.e),m=d[l=h+_+1],c=o/2,f=f||l<0||null!=d[l+1],f=x<4?(null!=m||f)&&(0==x||x==(g.s<0?3:2)):m>c||m==c&&(4==x||f||6==x&&1&d[l-1]||x==(g.s<0?8:7)),l<1||!d[0])r=f?Qo(u.charAt(1),-_,u.charAt(0)):u.charAt(0);else{if(d.length=l,f)for(--o;++d[--l]>o;)d[l]=0,l||(++h,d=[1].concat(d));for(c=d.length;!d[--c];);for(m=0,r=\"\";m<=c;r+=u.charAt(d[m++]));r=Qo(r,h,u.charAt(0))}return r}}(),n=function(){function t(t,e,n){var r,i,o,s,a=0,u=t.length,l=e%jo,h=e/jo|0;for(t=t.slice();u--;)a=((i=l*(o=t[u]%jo)+(r=h*o+(s=t[u]/jo|0)*l)%jo*jo+a)/n|0)+(r/jo|0)+h*s,t[u]=i%n;return a&&(t=[a].concat(t)),t}function e(t,e,n,r){var i,o;if(n!=r)o=n>r?1:-1;else for(i=o=0;i<n;i++)if(t[i]!=e[i]){o=t[i]>e[i]?1:-1;break}return o}function n(t,e,n,r){for(var i=0;n--;)t[n]-=i,i=t[n]<e[n]?1:0,t[n]=i*r+t[n]-e[n];for(;!t[0]&&t.length>1;t.splice(0,1));}return function(r,i,o,s,a){var u,l,h,c,f,g,p,v,d,y,m,_,x,E,k,b,w,I=r.s==i.s?1:-1,N=r.c,M=i.c;if(!(N&&N[0]&&M&&M[0]))return new S(r.s&&i.s&&(N?!M||N[0]!=M[0]:M)?N&&0==N[0]||!M?0*I:I/0:NaN);for(d=(v=new S(I)).c=[],I=o+(l=r.e-i.e)+1,a||(a=Go,l=Uo(r.e/Bo)-Uo(i.e/Bo),I=I/Bo|0),h=0;M[h]==(N[h]||0);h++);if(M[h]>(N[h]||0)&&l--,I<0)d.push(1),c=!0;else{for(E=N.length,b=M.length,h=0,I+=2,(f=Fo(a/(M[0]+1)))>1&&(M=t(M,f,a),N=t(N,f,a),b=M.length,E=N.length),x=b,m=(y=N.slice(0,b)).length;m<b;y[m++]=0);w=M.slice(),w=[0].concat(w),k=M[0],M[1]>=a/2&&k++;do{if(f=0,(u=e(M,y,b,m))<0){if(_=y[0],b!=m&&(_=_*a+(y[1]||0)),(f=Fo(_/k))>1)for(f>=a&&(f=a-1),p=(g=t(M,f,a)).length,m=y.length;1==e(g,y,p,m);)f--,n(g,b<p?w:M,p,a),p=g.length,u=1;else 0==f&&(u=f=1),p=(g=M.slice()).length;if(p<m&&(g=[0].concat(g)),n(y,g,m,a),m=y.length,-1==u)for(;e(M,y,b,m)<1;)f++,n(y,b<m?w:M,m,a),m=y.length}else 0===u&&(f++,y=[0]);d[h++]=f,y[0]?y[m++]=N[x]||0:(y=[N[x]],m=1)}while((x++<E||null!=y[0])&&I--);c=null!=y[0],d[0]||d.splice(0,1)}if(a==Go){for(h=1,I=d[0];I>=10;I/=10,h++);C(v,o+(v.e=h+l*Bo-1)+1,s,c)}else v.e=l,v.r=+c;return v}}(),a=/^(-?)0([xbo])(?=\\w[\\w.]*$)/i,u=/^([^.]+)\\.$/,l=/^\\.([^.]+)$/,h=/^-?(Infinity|NaN)$/,c=/^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g,i=function(t,e,n,r){var i,o=n?e:e.replace(c,\"\");if(h.test(o))t.s=isNaN(o)?null:o<0?-1:1;else{if(!n&&(o=o.replace(a,(function(t,e,n){return i=\"x\"==(n=n.toLowerCase())?16:\"b\"==n?2:8,r&&r!=i?t:e})),r&&(i=r,o=o.replace(u,\"$1\").replace(l,\"0.$1\")),e!=o))return new S(o,i);if(S.DEBUG)throw Error(qo+\"Not a\"+(r?\" base \"+r:\"\")+\" number: \"+e);t.s=null}t.c=t.e=null},f.absoluteValue=f.abs=function(){var t=new S(this);return t.s<0&&(t.s=1),t},f.comparedTo=function(t,e){return Ho(this,new S(t,e))},f.decimalPlaces=f.dp=function(t,e){var n,r,i,o=this;if(null!=t)return Wo(t,0,Xo),null==e?e=v:Wo(e,0,8),C(new S(o),t+o.e+1,e);if(!(n=o.c))return null;if(r=((i=n.length-1)-Uo(this.e/Bo))*Bo,i=n[i])for(;i%10==0;i/=10,r--);return r<0&&(r=0),r},f.dividedBy=f.div=function(t,e){return n(this,new S(t,e),p,v)},f.dividedToIntegerBy=f.idiv=function(t,e){return n(this,new S(t,e),0,1)},f.exponentiatedBy=f.pow=function(t,e){var n,r,i,o,s,a,u,l,h=this;if((t=new S(t)).c&&!t.isInteger())throw Error(qo+\"Exponent not an integer: \"+T(t));if(null!=e&&(e=new S(e)),s=t.e>14,!h.c||!h.c[0]||1==h.c[0]&&!h.e&&1==h.c.length||!t.c||!t.c[0])return l=new S(Math.pow(+T(h),s?t.s*(2-Jo(t)):+T(t))),e?l.mod(e):l;if(a=t.s<0,e){if(e.c?!e.c[0]:!e.s)return new S(NaN);(r=!a&&h.isInteger()&&e.isInteger())&&(h=h.mod(e))}else{if(t.e>9&&(h.e>0||h.e<-1||(0==h.e?h.c[0]>1||s&&h.c[1]>=24e7:h.c[0]<8e13||s&&h.c[0]<=9999975e7)))return o=h.s<0&&Jo(t)?-0:0,h.e>-1&&(o=1/o),new S(a?1/o:o);b&&(o=Do(b/Bo+2))}for(s?(n=new S(.5),a&&(t.s=1),u=Jo(t)):u=(i=Math.abs(+T(t)))%2,l=new S(g);;){if(u){if(!(l=l.times(h)).c)break;o?l.c.length>o&&(l.c.length=o):r&&(l=l.mod(e))}if(i){if(0===(i=Fo(i/2)))break;u=i%2}else if(C(t=t.times(n),t.e+1,1),t.e>14)u=Jo(t);else{if(0===(i=+T(t)))break;u=i%2}h=h.times(h),o?h.c&&h.c.length>o&&(h.c.length=o):r&&(h=h.mod(e))}return r?l:(a&&(l=g.div(l)),e?l.mod(e):o?C(l,b,v,undefined):l)},f.integerValue=function(t){var e=new S(this);return null==t?t=v:Wo(t,0,8),C(e,e.e+1,t)},f.isEqualTo=f.eq=function(t,e){return 0===Ho(this,new S(t,e))},f.isFinite=function(){return!!this.c},f.isGreaterThan=f.gt=function(t,e){return Ho(this,new S(t,e))>0},f.isGreaterThanOrEqualTo=f.gte=function(t,e){return 1===(e=Ho(this,new S(t,e)))||0===e},f.isInteger=function(){return!!this.c&&Uo(this.e/Bo)>this.c.length-2},f.isLessThan=f.lt=function(t,e){return Ho(this,new S(t,e))<0},f.isLessThanOrEqualTo=f.lte=function(t,e){return-1===(e=Ho(this,new S(t,e)))||0===e},f.isNaN=function(){return!this.s},f.isNegative=function(){return this.s<0},f.isPositive=function(){return this.s>0},f.isZero=function(){return!!this.c&&0==this.c[0]},f.minus=function(t,e){var n,r,i,o,s=this,a=s.s;if(e=(t=new S(t,e)).s,!a||!e)return new S(NaN);if(a!=e)return t.s=-e,s.plus(t);var u=s.e/Bo,l=t.e/Bo,h=s.c,c=t.c;if(!u||!l){if(!h||!c)return h?(t.s=-e,t):new S(c?s:NaN);if(!h[0]||!c[0])return c[0]?(t.s=-e,t):new S(h[0]?s:3==v?-0:0)}if(u=Uo(u),l=Uo(l),h=h.slice(),a=u-l){for((o=a<0)?(a=-a,i=h):(l=u,i=c),i.reverse(),e=a;e--;i.push(0));i.reverse()}else for(r=(o=(a=h.length)<(e=c.length))?a:e,a=e=0;e<r;e++)if(h[e]!=c[e]){o=h[e]<c[e];break}if(o&&(i=h,h=c,c=i,t.s=-t.s),(e=(r=c.length)-(n=h.length))>0)for(;e--;h[n++]=0);for(e=Go-1;r>a;){if(h[--r]<c[r]){for(n=r;n&&!h[--n];h[n]=e);--h[n],h[r]+=Go}h[r]-=c[r]}for(;0==h[0];h.splice(0,1),--l);return h[0]?P(t,h,l):(t.s=3==v?-1:1,t.c=[t.e=0],t)},f.modulo=f.mod=function(t,e){var r,i,o=this;return t=new S(t,e),!o.c||!t.s||t.c&&!t.c[0]?new S(NaN):!t.c||o.c&&!o.c[0]?new S(o):(9==k?(i=t.s,t.s=1,r=n(o,t,0,3),t.s=i,r.s*=i):r=n(o,t,0,k),(t=o.minus(r.times(t))).c[0]||1!=k||(t.s=o.s),t)},f.multipliedBy=f.times=function(t,e){var n,r,i,o,s,a,u,l,h,c,f,g,p,v,d,y=this,m=y.c,_=(t=new S(t,e)).c;if(!(m&&_&&m[0]&&_[0]))return!y.s||!t.s||m&&!m[0]&&!_||_&&!_[0]&&!m?t.c=t.e=t.s=null:(t.s*=y.s,m&&_?(t.c=[0],t.e=0):t.c=t.e=null),t;for(r=Uo(y.e/Bo)+Uo(t.e/Bo),t.s*=y.s,(u=m.length)<(c=_.length)&&(p=m,m=_,_=p,i=u,u=c,c=i),i=u+c,p=[];i--;p.push(0));for(v=Go,d=jo,i=c;--i>=0;){for(n=0,f=_[i]%d,g=_[i]/d|0,o=i+(s=u);o>i;)n=((l=f*(l=m[--s]%d)+(a=g*l+(h=m[s]/d|0)*f)%d*d+p[o]+n)/v|0)+(a/d|0)+g*h,p[o--]=l%v;p[o]=n}return n?++r:p.splice(0,1),P(t,p,r)},f.negated=function(){var t=new S(this);return t.s=-t.s||null,t},f.plus=function(t,e){var n,r=this,i=r.s;if(e=(t=new S(t,e)).s,!i||!e)return new S(NaN);if(i!=e)return t.s=-e,r.minus(t);var o=r.e/Bo,s=t.e/Bo,a=r.c,u=t.c;if(!o||!s){if(!a||!u)return new S(i/0);if(!a[0]||!u[0])return u[0]?t:new S(a[0]?r:0*i)}if(o=Uo(o),s=Uo(s),a=a.slice(),i=o-s){for(i>0?(s=o,n=u):(i=-i,n=a),n.reverse();i--;n.push(0));n.reverse()}for((i=a.length)-(e=u.length)<0&&(n=u,u=a,a=n,e=i),i=0;e;)i=(a[--e]=a[e]+u[e]+i)/Go|0,a[e]=Go===a[e]?0:a[e]%Go;return i&&(a=[i].concat(a),++s),P(t,a,s)},f.precision=f.sd=function(t,e){var n,r,i,o=this;if(null!=t&&t!==!!t)return Wo(t,1,Xo),null==e?e=v:Wo(e,0,8),C(new S(o),t,e);if(!(n=o.c))return null;if(r=(i=n.length-1)*Bo+1,i=n[i]){for(;i%10==0;i/=10,r--);for(i=n[0];i>=10;i/=10,r++);}return t&&o.e+1>r&&(r=o.e+1),r},f.shiftedBy=function(t){return Wo(t,-9007199254740991,Yo),this.times(\"1e\"+t)},f.squareRoot=f.sqrt=function(){var t,e,r,i,o,s=this,a=s.c,u=s.s,l=s.e,h=p+4,c=new S(\"0.5\");if(1!==u||!a||!a[0])return new S(!u||u<0&&(!a||a[0])?NaN:a?s:1/0);if(0==(u=Math.sqrt(+T(s)))||u==1/0?(((e=Zo(a)).length+l)%2==0&&(e+=\"0\"),u=Math.sqrt(+e),l=Uo((l+1)/2)-(l<0||l%2),r=new S(e=u==1/0?\"5e\"+l:(e=u.toExponential()).slice(0,e.indexOf(\"e\")+1)+l)):r=new S(u+\"\"),r.c[0])for((u=(l=r.e)+h)<3&&(u=0);;)if(o=r,r=c.times(o.plus(n(s,o,h,1))),Zo(o.c).slice(0,u)===(e=Zo(r.c)).slice(0,u)){if(r.e<l&&--u,\"9999\"!=(e=e.slice(u-3,u+1))&&(i||\"4999\"!=e)){+e&&(+e.slice(1)||\"5\"!=e.charAt(0))||(C(r,r.e+p+2,1),t=!r.times(r).eq(s));break}if(!i&&(C(o,o.e+p+2,0),o.times(o).eq(s))){r=o;break}h+=4,u+=4,i=1}return C(r,r.e+p+1,v,t)},f.toExponential=function(t,e){return null!=t&&(Wo(t,0,Xo),t++),M(this,t,e,1)},f.toFixed=function(t,e){return null!=t&&(Wo(t,0,Xo),t=t+this.e+1),M(this,t,e)},f.toFormat=function(t,e,n){var r,i=this;if(null==n)null!=t&&e&&\"object\"==m(e)?(n=e,e=null):t&&\"object\"==m(t)?(n=t,t=e=null):n=w;else if(\"object\"!=m(n))throw Error(qo+\"Argument not an object: \"+n);if(r=i.toFixed(t,e),i.c){var o,s=r.split(\".\"),a=+n.groupSize,u=+n.secondaryGroupSize,l=n.groupSeparator||\"\",h=s[0],c=s[1],f=i.s<0,g=f?h.slice(1):h,p=g.length;if(u&&(o=a,a=u,u=o,p-=o),a>0&&p>0){for(o=p%a||a,h=g.substr(0,o);o<p;o+=a)h+=l+g.substr(o,a);u>0&&(h+=l+g.slice(o)),f&&(h=\"-\"+h)}r=c?h+(n.decimalSeparator||\"\")+((u=+n.fractionGroupSize)?c.replace(new RegExp(\"\\\\d{\"+u+\"}\\\\B\",\"g\"),\"$&\"+(n.fractionGroupSeparator||\"\")):c):h}return(n.prefix||\"\")+r+(n.suffix||\"\")},f.toFraction=function(t){var e,r,i,o,s,a,u,l,h,c,f,p,d=this,y=d.c;if(null!=t&&(!(u=new S(t)).isInteger()&&(u.c||1!==u.s)||u.lt(g)))throw Error(qo+\"Argument \"+(u.isInteger()?\"out of range: \":\"not an integer: \")+T(u));if(!y)return new S(d);for(e=new S(g),h=r=new S(g),i=l=new S(g),p=Zo(y),s=e.e=p.length-d.e-1,e.c[0]=zo[(a=s%Bo)<0?Bo+a:a],t=!t||u.comparedTo(e)>0?s>0?e:h:u,a=x,x=1/0,u=new S(p),l.c[0]=0;c=n(u,e,0,1),1!=(o=r.plus(c.times(i))).comparedTo(t);)r=i,i=o,h=l.plus(c.times(o=h)),l=o,e=u.minus(c.times(o=e)),u=o;return o=n(t.minus(r),i,0,1),l=l.plus(o.times(h)),r=r.plus(o.times(i)),l.s=h.s=d.s,f=n(h,i,s*=2,v).minus(d).abs().comparedTo(n(l,r,s,v).minus(d).abs())<1?[h,i]:[l,r],x=a,f},f.toNumber=function(){return+T(this)},f.toPrecision=function(t,e){return null!=t&&Wo(t,1,Xo),M(this,t,e,2)},f.toString=function(t){var e,n=this,i=n.s,o=n.e;return null===o?i?(e=\"Infinity\",i<0&&(e=\"-\"+e)):e=\"NaN\":(null==t?e=o<=d||o>=y?Ko(Zo(n.c),o):Qo(Zo(n.c),o,\"0\"):10===t&&N?e=Qo(Zo((n=C(new S(n),p+o+1,v)).c),n.e,\"0\"):(Wo(t,2,I.length,\"Base\"),e=r(Qo(Zo(n.c),o,\"0\"),10,t,i,!0)),i<0&&n.c[0]&&(e=\"-\"+e)),e},f.valueOf=f.toJSON=function(){return T(this)},f._isBigNumber=!0,f[Symbol.toStringTag]=\"BigNumber\",f[Symbol.for(\"nodejs.util.inspect.custom\")]=f.valueOf,null!=e&&S.set(e),S}(),ts=function(t){function e(t){return i(this,e),r(this,e,[t])}return h(e,t),s(e)}(s((function t(e){i(this,t),u(this,\"key\",void 0),u(this,\"left\",null),u(this,\"right\",null),this.key=e}))),es=function(){return s((function t(){i(this,t),u(this,\"size\",0),u(this,\"modificationCount\",0),u(this,\"splayCount\",0)}),[{key:\"splay\",value:function(t){var e=this.root;if(null==e)return this.compare(t,t),-1;for(var n,r=null,i=null,o=null,s=null,a=e,u=this.compare;;)if((n=u(a.key,t))>0){var l=a.left;if(null==l)break;if((n=u(l.key,t))>0&&(a.left=l.right,l.right=a,null==(l=(a=l).left)))break;null==r?i=a:r.left=a,r=a,a=l}else{if(!(n<0))break;var h=a.right;if(null==h)break;if((n=u(h.key,t))<0&&(a.right=h.left,h.left=a,null==(h=(a=h).right)))break;null==o?s=a:o.right=a,o=a,a=h}return null!=o&&(o.right=a.left,a.left=s),null!=r&&(r.left=a.right,a.right=i),this.root!==a&&(this.root=a,this.splayCount++),n}},{key:\"splayMin\",value:function(t){for(var e=t,n=e.left;null!=n;){var r=n;e.left=r.right,r.right=e,n=(e=r).left}return e}},{key:\"splayMax\",value:function(t){for(var e=t,n=e.right;null!=n;){var r=n;e.right=r.left,r.left=e,n=(e=r).right}return e}},{key:\"_delete\",value:function(t){if(null==this.root)return null;if(0!=this.splay(t))return null;var e=this.root,n=e,r=e.left;if(this.size--,null==r)this.root=e.right;else{var i=e.right;(e=this.splayMax(r)).right=i,this.root=e}return this.modificationCount++,n}},{key:\"addNewRoot\",value:function(t,e){this.size++,this.modificationCount++;var n=this.root;null!=n?(e<0?(t.left=n,t.right=n.right,n.right=null):(t.right=n,t.left=n.left,n.left=null),this.root=t):this.root=t}},{key:\"_first\",value:function(){var t=this.root;return null==t?null:(this.root=this.splayMin(t),this.root)}},{key:\"_last\",value:function(){var t=this.root;return null==t?null:(this.root=this.splayMax(t),this.root)}},{key:\"clear\",value:function(){this.root=null,this.size=0,this.modificationCount++}},{key:\"has\",value:function(t){return this.validKey(t)&&0==this.splay(t)}},{key:\"defaultCompare\",value:function(){return function(t,e){return t<e?-1:t>e?1:0}}},{key:\"wrap\",value:function(){var t=this;return{getRoot:function(){return t.root},setRoot:function(e){t.root=e},getSize:function(){return t.size},getModificationCount:function(){return t.modificationCount},getSplayCount:function(){return t.splayCount},setSplayCount:function(e){t.splayCount=e},splay:function(e){return t.splay(e)},has:function(e){return t.has(e)}}}}])}(),ns=function(t){function e(t,n){var o;return i(this,e),u(o=r(this,e),\"root\",null),u(o,\"compare\",void 0),u(o,\"validKey\",void 0),u(o,Symbol.toStringTag,\"[object Set]\"),o.compare=null!=t?t:o.defaultCompare(),o.validKey=null!=n?n:function(t){return null!=t&&null!=t},o}return h(e,t),s(e,[{key:\"delete\",value:function(t){return!!this.validKey(t)&&null!=this._delete(t)}},{key:\"deleteAll\",value:function(t){var e,n=a(t);try{for(n.s();!(e=n.n()).done;){var r=e.value;this.delete(r)}}catch(t){n.e(t)}finally{n.f()}}},{key:\"forEach\",value:function(t){for(var e,n=this[Symbol.iterator]();!(e=n.next()).done;)t(e.value,e.value,this)}},{key:\"add\",value:function(t){var e=this.splay(t);return 0!=e&&this.addNewRoot(new ts(t),e),this}},{key:\"addAndReturn\",value:function(t){var e=this.splay(t);return 0!=e&&this.addNewRoot(new ts(t),e),this.root.key}},{key:\"addAll\",value:function(t){var e,n=a(t);try{for(n.s();!(e=n.n()).done;){var r=e.value;this.add(r)}}catch(t){n.e(t)}finally{n.f()}}},{key:\"isEmpty\",value:function(){return null==this.root}},{key:\"isNotEmpty\",value:function(){return null!=this.root}},{key:\"single\",value:function(){if(0==this.size)throw\"Bad state: No element\";if(this.size>1)throw\"Bad state: Too many element\";return this.root.key}},{key:\"first\",value:function(){if(0==this.size)throw\"Bad state: No element\";return this._first().key}},{key:\"last\",value:function(){if(0==this.size)throw\"Bad state: No element\";return this._last().key}},{key:\"lastBefore\",value:function(t){if(null==t)throw\"Invalid arguments(s)\";if(null==this.root)return null;if(this.splay(t)<0)return this.root.key;var e=this.root.left;if(null==e)return null;for(var n=e.right;null!=n;)n=(e=n).right;return e.key}},{key:\"firstAfter\",value:function(t){if(null==t)throw\"Invalid arguments(s)\";if(null==this.root)return null;if(this.splay(t)>0)return this.root.key;var e=this.root.right;if(null==e)return null;for(var n=e.left;null!=n;)n=(e=n).left;return e.key}},{key:\"retainAll\",value:function(t){var n,r=new e(this.compare,this.validKey),i=this.modificationCount,o=a(t);try{for(o.s();!(n=o.n()).done;){var s=n.value;if(i!=this.modificationCount)throw\"Concurrent modification during iteration.\";this.validKey(s)&&0==this.splay(s)&&r.add(this.root.key)}}catch(t){o.e(t)}finally{o.f()}r.size!=this.size&&(this.root=r.root,this.size=r.size,this.modificationCount++)}},{key:\"lookup\",value:function(t){return this.validKey(t)?0!=this.splay(t)?null:this.root.key:null}},{key:\"intersection\",value:function(t){var n,r=new e(this.compare,this.validKey),i=a(this);try{for(i.s();!(n=i.n()).done;){var o=n.value;t.has(o)&&r.add(o)}}catch(t){i.e(t)}finally{i.f()}return r}},{key:\"difference\",value:function(t){var n,r=new e(this.compare,this.validKey),i=a(this);try{for(i.s();!(n=i.n()).done;){var o=n.value;t.has(o)||r.add(o)}}catch(t){i.e(t)}finally{i.f()}return r}},{key:\"union\",value:function(t){var e=this.clone();return e.addAll(t),e}},{key:\"clone\",value:function(){var t=new e(this.compare,this.validKey);return t.size=this.size,t.root=this.copyNode(this.root),t}},{key:\"copyNode\",value:function(t){if(null==t)return null;var e=new ts(t.key);return function t(e,n){var r,i;do{if(r=e.left,i=e.right,null!=r){var o=new ts(r.key);n.left=o,t(r,o)}if(null!=i){var s=new ts(i.key);n.right=s,e=i,n=s}}while(null!=i)}(t,e),e}},{key:\"toSet\",value:function(){return this.clone()}},{key:\"entries\",value:function(){return new os(this.wrap())}},{key:\"keys\",value:function(){return this[Symbol.iterator]()}},{key:\"values\",value:function(){return this[Symbol.iterator]()}},{key:Symbol.iterator,value:function(){return new is(this.wrap())}}])}(es),rs=function(){return s((function t(e){i(this,t),u(this,\"tree\",void 0),u(this,\"path\",new Array),u(this,\"modificationCount\",null),u(this,\"splayCount\",void 0),this.tree=e,this.splayCount=e.getSplayCount()}),[{key:Symbol.iterator,value:function(){return this}},{key:\"next\",value:function(){return this.moveNext()?{done:!1,value:this.current()}:{done:!0,value:null}}},{key:\"current\",value:function(){if(!this.path.length)return null;var t=this.path[this.path.length-1];return this.getValue(t)}},{key:\"rebuildPath\",value:function(t){this.path.splice(0,this.path.length),this.tree.splay(t),this.path.push(this.tree.getRoot()),this.splayCount=this.tree.getSplayCount()}},{key:\"findLeftMostDescendent\",value:function(t){for(;null!=t;)this.path.push(t),t=t.left}},{key:\"moveNext\",value:function(){if(this.modificationCount!=this.tree.getModificationCount()){if(null==this.modificationCount){this.modificationCount=this.tree.getModificationCount();for(var t=this.tree.getRoot();null!=t;)this.path.push(t),t=t.left;return this.path.length>0}throw\"Concurrent modification during iteration.\"}if(!this.path.length)return!1;this.splayCount!=this.tree.getSplayCount()&&this.rebuildPath(this.path[this.path.length-1].key);var e=this.path[this.path.length-1],n=e.right;if(null!=n){for(;null!=n;)this.path.push(n),n=n.left;return!0}for(this.path.pop();this.path.length&&this.path[this.path.length-1].right===e;)e=this.path.pop();return this.path.length>0}}])}(),is=function(t){function e(){return i(this,e),r(this,e,arguments)}return h(e,t),s(e,[{key:\"getValue\",value:function(t){return t.key}}])}(rs),os=function(t){function e(){return i(this,e),r(this,e,arguments)}return h(e,t),s(e,[{key:\"getValue\",value:function(t){return[t.key,t.key]}}])}(rs),ss=function(t){return function(){return t}},as=function(t){var e=t?function(e,n){return n.minus(e).abs().isLessThanOrEqualTo(t)}:ss(!1);return function(t,n){return e(t,n)?0:t.comparedTo(n)}};function us(t){var e=t?function(e,n,r,i,o){return e.exponentiatedBy(2).isLessThanOrEqualTo(i.minus(n).exponentiatedBy(2).plus(o.minus(r).exponentiatedBy(2)).times(t))}:ss(!1);return function(t,n,r){var i=t.x,o=t.y,s=r.x,a=r.y,u=o.minus(a).times(n.x.minus(s)).minus(i.minus(s).times(n.y.minus(a)));return e(u,i,o,s,a)?0:u.comparedTo(0)}}var ls=function(t){return t},hs=function(t){if(t){var e=new ns(as(t)),n=new ns(as(t)),r=function(t,e){return e.addAndReturn(t)},i=function(t){return{x:r(t.x,e),y:r(t.y,n)}};return i({x:new $o(0),y:new $o(0)}),i}return ls},cs=function(t){return{set:function(t){fs=cs(t)},reset:function(){return cs(t)},compare:as(t),snap:hs(t),orient:us(t)}},fs=cs(),gs=function(t,e){return t.ll.x.isLessThanOrEqualTo(e.x)&&e.x.isLessThanOrEqualTo(t.ur.x)&&t.ll.y.isLessThanOrEqualTo(e.y)&&e.y.isLessThanOrEqualTo(t.ur.y)},ps=function(t,e){if(e.ur.x.isLessThan(t.ll.x)||t.ur.x.isLessThan(e.ll.x)||e.ur.y.isLessThan(t.ll.y)||t.ur.y.isLessThan(e.ll.y))return null;var n=t.ll.x.isLessThan(e.ll.x)?e.ll.x:t.ll.x,r=t.ur.x.isLessThan(e.ur.x)?t.ur.x:e.ur.x;return{ll:{x:n,y:t.ll.y.isLessThan(e.ll.y)?e.ll.y:t.ll.y},ur:{x:r,y:t.ur.y.isLessThan(e.ur.y)?t.ur.y:e.ur.y}}},vs=function(t,e){return t.x.times(e.y).minus(t.y.times(e.x))},ds=function(t,e){return t.x.times(e.x).plus(t.y.times(e.y))},ys=function(t){return ds(t,t).sqrt()},ms=function(t,e,n){var r={x:e.x.minus(t.x),y:e.y.minus(t.y)},i={x:n.x.minus(t.x),y:n.y.minus(t.y)};return ds(i,r).div(ys(i)).div(ys(r))},_s=function(t,e,n){return e.y.isZero()?null:{x:t.x.plus(e.x.div(e.y).times(n.minus(t.y))),y:n}},xs=function(t,e,n){return e.x.isZero()?null:{x:n,y:t.y.plus(e.y.div(e.x).times(n.minus(t.x)))}},Es=function(){function t(e,n){i(this,t),u(this,\"point\",void 0),u(this,\"isLeft\",void 0),u(this,\"segment\",void 0),u(this,\"otherSE\",void 0),u(this,\"consumedBy\",void 0),void 0===e.events?e.events=[this]:e.events.push(this),this.point=e,this.isLeft=n}return s(t,[{key:\"link\",value:function(t){if(t.point===this.point)throw new Error(\"Tried to link already linked events\");for(var e=t.point.events,n=0,r=e.length;n<r;n++){var i=e[n];this.point.events.push(i),i.point=this.point}this.checkForConsuming()}},{key:\"checkForConsuming\",value:function(){for(var t=this.point.events.length,e=0;e<t;e++){var n=this.point.events[e];if(void 0===n.segment.consumedBy)for(var r=e+1;r<t;r++){var i=this.point.events[r];void 0===i.consumedBy&&(n.otherSE.point.events===i.otherSE.point.events&&n.segment.consume(i.segment))}}}},{key:\"getAvailableLinkedEvents\",value:function(){for(var t=[],e=0,n=this.point.events.length;e<n;e++){var r=this.point.events[e];r!==this&&!r.segment.ringOut&&r.segment.isInResult()&&t.push(r)}return t}},{key:\"getLeftmostComparator\",value:function(t){var e=this,n=new Map,r=function(r){var i,o,s,a,u,l=r.otherSE;n.set(r,{sine:(i=e.point,o=t.point,s=l.point,a={x:o.x.minus(i.x),y:o.y.minus(i.y)},u={x:s.x.minus(i.x),y:s.y.minus(i.y)},vs(u,a).div(ys(u)).div(ys(a))),cosine:ms(e.point,t.point,l.point)})};return function(t,e){n.has(t)||r(t),n.has(e)||r(e);var i=n.get(t),o=i.sine,s=i.cosine,a=n.get(e),u=a.sine,l=a.cosine;return o.isGreaterThanOrEqualTo(0)&&u.isGreaterThanOrEqualTo(0)?s.isLessThan(l)?1:s.isGreaterThan(l)?-1:0:o.isLessThan(0)&&u.isLessThan(0)?s.isLessThan(l)?-1:s.isGreaterThan(l)?1:0:u.isLessThan(o)?-1:u.isGreaterThan(o)?1:0}}}],[{key:\"compare\",value:function(e,n){var r=t.comparePoints(e.point,n.point);return 0!==r?r:(e.point!==n.point&&e.link(n),e.isLeft!==n.isLeft?e.isLeft?1:-1:Ls.compare(e.segment,n.segment))}},{key:\"comparePoints\",value:function(t,e){return t.x.isLessThan(e.x)?-1:t.x.isGreaterThan(e.x)?1:t.y.isLessThan(e.y)?-1:t.y.isGreaterThan(e.y)?1:0}}])}(),ks=function(){function t(e){i(this,t),u(this,\"events\",void 0),u(this,\"poly\",void 0),u(this,\"_isExteriorRing\",void 0),u(this,\"_enclosingRing\",void 0),this.events=e;for(var n=0,r=e.length;n<r;n++)e[n].segment.ringOut=this;this.poly=null}return s(t,[{key:\"getGeom\",value:function(){for(var t=this.events[0].point,e=[t],n=1,r=this.events.length-1;n<r;n++){var i=this.events[n].point,o=this.events[n+1].point;0!==fs.orient(i,t,o)&&(e.push(i),t=i)}if(1===e.length)return null;var s=e[0],a=e[1];0===fs.orient(s,t,a)&&e.shift(),e.push(e[0]);for(var u=this.isExteriorRing()?1:-1,l=this.isExteriorRing()?0:e.length-1,h=this.isExteriorRing()?e.length:-1,c=[],f=l;f!=h;f+=u)c.push([e[f].x.toNumber(),e[f].y.toNumber()]);return c}},{key:\"isExteriorRing\",value:function(){if(void 0===this._isExteriorRing){var t=this.enclosingRing();this._isExteriorRing=!t||!t.isExteriorRing()}return this._isExteriorRing}},{key:\"enclosingRing\",value:function(){return void 0===this._enclosingRing&&(this._enclosingRing=this._calcEnclosingRing()),this._enclosingRing}},{key:\"_calcEnclosingRing\",value:function(){for(var t=this.events[0],e=1,n=this.events.length;e<n;e++){var r=this.events[e];Es.compare(t,r)>0&&(t=r)}for(var i=t.segment.prevInResult(),o=i?i.prevInResult():null;;){if(!i)return null;if(!o)return i.ringOut;var s,a;if(o.ringOut!==i.ringOut)return(null===(s=o.ringOut)||void 0===s?void 0:s.enclosingRing())!==i.ringOut?i.ringOut:null===(a=i.ringOut)||void 0===a?void 0:a.enclosingRing();i=o.prevInResult(),o=i?i.prevInResult():null}}}],[{key:\"factory\",value:function(e){for(var n=[],r=0,i=e.length;r<i;r++){var o=e[r];if(o.isInResult()&&!o.ringOut){for(var s=null,a=o.leftSE,u=o.rightSE,l=[a],h=a.point,c=[];s=a,a=u,l.push(a),a.point!==h;)for(;;){var f=a.getAvailableLinkedEvents();if(0===f.length){var g=l[0].point,p=l[l.length-1].point;throw new Error(\"Unable to complete output ring starting at [\".concat(g.x,\", \").concat(g.y,\"]. Last matching segment found ends at [\").concat(p.x,\", \").concat(p.y,\"].\"))}if(1===f.length){u=f[0].otherSE;break}for(var v=null,d=0,y=c.length;d<y;d++)if(c[d].point===a.point){v=d;break}if(null===v){c.push({index:l.length,point:a.point});var m=a.getLeftmostComparator(s);u=f.sort(m)[0].otherSE;break}var _=c.splice(v)[0],x=l.splice(_.index);x.unshift(x[0].otherSE),n.push(new t(x.reverse()))}n.push(new t(l))}}return n}}])}(),bs=function(){return s((function t(e){i(this,t),u(this,\"exteriorRing\",void 0),u(this,\"interiorRings\",void 0),this.exteriorRing=e,e.poly=this,this.interiorRings=[]}),[{key:\"addInterior\",value:function(t){this.interiorRings.push(t),t.poly=this}},{key:\"getGeom\",value:function(){var t=this.exteriorRing.getGeom();if(null===t)return null;for(var e=[t],n=0,r=this.interiorRings.length;n<r;n++){var i=this.interiorRings[n].getGeom();null!==i&&e.push(i)}return e}}])}(),ws=function(){return s((function t(e){i(this,t),u(this,\"rings\",void 0),u(this,\"polys\",void 0),this.rings=e,this.polys=this._composePolys(e)}),[{key:\"getGeom\",value:function(){for(var t=[],e=0,n=this.polys.length;e<n;e++){var r=this.polys[e].getGeom();null!==r&&t.push(r)}return t}},{key:\"_composePolys\",value:function(t){for(var e=[],n=0,r=t.length;n<r;n++){var i=t[n];if(!i.poly)if(i.isExteriorRing())e.push(new bs(i));else{var o,s=i.enclosingRing();null!=s&&s.poly||e.push(new bs(s)),null==s||null===(o=s.poly)||void 0===o||o.addInterior(i)}}return e}}])}(),Is=function(){return s((function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Ls.compare;i(this,t),u(this,\"queue\",void 0),u(this,\"tree\",void 0),u(this,\"segments\",void 0),this.queue=e,this.tree=new ns(n),this.segments=[]}),[{key:\"process\",value:function(t){var e=t.segment,n=[];if(t.consumedBy)return t.isLeft?this.queue.delete(t.otherSE):this.tree.delete(e),n;t.isLeft&&this.tree.add(e);var r=e,i=e;do{r=this.tree.lastBefore(r)}while(null!=r&&null!=r.consumedBy);do{i=this.tree.firstAfter(i)}while(null!=i&&null!=i.consumedBy);if(t.isLeft){var o=null;if(r){var s=r.getIntersection(e);if(null!==s&&(e.isAnEndpoint(s)||(o=s),!r.isAnEndpoint(s)))for(var a=this._splitSafely(r,s),u=0,l=a.length;u<l;u++)n.push(a[u])}var h=null;if(i){var c=i.getIntersection(e);if(null!==c&&(e.isAnEndpoint(c)||(h=c),!i.isAnEndpoint(c)))for(var f=this._splitSafely(i,c),g=0,p=f.length;g<p;g++)n.push(f[g])}if(null!==o||null!==h){var v=null;if(null===o)v=h;else if(null===h)v=o;else{v=Es.comparePoints(o,h)<=0?o:h}this.queue.delete(e.rightSE),n.push(e.rightSE);for(var d=e.split(v),y=0,m=d.length;y<m;y++)n.push(d[y])}n.length>0?(this.tree.delete(e),n.push(t)):(this.segments.push(e),e.prev=r)}else{if(r&&i){var _=r.getIntersection(i);if(null!==_){if(!r.isAnEndpoint(_))for(var x=this._splitSafely(r,_),E=0,k=x.length;E<k;E++)n.push(x[E]);if(!i.isAnEndpoint(_))for(var b=this._splitSafely(i,_),w=0,I=b.length;w<I;w++)n.push(b[w])}}this.tree.delete(e)}return n}},{key:\"_splitSafely\",value:function(t,e){this.tree.delete(t);var n=t.rightSE;this.queue.delete(n);var r=t.split(e);return r.push(n),void 0===t.consumedBy&&this.tree.add(t),r}}])}(),Ns=new(function(){return s((function t(){i(this,t),u(this,\"type\",void 0),u(this,\"numMultiPolys\",void 0)}),[{key:\"run\",value:function(t,e,n){Ns.type=t;for(var r=[new Ts(e,!0)],i=0,o=n.length;i<o;i++)r.push(new Ts(n[i],!1));if(Ns.numMultiPolys=r.length,\"difference\"===Ns.type)for(var s=r[0],a=1;a<r.length;)null!==ps(r[a].bbox,s.bbox)?a++:r.splice(a,1);if(\"intersection\"===Ns.type)for(var u=0,l=r.length;u<l;u++)for(var h=r[u],c=u+1,f=r.length;c<f;c++)if(null===ps(h.bbox,r[c].bbox))return[];for(var g=new ns(Es.compare),p=0,v=r.length;p<v;p++)for(var d=r[p].getSweepEvents(),y=0,m=d.length;y<m;y++)g.add(d[y]);var _=new Is(g),x=null;for(0!=g.size&&(x=g.first(),g.delete(x));x;){for(var E=_.process(x),k=0,b=E.length;k<b;k++){var w=E[k];void 0===w.consumedBy&&g.add(w)}0!=g.size?(x=g.first(),g.delete(x)):x=null}fs.reset();var I=ks.factory(_.segments);return new ws(I).getGeom()}}])}()),Ss=Ns,Ms=0,Ls=function(){function t(e,n,r,o){i(this,t),u(this,\"id\",void 0),u(this,\"leftSE\",void 0),u(this,\"rightSE\",void 0),u(this,\"rings\",void 0),u(this,\"windings\",void 0),u(this,\"ringOut\",void 0),u(this,\"consumedBy\",void 0),u(this,\"prev\",void 0),u(this,\"_prevInResult\",void 0),u(this,\"_beforeState\",void 0),u(this,\"_afterState\",void 0),u(this,\"_isInResult\",void 0),this.id=++Ms,this.leftSE=e,e.segment=this,e.otherSE=n,this.rightSE=n,n.segment=this,n.otherSE=e,this.rings=r,this.windings=o}return s(t,[{key:\"replaceRightSE\",value:function(t){this.rightSE=t,this.rightSE.segment=this,this.rightSE.otherSE=this.leftSE,this.leftSE.otherSE=this.rightSE}},{key:\"bbox\",value:function(){var t=this.leftSE.point.y,e=this.rightSE.point.y;return{ll:{x:this.leftSE.point.x,y:t.isLessThan(e)?t:e},ur:{x:this.rightSE.point.x,y:t.isGreaterThan(e)?t:e}}}},{key:\"vector\",value:function(){return{x:this.rightSE.point.x.minus(this.leftSE.point.x),y:this.rightSE.point.y.minus(this.leftSE.point.y)}}},{key:\"isAnEndpoint\",value:function(t){return t.x.eq(this.leftSE.point.x)&&t.y.eq(this.leftSE.point.y)||t.x.eq(this.rightSE.point.x)&&t.y.eq(this.rightSE.point.y)}},{key:\"comparePoint\",value:function(t){return fs.orient(this.leftSE.point,t,this.rightSE.point)}},{key:\"getIntersection\",value:function(t){var e=this.bbox(),n=t.bbox(),r=ps(e,n);if(null===r)return null;var i=this.leftSE.point,o=this.rightSE.point,s=t.leftSE.point,a=t.rightSE.point,u=gs(e,s)&&0===this.comparePoint(s),l=gs(n,i)&&0===t.comparePoint(i),h=gs(e,a)&&0===this.comparePoint(a),c=gs(n,o)&&0===t.comparePoint(o);if(l&&u)return c&&!h?o:!c&&h?a:null;if(l)return h&&i.x.eq(a.x)&&i.y.eq(a.y)?null:i;if(u)return c&&o.x.eq(s.x)&&o.y.eq(s.y)?null:s;if(c&&h)return null;if(c)return o;if(h)return a;var f=function(t,e,n,r){if(e.x.isZero())return xs(n,r,t.x);if(r.x.isZero())return xs(t,e,n.x);if(e.y.isZero())return _s(n,r,t.y);if(r.y.isZero())return _s(t,e,n.y);var i=vs(e,r);if(i.isZero())return null;var o={x:n.x.minus(t.x),y:n.y.minus(t.y)},s=vs(o,e).div(i),a=vs(o,r).div(i),u=t.x.plus(a.times(e.x)),l=n.x.plus(s.times(r.x)),h=t.y.plus(a.times(e.y)),c=n.y.plus(s.times(r.y));return{x:u.plus(l).div(2),y:h.plus(c).div(2)}}(i,this.vector(),s,t.vector());return null===f?null:gs(r,f)?fs.snap(f):null}},{key:\"split\",value:function(e){var n=[],r=void 0!==e.events,i=new Es(e,!0),o=new Es(e,!1),s=this.rightSE;this.replaceRightSE(o),n.push(o),n.push(i);var a=new t(i,s,this.rings.slice(),this.windings.slice());return Es.comparePoints(a.leftSE.point,a.rightSE.point)>0&&a.swapEvents(),Es.comparePoints(this.leftSE.point,this.rightSE.point)>0&&this.swapEvents(),r&&(i.checkForConsuming(),o.checkForConsuming()),n}},{key:\"swapEvents\",value:function(){var t=this.rightSE;this.rightSE=this.leftSE,this.leftSE=t,this.leftSE.isLeft=!0,this.rightSE.isLeft=!1;for(var e=0,n=this.windings.length;e<n;e++)this.windings[e]*=-1}},{key:\"consume\",value:function(e){for(var n=this,r=e;n.consumedBy;)n=n.consumedBy;for(;r.consumedBy;)r=r.consumedBy;var i=t.compare(n,r);if(0!==i){if(i>0){var o=n;n=r,r=o}if(n.prev===r){var s=n;n=r,r=s}for(var a=0,u=r.rings.length;a<u;a++){var l=r.rings[a],h=r.windings[a],c=n.rings.indexOf(l);-1===c?(n.rings.push(l),n.windings.push(h)):n.windings[c]+=h}r.rings=null,r.windings=null,r.consumedBy=n,r.leftSE.consumedBy=n.leftSE,r.rightSE.consumedBy=n.rightSE}}},{key:\"prevInResult\",value:function(){return void 0!==this._prevInResult||(this.prev?this.prev.isInResult()?this._prevInResult=this.prev:this._prevInResult=this.prev.prevInResult():this._prevInResult=null),this._prevInResult}},{key:\"beforeState\",value:function(){if(void 0!==this._beforeState)return this._beforeState;if(this.prev){var t=this.prev.consumedBy||this.prev;this._beforeState=t.afterState()}else this._beforeState={rings:[],windings:[],multiPolys:[]};return this._beforeState}},{key:\"afterState\",value:function(){if(void 0!==this._afterState)return this._afterState;var t=this.beforeState();this._afterState={rings:t.rings.slice(0),windings:t.windings.slice(0),multiPolys:[]};for(var e=this._afterState.rings,n=this._afterState.windings,r=this._afterState.multiPolys,i=0,o=this.rings.length;i<o;i++){var s=this.rings[i],a=this.windings[i],u=e.indexOf(s);-1===u?(e.push(s),n.push(a)):n[u]+=a}for(var l=[],h=[],c=0,f=e.length;c<f;c++)if(0!==n[c]){var g=e[c],p=g.poly;if(-1===h.indexOf(p))if(g.isExterior)l.push(p);else{-1===h.indexOf(p)&&h.push(p);var v=l.indexOf(g.poly);-1!==v&&l.splice(v,1)}}for(var d=0,y=l.length;d<y;d++){var m=l[d].multiPoly;-1===r.indexOf(m)&&r.push(m)}return this._afterState}},{key:\"isInResult\",value:function(){if(this.consumedBy)return!1;if(void 0!==this._isInResult)return this._isInResult;var t=this.beforeState().multiPolys,e=this.afterState().multiPolys;switch(Ss.type){case\"union\":var n=0===t.length,r=0===e.length;this._isInResult=n!==r;break;case\"intersection\":var i,o;t.length<e.length?(i=t.length,o=e.length):(i=e.length,o=t.length),this._isInResult=o===Ss.numMultiPolys&&i<o;break;case\"xor\":var s=Math.abs(t.length-e.length);this._isInResult=s%2==1;break;case\"difference\":var a=function(t){return 1===t.length&&t[0].isSubject};this._isInResult=a(t)!==a(e)}return this._isInResult}}],[{key:\"compare\",value:function(t,e){var n=t.leftSE.point.x,r=e.leftSE.point.x,i=t.rightSE.point.x,o=e.rightSE.point.x;if(o.isLessThan(n))return 1;if(i.isLessThan(r))return-1;var s=t.leftSE.point.y,a=e.leftSE.point.y,u=t.rightSE.point.y,l=e.rightSE.point.y;if(n.isLessThan(r)){if(a.isLessThan(s)&&a.isLessThan(u))return 1;if(a.isGreaterThan(s)&&a.isGreaterThan(u))return-1;var h=t.comparePoint(e.leftSE.point);if(h<0)return 1;if(h>0)return-1;var c=e.comparePoint(t.rightSE.point);return 0!==c?c:-1}if(n.isGreaterThan(r)){if(s.isLessThan(a)&&s.isLessThan(l))return-1;if(s.isGreaterThan(a)&&s.isGreaterThan(l))return 1;var f=e.comparePoint(t.leftSE.point);if(0!==f)return f;var g=t.comparePoint(e.rightSE.point);return g<0?1:g>0?-1:1}if(s.isLessThan(a))return-1;if(s.isGreaterThan(a))return 1;if(i.isLessThan(o)){var p=e.comparePoint(t.rightSE.point);if(0!==p)return p}if(i.isGreaterThan(o)){var v=t.comparePoint(e.rightSE.point);if(v<0)return 1;if(v>0)return-1}if(!i.eq(o)){var d=u.minus(s),y=i.minus(n),m=l.minus(a),_=o.minus(r);if(d.isGreaterThan(y)&&m.isLessThan(_))return 1;if(d.isLessThan(y)&&m.isGreaterThan(_))return-1}return i.isGreaterThan(o)?1:i.isLessThan(o)||u.isLessThan(l)?-1:u.isGreaterThan(l)?1:t.id<e.id?-1:t.id>e.id?1:0}},{key:\"fromRing\",value:function(e,n,r){var i,o,s,a=Es.comparePoints(e,n);if(a<0)i=e,o=n,s=1;else{if(!(a>0))throw new Error(\"Tried to create degenerate segment at [\".concat(e.x,\", \").concat(e.y,\"]\"));i=n,o=e,s=-1}return new t(new Es(i,!0),new Es(o,!1),[r],[s])}}])}(),Ps=function(){return s((function t(e,n,r){if(i(this,t),u(this,\"poly\",void 0),u(this,\"isExterior\",void 0),u(this,\"segments\",void 0),u(this,\"bbox\",void 0),!Array.isArray(e)||0===e.length)throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");if(this.poly=n,this.isExterior=r,this.segments=[],\"number\"!=typeof e[0][0]||\"number\"!=typeof e[0][1])throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");var o=fs.snap({x:new $o(e[0][0]),y:new $o(e[0][1])});this.bbox={ll:{x:o.x,y:o.y},ur:{x:o.x,y:o.y}};for(var s=o,a=1,l=e.length;a<l;a++){if(\"number\"!=typeof e[a][0]||\"number\"!=typeof e[a][1])throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");var h=fs.snap({x:new $o(e[a][0]),y:new $o(e[a][1])});h.x.eq(s.x)&&h.y.eq(s.y)||(this.segments.push(Ls.fromRing(s,h,this)),h.x.isLessThan(this.bbox.ll.x)&&(this.bbox.ll.x=h.x),h.y.isLessThan(this.bbox.ll.y)&&(this.bbox.ll.y=h.y),h.x.isGreaterThan(this.bbox.ur.x)&&(this.bbox.ur.x=h.x),h.y.isGreaterThan(this.bbox.ur.y)&&(this.bbox.ur.y=h.y),s=h)}o.x.eq(s.x)&&o.y.eq(s.y)||this.segments.push(Ls.fromRing(s,o,this))}),[{key:\"getSweepEvents\",value:function(){for(var t=[],e=0,n=this.segments.length;e<n;e++){var r=this.segments[e];t.push(r.leftSE),t.push(r.rightSE)}return t}}])}(),Cs=function(){return s((function t(e,n){if(i(this,t),u(this,\"multiPoly\",void 0),u(this,\"exteriorRing\",void 0),u(this,\"interiorRings\",void 0),u(this,\"bbox\",void 0),!Array.isArray(e))throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");this.exteriorRing=new Ps(e[0],this,!0),this.bbox={ll:{x:this.exteriorRing.bbox.ll.x,y:this.exteriorRing.bbox.ll.y},ur:{x:this.exteriorRing.bbox.ur.x,y:this.exteriorRing.bbox.ur.y}},this.interiorRings=[];for(var r=1,o=e.length;r<o;r++){var s=new Ps(e[r],this,!1);s.bbox.ll.x.isLessThan(this.bbox.ll.x)&&(this.bbox.ll.x=s.bbox.ll.x),s.bbox.ll.y.isLessThan(this.bbox.ll.y)&&(this.bbox.ll.y=s.bbox.ll.y),s.bbox.ur.x.isGreaterThan(this.bbox.ur.x)&&(this.bbox.ur.x=s.bbox.ur.x),s.bbox.ur.y.isGreaterThan(this.bbox.ur.y)&&(this.bbox.ur.y=s.bbox.ur.y),this.interiorRings.push(s)}this.multiPoly=n}),[{key:\"getSweepEvents\",value:function(){for(var t=this.exteriorRing.getSweepEvents(),e=0,n=this.interiorRings.length;e<n;e++)for(var r=this.interiorRings[e].getSweepEvents(),i=0,o=r.length;i<o;i++)t.push(r[i]);return t}}])}(),Ts=function(){return s((function t(e,n){if(i(this,t),u(this,\"isSubject\",void 0),u(this,\"polys\",void 0),u(this,\"bbox\",void 0),!Array.isArray(e))throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");try{\"number\"==typeof e[0][0][0]&&(e=[e])}catch(t){}this.polys=[],this.bbox={ll:{x:new $o(Number.POSITIVE_INFINITY),y:new $o(Number.POSITIVE_INFINITY)},ur:{x:new $o(Number.NEGATIVE_INFINITY),y:new $o(Number.NEGATIVE_INFINITY)}};for(var r=0,o=e.length;r<o;r++){var s=new Cs(e[r],this);s.bbox.ll.x.isLessThan(this.bbox.ll.x)&&(this.bbox.ll.x=s.bbox.ll.x),s.bbox.ll.y.isLessThan(this.bbox.ll.y)&&(this.bbox.ll.y=s.bbox.ll.y),s.bbox.ur.x.isGreaterThan(this.bbox.ur.x)&&(this.bbox.ur.x=s.bbox.ur.x),s.bbox.ur.y.isGreaterThan(this.bbox.ur.y)&&(this.bbox.ur.y=s.bbox.ur.y),this.polys.push(s)}this.isSubject=n}),[{key:\"getSweepEvents\",value:function(){for(var t=[],e=0,n=this.polys.length;e<n;e++)for(var r=this.polys[e].getSweepEvents(),i=0,o=r.length;i<o;i++)t.push(r[i]);return t}}])}(),Os=function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return Ss.run(\"union\",t,n)},Rs=function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return Ss.run(\"intersection\",t,n)},As=function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return Ss.run(\"difference\",t,n)},Ds=fs.set,Fs=Object.freeze({__proto__:null,difference:As,intersection:Rs,setPrecision:Ds,union:Os,xor:function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return Ss.run(\"xor\",t,n)}});function qs(t){if(!t)throw new Error(\"geojson is required\");var e=[];return xt(t,(function(t){e.push(t)})),C(e)}function Vs(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,r=K(t),i=K(e),o=r[0]-i[0],s=r[1]-i[1];return 1===n?Math.abs(o)+Math.abs(s):Math.pow(Math.pow(o,n)+Math.pow(s,n),1/n)}function Gs(t,e){var n,r,i=(e=e||{}).threshold||1e4,o=e.p||2,s=null!=(n=e.binary)&&n,a=e.alpha||-1,u=null!=(r=e.standardization)&&r,l=[];vt(t,(function(t){l.push(gi(t))}));for(var h=[],c=0;c<l.length;c++)h[c]=[];for(var f=0;f<l.length;f++)for(var g=f;g<l.length;g++){f===g&&(h[f][g]=0);var p=Vs(l[f],l[g],o);h[f][g]=p,h[g][f]=p}for(var v=0;v<l.length;v++)for(var d=0;d<l.length;d++){var y=h[v][d];0!==y&&(h[v][d]=s?y<=i?1:0:y<=i?Math.pow(y,a):0)}if(u)for(var m=0;m<l.length;m++)for(var _=h[m].reduce((function(t,e){return t+e}),0),x=0;x<l.length;x++)h[m][x]=h[m][x]/_;return h}function Bs(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=e<0,o=j(Math.abs(e),r.units,\"meters\");i&&(o=-Math.abs(o));var s=K(t),a=function(t,e,n,r){r=void 0===r?x:Number(r);var i=e/r,o=t[0]*Math.PI/180,s=z(t[1]),a=z(n),u=i*Math.cos(a),l=s+u;Math.abs(l)>Math.PI/2&&(l=l>0?Math.PI-l:-Math.PI-l);var h=Math.log(Math.tan(l/2+Math.PI/4)/Math.tan(s/2+Math.PI/4)),c=Math.abs(h)>1e-11?u/h:Math.cos(s),f=i*Math.sin(a)/c;return[(180*(o+f)/Math.PI+540)%360-180,180*l/Math.PI]}(s,o,n);return a[0]+=a[0]-s[0]>180?-360:s[0]-a[0]>180?360:0,I(a,r.properties)}function Ys(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=K(t),i=K(e);i[0]+=i[0]-r[0]>180?-360:r[0]-i[0]>180?360:0;var o=function(t,e,n){var r=n=void 0===n?x:Number(n),i=t[1]*Math.PI/180,o=e[1]*Math.PI/180,s=o-i,a=Math.abs(e[0]-t[0])*Math.PI/180;a>Math.PI&&(a-=2*Math.PI);var u=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(i/2+Math.PI/4)),l=Math.abs(u)>1e-11?s/u:Math.cos(i);return Math.sqrt(s*s+l*l*a*a)*r}(r,i);return j(o,\"meters\",n.units)}function zs(t,e,n){if(!Z(n=n||{}))throw new Error(\"options is invalid\");var r=n.pivot,i=n.mutate;if(!t)throw new Error(\"geojson is required\");if(null==e||isNaN(e))throw new Error(\"angle is required\");if(0===e)return t;var o=null!=r?r:gi(t);return!1!==i&&void 0!==i||(t=Ai(t)),ct(t,(function(t){var n=lt(o,t)+e,r=Ys(o,t),i=Q(Bs(o,r,n));t[0]=i[0],t[1]=i[1]})),t}function js(t,e,n,r){var i=(r=r||{}).steps||64,o=r.units||\"kilometers\",s=r.angle||0,a=r.pivot||t,u=r.properties||{};if(!t)throw new Error(\"center is required\");if(!e)throw new Error(\"xSemiAxis is required\");if(!n)throw new Error(\"ySemiAxis is required\");if(!Z(r))throw new Error(\"options must be an object\");if(!U(i))throw new Error(\"steps must be a number\");if(!U(s))throw new Error(\"angle must be a number\");var l=K(t);if(\"degrees\"!==o){var h=Bs(t,e,90,{units:o}),c=Bs(t,n,0,{units:o});e=K(h)[0]-l[0],n=K(c)[1]-l[1]}for(var f=[],g=0;g<i;g+=1){var p=-360*g/i,v=e*n/Math.sqrt(Math.pow(n,2)+Math.pow(e,2)*Math.pow(Xs(p),2)),d=e*n/Math.sqrt(Math.pow(e,2)+Math.pow(n,2)/Math.pow(Xs(p),2));if(p<-90&&p>=-270&&(v=-v),p<-180&&p>=-360&&(d=-d),\"degrees\"===o){var y=z(s),m=v*Math.cos(y)+d*Math.sin(y),_=d*Math.cos(y)-v*Math.sin(y);v=m,d=_}f.push([v+l[0],d+l[1]])}return f.push(f[0]),\"degrees\"===o?S([f],u):zs(S([f],u),s,{pivot:a})}function Xs(t){var e=t*Math.PI/180;return Math.tan(e)}function Us(t){return Vt(Rt(t))}function Zs(t){var e=[];return\"FeatureCollection\"===t.type?vt(t,(function(t){ct(t,(function(n){e.push(I(n,t.properties))}))})):\"Feature\"===t.type?ct(t,(function(n){e.push(I(n,t.properties))})):ct(t,(function(t){e.push(I(t))})),C(e)}var Hs=Math.PI/180,Ws=180/Math.PI,Js=function(t,e){this.lon=t,this.lat=e,this.x=Hs*t,this.y=Hs*e};Js.prototype.view=function(){return String(this.lon).slice(0,4)+\",\"+String(this.lat).slice(0,4)},Js.prototype.antipode=function(){var t=-1*this.lat,e=this.lon<0?180+this.lon:-1*(180-this.lon);return new Js(e,t)};var Ks=function(){this.coords=[],this.length=0};Ks.prototype.move_to=function(t){this.length++,this.coords.push(t)};var Qs=function(t){this.properties=t||{},this.geometries=[]};Qs.prototype.json=function(){if(this.geometries.length<=0)return{geometry:{type:\"LineString\",coordinates:null},type:\"Feature\",properties:this.properties};if(1===this.geometries.length)return{geometry:{type:\"LineString\",coordinates:this.geometries[0].coords},type:\"Feature\",properties:this.properties};for(var t=[],e=0;e<this.geometries.length;e++)t.push(this.geometries[e].coords);return{geometry:{type:\"MultiLineString\",coordinates:t},type:\"Feature\",properties:this.properties}},Qs.prototype.wkt=function(){for(var t=\"\",e=\"LINESTRING(\",n=function(t){e+=t[0]+\" \"+t[1]+\",\"},r=0;r<this.geometries.length;r++){if(0===this.geometries[r].coords.length)return\"LINESTRING(empty)\";this.geometries[r].coords.forEach(n),t+=e.substring(0,e.length-1)+\")\"}return t};var $s=function(t,e,n){if(!t||void 0===t.x||void 0===t.y)throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");if(!e||void 0===e.x||void 0===e.y)throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");this.start=new Js(t.x,t.y),this.end=new Js(e.x,e.y),this.properties=n||{};var r=this.start.x-this.end.x,i=this.start.y-this.end.y,o=Math.pow(Math.sin(i/2),2)+Math.cos(this.start.y)*Math.cos(this.end.y)*Math.pow(Math.sin(r/2),2);if(this.g=2*Math.asin(Math.sqrt(o)),this.g===Math.PI)throw new Error(\"it appears \"+t.view()+\" and \"+e.view()+\" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\");if(isNaN(this.g))throw new Error(\"could not calculate great circle between \"+t+\" and \"+e)};\n/*!\n   * Copyright (c) 2019, Dane Springmeyer\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   *     * Redistributions of source code must retain the above copyright\n   *       notice, this list of conditions and the following disclaimer.\n   *     * Redistributions in binary form must reproduce the above copyright\n   *       notice, this list of conditions and the following disclaimer in\n   *       the documentation and/or other materials provided with the\n   *       distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n   * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n   * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n   * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n   * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n   * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   */\nfunction ta(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=[];if(mt(t,(function(t){n.push(t.coordinates)})),n.length<2)throw new Error(\"Must specify at least 2 geometries\");var r=Rs.apply(Fs,[n[0]].concat(d(n.slice(1))));return 0===r.length?null:1===r.length?S(r[0],e.properties):R(r,e.properties)}function ea(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=JSON.stringify(n.properties||{}),i=v(t,4),o=i[0],s=i[1],a=i[2],u=i[3],l=(s+u)/2,h=(o+a)/2,c=2*e/ut([o,l],[a,l],n)*(a-o),f=2*e/ut([h,s],[h,u],n)*(u-s),g=c/2,p=2*g,d=Math.sqrt(3)/2*f,y=a-o,m=u-s,_=3/4*p,x=d,E=(y-p)/(p-g/2),k=Math.floor(E),b=(k*_-g/2-y)/2-g/2+_/2,w=Math.floor((m-d)/d),I=(m-w*d)/2,N=w*d-m>d/2;N&&(I-=d/4);for(var S=[],M=[],L=0;L<6;L++){var P=2*Math.PI/6*L;S.push(Math.cos(P)),M.push(Math.sin(P))}for(var T=[],O=0;O<=k;O++)for(var R=0;R<=w;R++){var A=O%2==1;if((0!==R||!A)&&(0!==R||!N)){var D=O*_+o-b,F=R*x+s+I;if(A&&(F-=d/2),!0===n.triangles)ra([D,F],c/2,f/2,JSON.parse(r),S,M).forEach((function(t){n.mask?ta(C([n.mask,t]))&&T.push(t):T.push(t)}));else{var q=na([D,F],c/2,f/2,JSON.parse(r),S,M);n.mask?ta(C([n.mask,q]))&&T.push(q):T.push(q)}}}return C(T)}function na(t,e,n,r,i,o){for(var s=[],a=0;a<6;a++){var u=t[0]+e*i[a],l=t[1]+n*o[a];s.push([u,l])}return s.push(s[0].slice()),S([s],r)}function ra(t,e,n,r,i,o){for(var s=[],a=0;a<6;a++){var u=[];u.push(t),u.push([t[0]+e*i[a],t[1]+n*o[a]]),u.push([t[0]+e*i[(a+1)%6],t[1]+n*o[(a+1)%6]]),u.push(t),s.push(S([u],r))}return s}function ia(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};n.mask&&!n.units&&(n.units=\"kilometers\");for(var r=[],i=t[0],o=t[1],s=t[2],a=t[3],u=e/ut([i,o],[s,o],n)*(s-i),l=e/ut([i,o],[i,a],n)*(a-o),h=s-i,c=a-o,f=Math.floor(h/u),g=(c-Math.floor(c/l)*l)/2,p=i+(h-f*u)/2;p<=s;){for(var v=o+g;v<=a;){var d=I([p,v],n.properties);n.mask?Cn(d,n.mask)&&r.push(d):r.push(d),v+=l}p+=u}return C(r)}function oa(t,e,n){for(var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=[],o=t[0],s=t[1],a=t[2],u=t[3],l=a-o,h=j(e,r.units,\"degrees\"),c=u-s,f=j(n,r.units,\"degrees\"),g=Math.floor(Math.abs(l)/h),p=Math.floor(Math.abs(c)/f),v=(c-p*f)/2,d=o+(l-g*h)/2,y=0;y<g;y++){for(var m=s+v,_=0;_<p;_++){var x=S([[[d,m],[d,m+f],[d+h,m+f],[d+h,m],[d,m]]],r.properties);r.mask?Oe(r.mask,x)&&i.push(x):i.push(x),m+=f}d+=h}return C(i)}function sa(t,e){return oa(t,e,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}function aa(t,e){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=[],i=e/ut([t[0],t[1]],[t[2],t[1]],n)*(t[2]-t[0]),o=e/ut([t[0],t[1]],[t[0],t[3]],n)*(t[3]-t[1]),s=0,a=t[0];a<=t[2];){for(var u=0,l=t[1];l<=t[3];){var h=null,c=null;s%2==0&&u%2==0?(h=S([[[a,l],[a,l+o],[a+i,l],[a,l]]],n.properties),c=S([[[a,l+o],[a+i,l+o],[a+i,l],[a,l+o]]],n.properties)):s%2==0&&u%2==1?(h=S([[[a,l],[a+i,l+o],[a+i,l],[a,l]]],n.properties),c=S([[[a,l],[a,l+o],[a+i,l+o],[a,l]]],n.properties)):u%2==0&&s%2==1?(h=S([[[a,l],[a,l+o],[a+i,l+o],[a,l]]],n.properties),c=S([[[a,l],[a+i,l+o],[a+i,l],[a,l]]],n.properties)):u%2==1&&s%2==1&&(h=S([[[a,l],[a,l+o],[a+i,l],[a,l]]],n.properties),c=S([[[a,l+o],[a+i,l+o],[a+i,l],[a,l+o]]],n.properties)),n.mask?(ta(C([n.mask,h]))&&r.push(h),ta(C([n.mask,c]))&&r.push(c)):(r.push(h),r.push(c)),l+=o,u++}s++,a+=i}return C(r)}\n/*!\n  * MarchingSquaresJS\n  * version 1.3.3\n  * https://github.com/RaumZeit/MarchingSquares.js\n  *\n  * @license GNU Affero General Public License.\n  * Copyright (c) 2015-2019 Ronny Lorenz <ronny@tbi.univie.ac.at>\n  */\nfunction ua(t,e,n){return t<e?(n-t)/(e-t):(t-n)/(t-e)}function la(t,e,n,r){var i;return n>r&&(i=n,n=r,r=i),t<e?t<n?(n-t)/(e-t):(r-t)/(e-t):t>r?(t-r)/(t-e):(t-n)/(t-e)}function ha(t,e,n,r){return t<e?(n-t)/(e-t):(t-r)/(t-e)}function ca(t,e,n,r){return t<e?(r-t)/(e-t):(t-n)/(t-e)}function fa(){this.successCallback=null,this.verbose=!1,this.polygons=!1,this.polygons_full=!1,this.linearRing=!0,this.noQuadTree=!1,this.noFrame=!1}function ga(t,e,n,r){var i=[];return t.polygons.forEach((function(t){t.forEach((function(t){t[0]+=e,t[1]+=n})),r.linearRing&&t.push(t[0]),i.push(t)})),i}function pa(t,e,n,r){return 0===n?(t+=1,e+=r[0][1]):1===n?t+=r[0][0]:2===n?e+=r[0][1]:3===n&&(t+=r[0][0],e+=1),[t,e]}function va(t,e,n){return 0===n?t++:1===n||(2===n?e++:3===n&&(t++,e++)),[t,e]}function da(t,e,n,r,i){var o=r,s=i,a=0,u=0;if(this.x=e,this.y=n,this.lowerBound=null,this.upperBound=null,this.childA=null,this.childB=null,this.childC=null,this.childD=null,1===r&&1===i)this.lowerBound=Math.min(t[n][e],t[n][e+1],t[n+1][e+1],t[n+1][e]),this.upperBound=Math.max(t[n][e],t[n][e+1],t[n+1][e+1],t[n+1][e]);else{if(r>1){for(;0!==o;)o>>=1,a++;r===1<<a-1&&a--,o=1<<a-1}if(i>1){for(;0!==s;)s>>=1,u++;i===1<<u-1&&u--,s=1<<u-1}this.childA=new da(t,e,n,o,s),this.lowerBound=this.childA.lowerBound,this.upperBound=this.childA.upperBound,r-o>0&&(this.childB=new da(t,e+o,n,r-o,s),this.lowerBound=Math.min(this.lowerBound,this.childB.lowerBound),this.upperBound=Math.max(this.upperBound,this.childB.upperBound),i-s>0&&(this.childC=new da(t,e+o,n+s,r-o,i-s),this.lowerBound=Math.min(this.lowerBound,this.childC.lowerBound),this.upperBound=Math.max(this.upperBound,this.childC.upperBound))),i-s>0&&(this.childD=new da(t,e,n+s,o,i-s),this.lowerBound=Math.min(this.lowerBound,this.childD.lowerBound),this.upperBound=Math.max(this.upperBound,this.childD.upperBound))}}function ya(t){var e,n;if(!t)throw new Error(\"data is required\");if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Error(\"data must be scalar field, i.e. array of arrays\");if(t.length<2)throw new Error(\"data must contain at least two rows\");if((n=t[0].length)<2)throw new Error(\"data must contain at least two columns\");for(e=1;e<t.length;e++){if(!Array.isArray(t[e]))throw new Error(\"Row \"+e+\" is not an array\");if(t[e].length!=n)throw new Error(\"unequal row lengths detected, please provide a regular grid\")}this.data=t,this.root=new da(t,0,0,t[0].length-1,t.length-1)}function ma(t,e,n){var r,i,o,s=!1,a=!1,u=null,l=null,h=null,c=null,f=null,g=[];if(!t)throw new Error(\"data is required\");if(null==e)throw new Error(\"threshold is required\");if(n&&\"object\"!==m(n))throw new Error(\"options must be an object\");if(r=function(t){var e,n,r,i,o;for(i=new fa,t=t||{},o=Object.keys(i),e=0;e<o.length;e++)null!=(r=t[n=o[e]])&&(i[n]=r);return i.polygons_full=!i.polygons,i.interpolate=ua,i}(n),t instanceof ya)u=t,l=t.root,h=t.data,r.noQuadTree||(s=!0);else{if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Error(\"input is neither array of arrays nor object retrieved from 'QuadTree()'\");h=t}if(Array.isArray(e)){for(a=!0,r.noQuadTree||(s=!0),i=0;i<e.length;i++)if(isNaN(+e[i]))throw new Error(\"threshold[\"+i+\"] is not a number\")}else{if(isNaN(+e))throw new Error(\"threshold must be a number or array of numbers\");e=[e]}return s&&!l&&(u=new ya(h),l=u.root,h=u.data),r.verbose&&(r.polygons?console.log(\"MarchingSquaresJS-isoLines: returning single lines (polygons) for each grid cell\"):console.log(\"MarchingSquaresJS-isoLines: returning line paths (polygons) for entire data grid\"),a&&console.log(\"MarchingSquaresJS-isoLines: multiple lines requested, returning array of line paths instead of lines for a single threshold\")),e.forEach((function(t,e){if(f=[],r.threshold=t,r.verbose&&console.log(\"MarchingSquaresJS-isoLines: computing iso lines for threshold \"+t),r.polygons)if(s)l.cellsBelowThreshold(r.threshold,!0).forEach((function(t){f=f.concat(ga(_a(h,t.x,t.y,r),t.x,t.y,r))}));else for(o=0;o<h.length-1;++o)for(e=0;e<h[0].length-1;++e)f=f.concat(ga(_a(h,e,o,r),e,o,r));else{for(c=[],e=0;e<h[0].length-1;++e)c[e]=[];if(s)l.cellsBelowThreshold(r.threshold,!1).forEach((function(t){c[t.x][t.y]=_a(h,t.x,t.y,r)}));else for(e=0;e<h[0].length-1;++e)for(o=0;o<h.length-1;++o)c[e][o]=_a(h,e,o,r);f=function(t,e,n){var r,i,o,s,a,u,l,h,c,f,g,p,v,d,y,_=[],x=t.length-1,E=t[0].length-1,k=[\"right\",\"bottom\",\"left\",\"top\"],b=[0,-1,0,1],w=[-1,0,1,0],I={bottom:1,left:2,top:3,right:0};return n.noFrame||function(t,e){var n,r,i,o,s;for(n=!0,r=t[0].length,i=t.length,s=0;s<i;s++)if(t[s][0]>=e||t[s][r-1]>=e){n=!1;break}if(n&&(t[i-1][0]>=e||t[i-1][r-1]>=e)&&(n=!1),n)for(o=0;o<r-1;o++)if(t[0][o]>=e||t[i-1][o]>e){n=!1;break}return n}(t,n.threshold)&&(n.linearRing?_.push([[0,0],[0,x],[E,x],[E,0],[0,0]]):_.push([[0,0],[0,x],[E,x],[E,0]])),e.forEach((function(t,N){t.forEach((function(t,S){for(r=null,i=0;i<4;i++)if(r=k[i],\"object\"===m(t.edges[r])){for(a=[],o=t.edges[r],u=r,l=N,h=S,c=!1,f=[N+o.path[0][0],S+o.path[0][1]],a.push(f);!c&&\"object\"===m((s=e[l][h]).edges[u]);)if(o=s.edges[u],delete s.edges[u],(g=o.path[1])[0]+=l,g[1]+=h,a.push(g),u=o.move.enter,l+=o.move.x,h+=o.move.y,void 0===e[l]||void 0===e[l][h]){if(!n.linearRing)break;if(p=0,v=0,l===E?(l--,p=0):l<0?(l++,p=2):h===x?(h--,p=3):h<0&&(h++,p=1),l===N&&h===S&&p===I[r]){c=!0,u=r;break}for(;;){if(d=!1,v>4)throw new Error(\"Direction change counter overflow! This should never happen!\");if(void 0!==e[l]&&void 0!==e[l][h]&&(s=e[l][h],y=k[p],\"object\"===m(s.edges[y]))){o=s.edges[y],a.push(pa(l,h,p,o.path)),u=y,d=!0;break}if(d)break;if(a.push(va(l,h,p)),h+=w[p],void 0!==e[l+=b[p]]&&void 0!==e[l][h]||(0===p&&h<0||1===p&&l<0||2===p&&h===x||3===p&&l===E)&&(l-=b[p],h-=w[p],p=(p+1)%4,v++),l===N&&h===S&&p===I[r]){c=!0,u=r;break}}}!n.linearRing||a[a.length-1][0]===f[0]&&a[a.length-1][1]===f[1]||a.push(f),_.push(a)}}))})),_}(h,c,r)}a?g.push(f):g=f,\"function\"==typeof r.successCallback&&r.successCallback(g,t)})),g}function _a(t,e,n,r){var i,o,s,a,u,l,h=0,c=t[n+1][e],f=t[n+1][e+1],g=t[n][e+1],p=t[n][e],v=r.threshold;if(!(isNaN(p)||isNaN(g)||isNaN(f)||isNaN(c))){switch(h|=c>=v?8:0,h|=f>=v?4:0,h|=g>=v?2:0,l={cval:h=+(h|=p>=v?1:0),polygons:[],edges:{},x0:p,x1:g,x2:f,x3:c},h){case 0:r.polygons&&l.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 15:break;case 14:i=r.interpolate(p,c,v),a=r.interpolate(p,g,v),r.polygons_full&&(l.edges.left={path:[[0,i],[a,0]],move:{x:0,y:-1,enter:\"top\"}}),r.polygons&&l.polygons.push([[0,0],[0,i],[a,0]]);break;case 13:a=r.interpolate(p,g,v),o=r.interpolate(g,f,v),r.polygons_full&&(l.edges.bottom={path:[[a,0],[1,o]],move:{x:1,y:0,enter:\"left\"}}),r.polygons&&l.polygons.push([[a,0],[1,o],[1,0]]);break;case 11:o=r.interpolate(g,f,v),s=r.interpolate(c,f,v),r.polygons_full&&(l.edges.right={path:[[1,o],[s,1]],move:{x:0,y:1,enter:\"bottom\"}}),r.polygons&&l.polygons.push([[1,o],[s,1],[1,1]]);break;case 7:i=r.interpolate(p,c,v),s=r.interpolate(c,f,v),r.polygons_full&&(l.edges.top={path:[[s,1],[0,i]],move:{x:-1,y:0,enter:\"right\"}}),r.polygons&&l.polygons.push([[s,1],[0,i],[0,1]]);break;case 1:i=r.interpolate(p,c,v),a=r.interpolate(p,g,v),r.polygons_full&&(l.edges.bottom={path:[[a,0],[0,i]],move:{x:-1,y:0,enter:\"right\"}}),r.polygons&&l.polygons.push([[a,0],[0,i],[0,1],[1,1],[1,0]]);break;case 2:a=r.interpolate(p,g,v),o=r.interpolate(g,f,v),r.polygons_full&&(l.edges.right={path:[[1,o],[a,0]],move:{x:0,y:-1,enter:\"top\"}}),r.polygons&&l.polygons.push([[0,0],[0,1],[1,1],[1,o],[a,0]]);break;case 4:o=r.interpolate(g,f,v),s=r.interpolate(c,f,v),r.polygons_full&&(l.edges.top={path:[[s,1],[1,o]],move:{x:1,y:0,enter:\"left\"}}),r.polygons&&l.polygons.push([[0,0],[0,1],[s,1],[1,o],[1,0]]);break;case 8:i=r.interpolate(p,c,v),s=r.interpolate(c,f,v),r.polygons_full&&(l.edges.left={path:[[0,i],[s,1]],move:{x:0,y:1,enter:\"bottom\"}}),r.polygons&&l.polygons.push([[0,0],[0,i],[s,1],[1,1],[1,0]]);break;case 12:i=r.interpolate(p,c,v),o=r.interpolate(g,f,v),r.polygons_full&&(l.edges.left={path:[[0,i],[1,o]],move:{x:1,y:0,enter:\"left\"}}),r.polygons&&l.polygons.push([[0,0],[0,i],[1,o],[1,0]]);break;case 9:a=r.interpolate(p,g,v),s=r.interpolate(c,f,v),r.polygons_full&&(l.edges.bottom={path:[[a,0],[s,1]],move:{x:0,y:1,enter:\"bottom\"}}),r.polygons&&l.polygons.push([[a,0],[s,1],[1,1],[1,0]]);break;case 3:i=r.interpolate(p,c,v),o=r.interpolate(g,f,v),r.polygons_full&&(l.edges.right={path:[[1,o],[0,i]],move:{x:-1,y:0,enter:\"right\"}}),r.polygons&&l.polygons.push([[0,i],[0,1],[1,1],[1,o]]);break;case 6:a=r.interpolate(p,g,v),s=r.interpolate(c,f,v),r.polygons_full&&(l.edges.top={path:[[s,1],[a,0]],move:{x:0,y:-1,enter:\"top\"}}),r.polygons&&l.polygons.push([[0,0],[0,1],[s,1],[a,0]]);break;case 10:i=r.interpolate(p,c,v),o=r.interpolate(g,f,v),a=r.interpolate(p,g,v),s=r.interpolate(c,f,v),u=(p+g+f+c)/4,r.polygons_full&&(u<v?(l.edges.left={path:[[0,i],[s,1]],move:{x:0,y:1,enter:\"bottom\"}},l.edges.right={path:[[1,o],[a,0]],move:{x:0,y:-1,enter:\"top\"}}):(l.edges.right={path:[[1,o],[s,1]],move:{x:0,y:1,enter:\"bottom\"}},l.edges.left={path:[[0,i],[a,0]],move:{x:0,y:-1,enter:\"top\"}})),r.polygons&&(u<v?l.polygons.push([[0,0],[0,i],[s,1],[1,1],[1,o],[a,0]]):(l.polygons.push([[0,0],[0,i],[a,0]]),l.polygons.push([[s,1],[1,1],[1,o]])));break;case 5:i=r.interpolate(p,c,v),o=r.interpolate(g,f,v),a=r.interpolate(p,g,v),s=r.interpolate(c,f,v),u=(p+g+f+c)/4,r.polygons_full&&(u<v?(l.edges.bottom={path:[[a,0],[0,i]],move:{x:-1,y:0,enter:\"right\"}},l.edges.top={path:[[s,1],[1,o]],move:{x:1,y:0,enter:\"left\"}}):(l.edges.top={path:[[s,1],[0,i]],move:{x:-1,y:0,enter:\"right\"}},l.edges.bottom={path:[[a,0],[1,o]],move:{x:1,y:0,enter:\"left\"}})),r.polygons&&(u<v?l.polygons.push([[0,i],[0,1],[s,1],[1,o],[1,0],[a,0]]):(l.polygons.push([[0,i],[0,1],[s,1]]),l.polygons.push([[a,0],[1,o],[1,0]])))}return l}}$s.prototype.interpolate=function(t){var e=Math.sin((1-t)*this.g)/Math.sin(this.g),n=Math.sin(t*this.g)/Math.sin(this.g),r=e*Math.cos(this.start.y)*Math.cos(this.start.x)+n*Math.cos(this.end.y)*Math.cos(this.end.x),i=e*Math.cos(this.start.y)*Math.sin(this.start.x)+n*Math.cos(this.end.y)*Math.sin(this.end.x),o=e*Math.sin(this.start.y)+n*Math.sin(this.end.y),s=Ws*Math.atan2(o,Math.sqrt(Math.pow(r,2)+Math.pow(i,2)));return[Ws*Math.atan2(i,r),s]},$s.prototype.Arc=function(t,e){var n=[];if(!t||t<=2)n.push([this.start.lon,this.start.lat]),n.push([this.end.lon,this.end.lat]);else for(var r=1/(t-1),i=0;i<t;++i){var o=r*i,s=this.interpolate(o);n.push(s)}for(var a=!1,u=0,l=e&&e.offset?e.offset:10,h=180-l,c=-180+l,f=360-l,g=1;g<n.length;++g){var p=n[g-1][0],v=n[g][0],d=Math.abs(v-p);d>f&&(v>h&&p<c||p>h&&v<c)?a=!0:d>u&&(u=d)}var y=[];if(a&&u<l){var m=[];y.push(m);for(var _=0;_<n.length;++_){var x=parseFloat(n[_][0]);if(_>0&&Math.abs(x-n[_-1][0])>f){var E=parseFloat(n[_-1][0]),k=parseFloat(n[_-1][1]),b=parseFloat(n[_][0]),w=parseFloat(n[_][1]);if(E>-180&&E<c&&180===b&&_+1<n.length&&n[_-1][0]>-180&&n[_-1][0]<c){m.push([-180,n[_][1]]),_++,m.push([n[_][0],n[_][1]]);continue}if(E>h&&E<180&&-180===b&&_+1<n.length&&n[_-1][0]>h&&n[_-1][0]<180){m.push([180,n[_][1]]),_++,m.push([n[_][0],n[_][1]]);continue}if(E<c&&b>h){var I=E;E=b,b=I;var N=k;k=w,w=N}if(E>h&&b<c&&(b+=360),E<=180&&b>=180&&E<b){var S=(180-E)/(b-E),M=S*w+(1-S)*k;m.push([n[_-1][0]>h?180:-180,M]),(m=[]).push([n[_-1][0]>h?-180:180,M]),y.push(m)}else m=[],y.push(m);m.push([x,n[_][1]])}else m.push([n[_][0],n[_][1]])}}else{var L=[];y.push(L);for(var P=0;P<n.length;++P)L.push([n[P][0],n[P][1]])}for(var C=new Qs(this.properties),T=0;T<y.length;++T){var O=new Ks;C.geometries.push(O);for(var R=y[T],A=0;A<R.length;++A)O.move_to(R[A])}return C},da.prototype.cellsInBand=function(t,e,n){var r=[];return n=void 0===n||n,this.lowerBound>e||this.upperBound<t||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(r=r.concat(this.childA.cellsInBand(t,e,n))),this.childB&&(r=r.concat(this.childB.cellsInBand(t,e,n))),this.childD&&(r=r.concat(this.childD.cellsInBand(t,e,n))),this.childC&&(r=r.concat(this.childC.cellsInBand(t,e,n)))):(n||this.lowerBound<=t||this.upperBound>=e)&&r.push({x:this.x,y:this.y})),r},da.prototype.cellsBelowThreshold=function(t,e){var n=[];return e=void 0===e||e,this.lowerBound>t||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(n=n.concat(this.childA.cellsBelowThreshold(t,e))),this.childB&&(n=n.concat(this.childB.cellsBelowThreshold(t,e))),this.childD&&(n=n.concat(this.childD.cellsBelowThreshold(t,e))),this.childC&&(n=n.concat(this.childC.cellsBelowThreshold(t,e)))):(e||this.upperBound>=t)&&n.push({x:this.x,y:this.y})),n};var xa={square:function(t,e,n,r,i,o){o.polygons&&t.polygons.push([[0,0],[0,1],[1,1],[1,0]])},triangle_bl:function(t,e,n,r,i,o){var s=o.interpolate(e,n,o.minV,o.maxV),a=o.interpolate(e,i,o.minV,o.maxV);o.polygons_full&&(t.edges.lb={path:[[0,a],[s,0]],move:{x:0,y:-1,enter:\"tl\"}}),o.polygons&&t.polygons.push([[0,a],[s,0],[0,0]])},triangle_br:function(t,e,n,r,i,o){var s=o.interpolate(e,n,o.minV,o.maxV),a=o.interpolate(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.br={path:[[s,0],[1,a]],move:{x:1,y:0,enter:\"lb\"}}),o.polygons&&t.polygons.push([[s,0],[1,a],[1,0]])},triangle_tr:function(t,e,n,r,i,o){var s=o.interpolate(n,r,o.minV,o.maxV),a=o.interpolate(i,r,o.minV,o.maxV);o.polygons_full&&(t.edges.rt={path:[[1,s],[a,1]],move:{x:0,y:1,enter:\"br\"}}),o.polygons&&t.polygons.push([[1,s],[a,1],[1,1]])},triangle_tl:function(t,e,n,r,i,o){var s=o.interpolate(i,r,o.minV,o.maxV),a=o.interpolate(e,i,o.minV,o.maxV);o.polygons_full&&(t.edges.tl={path:[[s,1],[0,a]],move:{x:-1,y:0,enter:\"rt\"}}),o.polygons&&t.polygons.push([[0,a],[0,1],[s,1]])},tetragon_t:function(t,e,n,r,i,o){var s=o.interpolate(n,r,o.minV,o.maxV),a=o.interpolate(e,i,o.minV,o.maxV);o.polygons_full&&(t.edges.rt={path:[[1,s],[0,a]],move:{x:-1,y:0,enter:\"rt\"}}),o.polygons&&t.polygons.push([[0,a],[0,1],[1,1],[1,s]])},tetragon_r:function(t,e,n,r,i,o){var s=o.interpolate(e,n,o.minV,o.maxV),a=o.interpolate(i,r,o.minV,o.maxV);o.polygons_full&&(t.edges.br={path:[[s,0],[a,1]],move:{x:0,y:1,enter:\"br\"}}),o.polygons&&t.polygons.push([[s,0],[a,1],[1,1],[1,0]])},tetragon_b:function(t,e,n,r,i,o){var s=o.interpolate(e,i,o.minV,o.maxV),a=o.interpolate(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.lb={path:[[0,s],[1,a]],move:{x:1,y:0,enter:\"lb\"}}),o.polygons&&t.polygons.push([[0,0],[0,s],[1,a],[1,0]])},tetragon_l:function(t,e,n,r,i,o){var s=o.interpolate(i,r,o.minV,o.maxV),a=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(t.edges.tl={path:[[s,1],[a,0]],move:{x:0,y:-1,enter:\"tl\"}}),o.polygons&&t.polygons.push([[0,0],[0,1],[s,1],[a,0]])},tetragon_bl:function(t,e,n,r,i,o){var s=o.interpolate_a(e,n,o.minV,o.maxV),a=o.interpolate_b(e,n,o.minV,o.maxV),u=o.interpolate_a(e,i,o.minV,o.maxV),l=o.interpolate_b(e,i,o.minV,o.maxV);o.polygons_full&&(t.edges.bl={path:[[s,0],[0,u]],move:{x:-1,y:0,enter:\"rb\"}},t.edges.lt={path:[[0,l],[a,0]],move:{x:0,y:-1,enter:\"tr\"}}),o.polygons&&t.polygons.push([[s,0],[0,u],[0,l],[a,0]])},tetragon_br:function(t,e,n,r,i,o){var s=o.interpolate_a(e,n,o.minV,o.maxV),a=o.interpolate_b(e,n,o.minV,o.maxV),u=o.interpolate_a(n,r,o.minV,o.maxV),l=o.interpolate_b(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.bl={path:[[s,0],[1,l]],move:{x:1,y:0,enter:\"lt\"}},t.edges.rb={path:[[1,u],[a,0]],move:{x:0,y:-1,enter:\"tr\"}}),o.polygons&&t.polygons.push([[s,0],[1,l],[1,u],[a,0]])},tetragon_tr:function(t,e,n,r,i,o){var s=o.interpolate_a(i,r,o.minV,o.maxV),a=o.interpolate_b(i,r,o.minV,o.maxV),u=o.interpolate_b(n,r,o.minV,o.maxV),l=o.interpolate_a(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.rb={path:[[1,l],[s,1]],move:{x:0,y:1,enter:\"bl\"}},t.edges.tr={path:[[a,1],[1,u]],move:{x:1,y:0,enter:\"lt\"}}),o.polygons&&t.polygons.push([[1,l],[s,1],[a,1],[1,u]])},tetragon_tl:function(t,e,n,r,i,o){var s=o.interpolate_a(i,r,o.minV,o.maxV),a=o.interpolate_b(i,r,o.minV,o.maxV),u=o.interpolate_b(e,i,o.minV,o.maxV),l=o.interpolate_a(e,i,o.minV,o.maxV);o.polygons_full&&(t.edges.tr={path:[[a,1],[0,l]],move:{x:-1,y:0,enter:\"rb\"}},t.edges.lt={path:[[0,u],[s,1]],move:{x:0,y:1,enter:\"bl\"}}),o.polygons&&t.polygons.push([[a,1],[0,l],[0,u],[s,1]])},tetragon_lr:function(t,e,n,r,i,o){var s=o.interpolate_a(e,i,o.minV,o.maxV),a=o.interpolate_b(e,i,o.minV,o.maxV),u=o.interpolate_b(n,r,o.minV,o.maxV),l=o.interpolate_a(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.lt={path:[[0,a],[1,u]],move:{x:1,y:0,enter:\"lt\"}},t.edges.rb={path:[[1,l],[0,s]],move:{x:-1,y:0,enter:\"rb\"}}),o.polygons&&t.polygons.push([[0,s],[0,a],[1,u],[1,l]])},tetragon_tb:function(t,e,n,r,i,o){var s=o.interpolate_a(i,r,o.minV,o.maxV),a=o.interpolate_b(i,r,o.minV,o.maxV),u=o.interpolate_b(e,n,o.minV,o.maxV),l=o.interpolate_a(e,n,o.minV,o.maxV);o.polygons_full&&(t.edges.tr={path:[[a,1],[u,0]],move:{x:0,y:-1,enter:\"tr\"}},t.edges.bl={path:[[l,0],[s,1]],move:{x:0,y:1,enter:\"bl\"}}),o.polygons&&t.polygons.push([[l,0],[s,1],[a,1],[u,0]])},pentagon_tr:function(t,e,n,r,i,o){var s=o.interpolate(i,r,o.minV,o.maxV),a=o.interpolate(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.tl={path:[[s,1],[1,a]],move:{x:1,y:0,enter:\"lb\"}}),o.polygons&&t.polygons.push([[0,0],[0,1],[s,1],[1,a],[1,0]])},pentagon_tl:function(t,e,n,r,i,o){var s=o.interpolate(e,i,o.minV,o.maxV),a=o.interpolate(i,r,o.minV,o.maxV);o.polygons_full&&(t.edges.lb={path:[[0,s],[a,1]],move:{x:0,y:1,enter:\"br\"}}),o.polygons&&t.polygons.push([[0,0],[0,s],[a,1],[1,1],[1,0]])},pentagon_br:function(t,e,n,r,i,o){var s=o.interpolate(e,n,o.minV,o.maxV),a=o.interpolate(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.rt={path:[[1,a],[s,0]],move:{x:0,y:-1,enter:\"tl\"}}),o.polygons&&t.polygons.push([[0,0],[0,1],[1,1],[1,a],[s,0]])},pentagon_bl:function(t,e,n,r,i,o){var s=o.interpolate(e,i,o.minV,o.maxV),a=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(t.edges.br={path:[[a,0],[0,s]],move:{x:-1,y:0,enter:\"rt\"}}),o.polygons&&t.polygons.push([[0,s],[0,1],[1,1],[1,0],[a,0]])},pentagon_tr_rl:function(t,e,n,r,i,o){var s=o.interpolate(e,i,o.minV,o.maxV),a=o.interpolate(i,r,o.minV,o.maxV),u=o.interpolate_b(n,r,o.minV,o.maxV),l=o.interpolate_a(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.tl={path:[[a,1],[1,u]],move:{x:1,y:0,enter:\"lt\"}},t.edges.rb={path:[[1,l],[0,s]],move:{x:-1,y:0,enter:\"rt\"}}),o.polygons&&t.polygons.push([[0,s],[0,1],[a,1],[1,u],[1,l]])},pentagon_rb_bt:function(t,e,n,r,i,o){var s=o.interpolate(n,r,o.minV,o.maxV),a=o.interpolate_b(e,n,o.minV,o.maxV),u=o.interpolate_a(e,n,o.minV,o.maxV),l=o.interpolate(i,r,o.minV,o.maxV);o.polygons_full&&(t.edges.rt={path:[[1,s],[a,0]],move:{x:0,y:-1,enter:\"tr\"}},t.edges.bl={path:[[u,0],[l,1]],move:{x:0,y:1,enter:\"br\"}}),o.polygons&&t.polygons.push([[l,1],[1,1],[1,s],[a,0],[u,0]])},pentagon_bl_lr:function(t,e,n,r,i,o){var s=o.interpolate(e,n,o.minV,o.maxV),a=o.interpolate_a(e,i,o.minV,o.maxV),u=o.interpolate_b(e,i,o.minV,o.maxV),l=o.interpolate(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.br={path:[[s,0],[0,a]],move:{x:-1,y:0,enter:\"rb\"}},t.edges.lt={path:[[0,u],[1,l]],move:{x:1,y:0,enter:\"lb\"}}),o.polygons&&t.polygons.push([[s,0],[0,a],[0,u],[1,l],[1,0]])},pentagon_lt_tb:function(t,e,n,r,i,o){var s=o.interpolate(e,i,o.minV,o.maxV),a=o.interpolate_a(i,r,o.minV,o.maxV),u=o.interpolate_b(i,r,o.minV,o.maxV),l=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(t.edges.lb={path:[[0,s],[a,1]],move:{x:0,y:1,enter:\"bl\"}},t.edges.tr={path:[[u,1],[l,0]],move:{x:0,y:-1,enter:\"tl\"}}),o.polygons&&t.polygons.push([[0,0],[0,s],[a,1],[u,1],[l,0]])},pentagon_bl_tb:function(t,e,n,r,i,o){var s=o.interpolate(e,i,o.minV,o.maxV),a=o.interpolate(i,r,o.minV,o.maxV),u=o.interpolate_b(e,n,o.minV,o.maxV),l=o.interpolate_a(e,n,o.minV,o.maxV);o.polygons_full&&(t.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:\"rt\"}},t.edges.tl={path:[[a,1],[u,0]],move:{x:0,y:-1,enter:\"tr\"}}),o.polygons&&t.polygons.push([[0,s],[0,1],[a,1],[u,0],[l,0]])},pentagon_lt_rl:function(t,e,n,r,i,o){var s=o.interpolate_a(e,i,o.minV,o.maxV),a=o.interpolate_b(e,i,o.minV,o.maxV),u=o.interpolate(i,r,o.minV,o.maxV),l=o.interpolate(n,i,o.minV,o.maxV);o.polygons_full&&(t.edges.lt={path:[[0,a],[u,1]],move:{x:0,y:1,enter:\"br\"}},t.edges.rt={path:[[1,l],[0,s]],move:{x:-1,y:0,enter:\"rb\"}}),o.polygons&&t.polygons.push([[0,s],[0,a],[u,1],[1,1],[1,l]])},pentagon_tr_bt:function(t,e,n,r,i,o){var s=o.interpolate_a(i,r,o.minV,o.maxV),a=o.interpolate_b(i,r,o.minV,o.maxV),u=o.interpolate(n,r,o.minV,o.maxV),l=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(t.edges.br={path:[[l,0],[s,1]],move:{x:0,y:1,enter:\"bl\"}},t.edges.tr={path:[[a,1],[1,u]],move:{x:1,y:0,enter:\"lb\"}}),o.polygons&&t.polygons.push([[s,1],[a,1],[1,u],[1,0],[l,0]])},pentagon_rb_lr:function(t,e,n,r,i,o){var s=o.interpolate(e,i,o.minV,o.maxV),a=o.interpolate_b(n,r,o.minV,o.maxV),u=o.interpolate_a(n,r,o.minV,o.maxV),l=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(t.edges.lb={path:[[0,s],[1,a]],move:{x:1,y:0,enter:\"lt\"}},t.edges.rb={path:[[1,u],[l,0]],move:{x:0,y:-1,enter:\"tl\"}}),o.polygons&&t.polygons.push([[0,0],[0,s],[1,a],[1,u],[l,0]])},hexagon_lt_tr:function(t,e,n,r,i,o){var s=o.interpolate(e,i,o.minV,o.maxV),a=o.interpolate_a(i,r,o.minV,o.maxV),u=o.interpolate_b(i,r,o.minV,o.maxV),l=o.interpolate(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.lb={path:[[0,s],[a,1]],move:{x:0,y:1,enter:\"bl\"}},t.edges.tr={path:[[u,1],[1,l]],move:{x:1,y:0,enter:\"lb\"}}),o.polygons&&t.polygons.push([[0,0],[0,s],[a,1],[u,1],[1,l],[1,0]])},hexagon_bl_lt:function(t,e,n,r,i,o){var s=o.interpolate(e,n,o.minV,o.maxV),a=o.interpolate_a(e,i,o.minV,o.maxV),u=o.interpolate_b(e,i,o.minV,o.maxV),l=o.interpolate(i,r,o.minV,o.maxV);o.polygons_full&&(t.edges.br={path:[[s,0],[0,a]],move:{x:-1,y:0,enter:\"rb\"}},t.edges.lt={path:[[0,u],[l,1]],move:{x:0,y:1,enter:\"br\"}}),o.polygons&&t.polygons.push([[s,0],[0,a],[0,u],[l,1],[1,1],[1,0]])},hexagon_bl_rb:function(t,e,n,r,i,o){var s=o.interpolate_a(e,n,o.minV,o.maxV),a=o.interpolate_b(e,n,o.minV,o.maxV),u=o.interpolate(e,i,o.minV,o.maxV),l=o.interpolate(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.bl={path:[[s,0],[0,u]],move:{x:-1,y:0,enter:\"rt\"}},t.edges.rt={path:[[1,l],[a,0]],move:{x:0,y:-1,enter:\"tr\"}}),o.polygons&&t.polygons.push([[s,0],[0,u],[0,1],[1,1],[1,l],[a,0]])},hexagon_tr_rb:function(t,e,n,r,i,o){var s=o.interpolate(e,n,o.minV,o.maxV),a=o.interpolate(i,r,o.minV,o.maxV),u=o.interpolate_b(n,r,o.minV,o.maxV),l=o.interpolate_a(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.tl={path:[[a,1],[1,u]],move:{x:1,y:0,enter:\"lt\"}},t.edges.rb={path:[[1,l],[s,0]],move:{x:0,y:-1,enter:\"tl\"}}),o.polygons&&t.polygons.push([[0,0],[0,1],[a,1],[1,u],[1,l],[s,0]])},hexagon_lt_rb:function(t,e,n,r,i,o){var s=o.interpolate(e,i,o.minV,o.maxV),a=o.interpolate(i,r,o.minV,o.maxV),u=o.interpolate(n,r,o.minV,o.maxV),l=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(t.edges.lb={path:[[0,s],[a,1]],move:{x:0,y:1,enter:\"br\"}},t.edges.rt={path:[[1,u],[l,0]],move:{x:0,y:-1,enter:\"tl\"}}),o.polygons&&t.polygons.push([[0,0],[0,s],[a,1],[1,1],[1,u],[l,0]])},hexagon_bl_tr:function(t,e,n,r,i,o){var s=o.interpolate(e,n,o.minV,o.maxV),a=o.interpolate(e,i,o.minV,o.maxV),u=o.interpolate(i,r,o.minV,o.maxV),l=o.interpolate(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.br={path:[[s,0],[0,a]],move:{x:-1,y:0,enter:\"rt\"}},t.edges.tl={path:[[u,1],[1,l]],move:{x:1,y:0,enter:\"lb\"}}),o.polygons&&t.polygons.push([[s,0],[0,a],[0,1],[u,1],[1,l],[1,0]])},heptagon_tr:function(t,e,n,r,i,o){var s=o.interpolate_a(e,n,o.minV,o.maxV),a=o.interpolate_b(e,n,o.minV,o.maxV),u=o.interpolate_a(e,i,o.minV,o.maxV),l=o.interpolate_b(e,i,o.minV,o.maxV),h=o.interpolate(i,r,o.minV,o.maxV),c=o.interpolate(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.bl={path:[[s,0],[0,u]],move:{x:-1,y:0,enter:\"rb\"}},t.edges.lt={path:[[0,l],[h,1]],move:{x:0,y:1,enter:\"br\"}},t.edges.rt={path:[[1,c],[a,0]],move:{x:0,y:-1,enter:\"tr\"}}),o.polygons&&t.polygons.push([[s,0],[0,u],[0,l],[h,1],[1,1],[1,c],[a,0]])},heptagon_bl:function(t,e,n,r,i,o){var s=o.interpolate(e,n,o.minV,o.maxV),a=o.interpolate(e,i,o.minV,o.maxV),u=o.interpolate_a(i,r,o.minV,o.maxV),l=o.interpolate_b(i,r,o.minV,o.maxV),h=o.interpolate_b(n,r,o.minV,o.maxV),c=o.interpolate_a(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.lb={path:[[0,a],[u,1]],move:{x:0,y:1,enter:\"bl\"}},t.edges.tr={path:[[l,1],[1,h]],move:{x:1,y:0,enter:\"lt\"}},t.edges.rb={path:[[1,c],[s,0]],move:{x:0,y:-1,enter:\"tl\"}}),o.polygons&&t.polygons.push([[0,0],[0,a],[u,1],[l,1],[1,h],[1,c],[s,0]])},heptagon_tl:function(t,e,n,r,i,o){var s=o.interpolate_a(e,n,o.minV,o.maxV),a=o.interpolate_b(e,n,o.minV,o.maxV),u=o.interpolate(e,i,o.minV,o.maxV),l=o.interpolate(i,r,o.minV,o.maxV),h=o.interpolate_b(n,r,o.minV,o.maxV),c=o.interpolate_a(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.bl={path:[[s,0],[0,u]],move:{x:-1,y:0,enter:\"rt\"}},t.edges.tl={path:[[l,1],[1,h]],move:{x:1,y:0,enter:\"lt\"}},t.edges.rb={path:[[1,c],[a,0]],move:{x:0,y:-1,enter:\"tr\"}}),o.polygons&&t.polygons.push([[s,0],[0,u],[0,1],[l,1],[1,h],[1,c],[a,0]])},heptagon_br:function(t,e,n,r,i,o){var s=o.interpolate(e,n,o.minV,o.maxV),a=o.interpolate_a(e,i,o.minV,o.maxV),u=o.interpolate_b(e,i,o.minV,o.maxV),l=o.interpolate_a(i,r,o.minV,o.maxV),h=o.interpolate_b(i,r,o.minV,o.maxV),c=o.interpolate(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.br={path:[[s,0],[0,a]],move:{x:-1,y:0,enter:\"rb\"}},t.edges.lt={path:[[0,u],[l,1]],move:{x:0,y:1,enter:\"bl\"}},t.edges.tr={path:[[h,1],[1,c]],move:{x:1,y:0,enter:\"lb\"}}),o.polygons&&t.polygons.push([[s,0],[0,a],[0,u],[l,1],[h,1],[1,c],[1,0]])},octagon:function(t,e,n,r,i,o){var s=o.interpolate_a(e,n,o.minV,o.maxV),a=o.interpolate_b(e,n,o.minV,o.maxV),u=o.interpolate_a(e,i,o.minV,o.maxV),l=o.interpolate_b(e,i,o.minV,o.maxV),h=o.interpolate_a(i,r,o.minV,o.maxV),c=o.interpolate_b(i,r,o.minV,o.maxV),f=o.interpolate_b(n,r,o.minV,o.maxV),g=o.interpolate_a(n,r,o.minV,o.maxV);o.polygons_full&&(t.edges.bl={path:[[s,0],[0,u]],move:{x:-1,y:0,enter:\"rb\"}},t.edges.lt={path:[[0,l],[h,1]],move:{x:0,y:1,enter:\"bl\"}},t.edges.tr={path:[[c,1],[1,f]],move:{x:1,y:0,enter:\"lt\"}},t.edges.rb={path:[[1,g],[a,0]],move:{x:0,y:-1,enter:\"tr\"}}),o.polygons&&t.polygons.push([[s,0],[0,u],[0,l],[h,1],[c,1],[1,f],[1,g],[a,0]])}};function Ea(t,e,n,r){var i,o,s,a=!1,u=null,l=null,h=null,c=null,f=!1,g=[],p=[],v=[];if(!t)throw new Error(\"data is required\");if(null==e)throw new Error(\"lowerBound is required\");if(null==n)throw new Error(\"bandWidth is required\");if(s=function(t){var e,n,r,i,o;for(i=new fa,t=t||{},o=Object.keys(i),e=0;e<o.length;e++)null!=(r=t[n=o[e]])&&(i[n]=r);return i.polygons_full=!i.polygons,i.interpolate=la,i.interpolate_a=ha,i.interpolate_b=ca,i}(r),t instanceof ya)u=t,l=t.root,h=t.data,s.noQuadTree||(a=!0);else{if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Error(\"input is neither array of arrays nor object retrieved from 'QuadTree()'\");h=t}if(Array.isArray(e)){for(f=!0,s.noQuadTree||(a=!0),i=0;i<e.length;i++)if(isNaN(+e[i]))throw new Error(\"lowerBound[\"+i+\"] is not a number\");if(Array.isArray(n)){if(e.length!==n.length)throw new Error(\"lowerBound and bandWidth have unequal lengths\");for(i=0;i<n.length;i++)if(isNaN(+n[i]))throw new Error(\"bandWidth[\"+i+\"] is not a number\")}else{if(isNaN(+n))throw new Error(\"bandWidth must be a number\");for(g=[],i=0;i<e.length;i++)g.push(n);n=g}}else{if(isNaN(+e))throw new Error(\"lowerBound must be a number\");if(e=[e],isNaN(+n))throw new Error(\"bandWidth must be a number\");n=[n]}return a&&!l&&(u=new ya(h),l=u.root,h=u.data),s.verbose&&(s.polygons?console.log(\"MarchingSquaresJS-isoBands: returning single polygons for each grid cell\"):console.log(\"MarchingSquaresJS-isoBands: returning polygon paths for entire data grid\"),f&&console.log(\"MarchingSquaresJS-isoBands: multiple bands requested, returning array of band polygons instead of polygons for a single band\")),e.forEach((function(t,e){if(p=[],s.minV=t,s.maxV=t+n[e],s.verbose&&console.log(\"MarchingSquaresJS-isoBands: computing isobands for [\"+t+\":\"+(t+n[e])+\"]\"),s.polygons)if(a)l.cellsInBand(s.minV,s.maxV,!0).forEach((function(t){p=p.concat(ga(ba(h,t.x,t.y,s),t.x,t.y,s))}));else for(o=0;o<h.length-1;++o)for(i=0;i<h[0].length-1;++i)p=p.concat(ga(ba(h,i,o,s),i,o,s));else{for(c=[],i=0;i<h[0].length-1;++i)c[i]=[];if(a)l.cellsInBand(s.minV,s.maxV,!1).forEach((function(t){c[t.x][t.y]=ba(h,t.x,t.y,s)}));else for(i=0;i<h[0].length-1;++i)for(o=0;o<h.length-1;++o)c[i][o]=ba(h,i,o,s);p=function(t,e,n){var r,i,o,s,a,u,l,h,c,f,g,p,v,d,y,_,x=[],E=t.length-1,k=t[0].length-1,b=[[\"rt\",\"rb\"],[\"br\",\"bl\"],[\"lb\",\"lt\"],[\"tl\",\"tr\"]],w=[0,-1,0,1],I=[-1,0,1,0],N=[\"bl\",\"lb\",\"lt\",\"tl\",\"tr\",\"rt\",\"rb\",\"br\"],S={bl:1,br:1,lb:2,lt:2,tl:3,tr:3,rt:0,rb:0};return function(t,e,n){var r,i,o,s,a;for(r=!0,i=t[0].length,o=t.length,a=0;a<o;a++)if(t[a][0]<e||t[a][0]>n||t[a][i-1]<e||t[a][i-1]>n){r=!1;break}if(r&&(t[o-1][0]<e||t[o-1][0]>n||t[o-1][i-1]<e||t[o-1][i-1]>n)&&(r=!1),r)for(s=0;s<i-1;s++)if(t[0][s]<e||t[0][s]>n||t[o-1][s]<e||t[o-1][s]>n){r=!1;break}return r}(t,n.minV,n.maxV)&&(n.linearRing?x.push([[0,0],[0,E],[k,E],[k,0],[0,0]]):x.push([[0,0],[0,E],[k,E],[k,0]])),e.forEach((function(t,M){t.forEach((function(t,L){for(r=null,o=0;o<8;o++)if(r=N[o],\"object\"===m(t.edges[r])){for(i=[],s=t.edges[r],l=r,h=M,c=L,f=!1,g=[M+s.path[0][0],L+s.path[0][1]],i.push(g);!f&&\"object\"===m((p=e[h][c]).edges[l]);)if(s=p.edges[l],delete p.edges[l],(y=s.path[1])[0]+=h,y[1]+=c,i.push(y),l=s.move.enter,h+=s.move.x,c+=s.move.y,void 0===e[h]||void 0===e[h][c]){if(v=0,d=0,h===k)h--,v=0;else if(h<0)h++,v=2;else if(c===E)c--,v=3;else{if(!(c<0))throw new Error(\"Left the grid somewhere in the interior!\");c++,v=1}if(h===M&&c===L&&v===S[r]){f=!0,l=r;break}for(;;){if(_=!1,d>4)throw new Error(\"Direction change counter overflow! This should never happen!\");if(void 0!==e[h]&&void 0!==e[h][c])for(p=e[h][c],a=0;a<b[v].length;a++)if(u=b[v][a],\"object\"===m(p.edges[u])){s=p.edges[u],i.push(pa(h,c,v,s.path)),l=u,_=!0;break}if(_)break;if(i.push(va(h,c,v)),c+=I[v],void 0!==e[h+=w[v]]&&void 0!==e[h][c]||(0===v&&c<0||1===v&&h<0||2===v&&c===E||3===v&&h===k)&&(h-=w[v],c-=I[v],v=(v+1)%4,d++),h===M&&c===L&&v===S[r]){f=!0,l=r;break}}}!n.linearRing||i[i.length-1][0]===g[0]&&i[i.length-1][1]===g[1]||i.push(g),x.push(i)}}))})),x}(h,c,s)}f?v.push(p):v=p,\"function\"==typeof s.successCallback&&s.successCallback(v,t,n[e])})),v}function ka(t,e,n,r,i,o){var s=(r+n+e+t)/4;return s>o?2:s<i?0:1}function ba(t,e,n,r){var i,o,s=0,a=t[n+1][e],u=t[n+1][e+1],l=t[n][e+1],h=t[n][e],c=r.minV,f=r.maxV;if(!(isNaN(h)||isNaN(l)||isNaN(u)||isNaN(a))){switch(s|=a<c?0:a>f?128:64,s|=u<c?0:u>f?32:16,s|=l<c?0:l>f?8:4,o=0,i={cval:s=+(s|=h<c?0:h>f?2:1),polygons:[],edges:{},x0:h,x1:l,x2:u,x3:a,x:e,y:n},s){case 85:xa.square(i,h,l,u,a,r);case 0:case 170:break;case 169:xa.triangle_bl(i,h,l,u,a,r);break;case 166:xa.triangle_br(i,h,l,u,a,r);break;case 154:xa.triangle_tr(i,h,l,u,a,r);break;case 106:xa.triangle_tl(i,h,l,u,a,r);break;case 1:xa.triangle_bl(i,h,l,u,a,r);break;case 4:xa.triangle_br(i,h,l,u,a,r);break;case 16:xa.triangle_tr(i,h,l,u,a,r);break;case 64:xa.triangle_tl(i,h,l,u,a,r);break;case 168:xa.tetragon_bl(i,h,l,u,a,r);break;case 162:xa.tetragon_br(i,h,l,u,a,r);break;case 138:xa.tetragon_tr(i,h,l,u,a,r);break;case 42:xa.tetragon_tl(i,h,l,u,a,r);break;case 2:xa.tetragon_bl(i,h,l,u,a,r);break;case 8:xa.tetragon_br(i,h,l,u,a,r);break;case 32:xa.tetragon_tr(i,h,l,u,a,r);break;case 128:xa.tetragon_tl(i,h,l,u,a,r);break;case 5:xa.tetragon_b(i,h,l,u,a,r);break;case 20:xa.tetragon_r(i,h,l,u,a,r);break;case 80:xa.tetragon_t(i,h,l,u,a,r);break;case 65:xa.tetragon_l(i,h,l,u,a,r);break;case 165:xa.tetragon_b(i,h,l,u,a,r);break;case 150:xa.tetragon_r(i,h,l,u,a,r);break;case 90:xa.tetragon_t(i,h,l,u,a,r);break;case 105:xa.tetragon_l(i,h,l,u,a,r);break;case 160:xa.tetragon_lr(i,h,l,u,a,r);break;case 130:xa.tetragon_tb(i,h,l,u,a,r);break;case 10:xa.tetragon_lr(i,h,l,u,a,r);break;case 40:xa.tetragon_tb(i,h,l,u,a,r);break;case 101:xa.pentagon_tr(i,h,l,u,a,r);break;case 149:xa.pentagon_tl(i,h,l,u,a,r);break;case 86:xa.pentagon_bl(i,h,l,u,a,r);break;case 89:xa.pentagon_br(i,h,l,u,a,r);break;case 69:xa.pentagon_tr(i,h,l,u,a,r);break;case 21:xa.pentagon_tl(i,h,l,u,a,r);break;case 84:xa.pentagon_bl(i,h,l,u,a,r);break;case 81:xa.pentagon_br(i,h,l,u,a,r);break;case 96:xa.pentagon_tr_rl(i,h,l,u,a,r);break;case 24:xa.pentagon_rb_bt(i,h,l,u,a,r);break;case 6:xa.pentagon_bl_lr(i,h,l,u,a,r);break;case 129:xa.pentagon_lt_tb(i,h,l,u,a,r);break;case 74:xa.pentagon_tr_rl(i,h,l,u,a,r);break;case 146:xa.pentagon_rb_bt(i,h,l,u,a,r);break;case 164:xa.pentagon_bl_lr(i,h,l,u,a,r);break;case 41:xa.pentagon_lt_tb(i,h,l,u,a,r);break;case 66:xa.pentagon_bl_tb(i,h,l,u,a,r);break;case 144:xa.pentagon_lt_rl(i,h,l,u,a,r);break;case 36:xa.pentagon_tr_bt(i,h,l,u,a,r);break;case 9:xa.pentagon_rb_lr(i,h,l,u,a,r);break;case 104:xa.pentagon_bl_tb(i,h,l,u,a,r);break;case 26:xa.pentagon_lt_rl(i,h,l,u,a,r);break;case 134:xa.pentagon_tr_bt(i,h,l,u,a,r);break;case 161:xa.pentagon_rb_lr(i,h,l,u,a,r);break;case 37:xa.hexagon_lt_tr(i,h,l,u,a,r);break;case 148:xa.hexagon_bl_lt(i,h,l,u,a,r);break;case 82:xa.hexagon_bl_rb(i,h,l,u,a,r);break;case 73:xa.hexagon_tr_rb(i,h,l,u,a,r);break;case 133:xa.hexagon_lt_tr(i,h,l,u,a,r);break;case 22:xa.hexagon_bl_lt(i,h,l,u,a,r);break;case 88:xa.hexagon_bl_rb(i,h,l,u,a,r);break;case 97:xa.hexagon_tr_rb(i,h,l,u,a,r);break;case 145:case 25:xa.hexagon_lt_rb(i,h,l,u,a,r);break;case 70:case 100:xa.hexagon_bl_tr(i,h,l,u,a,r);break;case 17:0===(o=ka(h,l,u,a,c,f))?(xa.triangle_bl(i,h,l,u,a,r),xa.triangle_tr(i,h,l,u,a,r)):xa.hexagon_lt_rb(i,h,l,u,a,r);break;case 68:0===(o=ka(h,l,u,a,c,f))?(xa.triangle_tl(i,h,l,u,a,r),xa.triangle_br(i,h,l,u,a,r)):xa.hexagon_bl_tr(i,h,l,u,a,r);break;case 153:2===(o=ka(h,l,u,a,c,f))?(xa.triangle_bl(i,h,l,u,a,r),xa.triangle_tr(i,h,l,u,a,r)):xa.hexagon_lt_rb(i,h,l,u,a,r);break;case 102:2===(o=ka(h,l,u,a,c,f))?(xa.triangle_tl(i,h,l,u,a,r),xa.triangle_br(i,h,l,u,a,r)):xa.hexagon_bl_tr(i,h,l,u,a,r);break;case 152:2===(o=ka(h,l,u,a,c,f))?(xa.triangle_tr(i,h,l,u,a,r),xa.tetragon_bl(i,h,l,u,a,r)):xa.heptagon_tr(i,h,l,u,a,r);break;case 137:2===(o=ka(h,l,u,a,c,f))?(xa.triangle_bl(i,h,l,u,a,r),xa.tetragon_tr(i,h,l,u,a,r)):xa.heptagon_bl(i,h,l,u,a,r);break;case 98:2===(o=ka(h,l,u,a,c,f))?(xa.triangle_tl(i,h,l,u,a,r),xa.tetragon_br(i,h,l,u,a,r)):xa.heptagon_tl(i,h,l,u,a,r);break;case 38:2===(o=ka(h,l,u,a,c,f))?(xa.triangle_br(i,h,l,u,a,r),xa.tetragon_tl(i,h,l,u,a,r)):xa.heptagon_br(i,h,l,u,a,r);break;case 18:0===(o=ka(h,l,u,a,c,f))?(xa.triangle_tr(i,h,l,u,a,r),xa.tetragon_bl(i,h,l,u,a,r)):xa.heptagon_tr(i,h,l,u,a,r);break;case 33:0===(o=ka(h,l,u,a,c,f))?(xa.triangle_bl(i,h,l,u,a,r),xa.tetragon_tr(i,h,l,u,a,r)):xa.heptagon_bl(i,h,l,u,a,r);break;case 72:0===(o=ka(h,l,u,a,c,f))?(xa.triangle_tl(i,h,l,u,a,r),xa.tetragon_br(i,h,l,u,a,r)):xa.heptagon_tl(i,h,l,u,a,r);break;case 132:0===(o=ka(h,l,u,a,c,f))?(xa.triangle_br(i,h,l,u,a,r),xa.tetragon_tl(i,h,l,u,a,r)):xa.heptagon_br(i,h,l,u,a,r);break;case 136:0===(o=ka(h,l,u,a,c,f))?(xa.tetragon_tl(i,h,l,u,a,r),xa.tetragon_br(i,h,l,u,a,r)):1===o?xa.octagon(i,h,l,u,a,r):(xa.tetragon_bl(i,h,l,u,a,r),xa.tetragon_tr(i,h,l,u,a,r));break;case 34:0===(o=ka(h,l,u,a,c,f))?(xa.tetragon_bl(i,h,l,u,a,r),xa.tetragon_tr(i,h,l,u,a,r)):1===o?xa.octagon(i,h,l,u,a,r):(xa.tetragon_tl(i,h,l,u,a,r),xa.tetragon_br(i,h,l,u,a,r))}return i}}var wa=Object.defineProperty,Ia=Object.getOwnPropertySymbols,Na=Object.prototype.hasOwnProperty,Sa=Object.prototype.propertyIsEnumerable,Ma=function(t,e,n){return e in t?wa(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n},La=function(t,e){for(var n in e||(e={}))Na.call(e,n)&&Ma(t,n,e[n]);if(Ia){var r,i=a(Ia(e));try{for(i.s();!(r=i.n()).done;){n=r.value;Sa.call(e,n)&&Ma(t,n,e[n])}}catch(t){i.e(t)}finally{i.f()}}return t};function Pa(t,e){if(!Z(e=e||{}))throw new Error(\"options is invalid\");var n=e.zProperty||\"elevation\",r=e.flip,i=e.flags;nt(t,\"Point\",\"input must contain Points\");for(var o=function(t,e){var n={};vt(t,(function(t){var e=Q(t)[1];n[e]||(n[e]=[]),n[e].push(t)}));var r=Object.keys(n).map((function(t){return n[t].sort((function(t,e){return Q(t)[0]-Q(e)[0]}))})),i=r.sort((function(t,n){return e?Q(t[0])[1]-Q(n[0])[1]:Q(n[0])[1]-Q(t[0])[1]}));return i}(t,r),s=[],a=0;a<o.length;a++){for(var u=o[a],l=[],h=0;h<u.length;h++){var c=u[h];c.properties[n]?l.push(c.properties[n]):l.push(0),!0===i&&(c.properties.matrixPosition=[a,h])}s.push(l)}return s}function Ca(t){var e=t.map((function(t){return{ring:t,area:Lt(S([t]))}}));return e.sort((function(t,e){return e.area-t.area})),e.map((function(t){return t.ring}))}function Ta(t){for(var e=t.map((function(t){return{lrCoordinates:t,grouped:!1}})),n=[];!Ra(e);)for(var r=0;r<e.length;r++)if(!e[r].grouped){var i=[];i.push(e[r].lrCoordinates),e[r].grouped=!0;for(var o=S([e[r].lrCoordinates]),s=r+1;s<e.length;s++){if(!e[s].grouped)Oa(S([e[s].lrCoordinates]),o)&&(i.push(e[s].lrCoordinates),e[s].grouped=!0)}n.push(i)}return n}function Oa(t,e){for(var n=Zs(t),r=0;r<n.features.length;r++)if(!zt(n.features[r],e))return!1;return!0}function Ra(t){for(var e=0;e<t.length;e++)if(!1===t[e].grouped)return!1;return!0}var Aa=Object.defineProperty,Da=Object.getOwnPropertySymbols,Fa=Object.prototype.hasOwnProperty,qa=Object.prototype.propertyIsEnumerable,Va=function(t,e,n){return e in t?Aa(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n},Ga=function(t,e){for(var n in e||(e={}))Fa.call(e,n)&&Va(t,n,e[n]);if(Da){var r,i=a(Da(e));try{for(i.s();!(r=i.n()).done;){n=r.value;qa.call(e,n)&&Va(t,n,e[n])}}catch(t){i.e(t)}finally{i.f()}}return t};function Ba(t,e){if(!Z(e=e||{}))throw new Error(\"options is invalid\");var n=e.zProperty||\"elevation\",r=e.flip,i=e.flags;nt(t,\"Point\",\"input must contain Points\");for(var o=function(t,e){var n={};vt(t,(function(t){var e=Q(t)[1];n[e]||(n[e]=[]),n[e].push(t)}));var r=Object.keys(n).map((function(t){return n[t].sort((function(t,e){return Q(t)[0]-Q(e)[0]}))})),i=r.sort((function(t,n){return e?Q(t[0])[1]-Q(n[0])[1]:Q(n[0])[1]-Q(t[0])[1]}));return i}(t,r),s=[],a=0;a<o.length;a++){for(var u=o[a],l=[],h=0;h<u.length;h++){var c=u[h];c.properties[n]?l.push(c.properties[n]):l.push(0),!0===i&&(c.properties.matrixPosition=[a,h])}s.push(l)}return s}function Ya(t,e,n,r,i,o,s,a){var u,l,h,c,f={x:null,y:null,onLine1:!1,onLine2:!1};return 0===(u=(a-o)*(n-t)-(s-i)*(r-e))?null!==f.x&&null!==f.y&&f:(c=(n-t)*(l=e-o)-(r-e)*(h=t-i),l=((s-i)*l-(a-o)*h)/u,h=c/u,f.x=t+l*(n-t),f.y=e+l*(r-e),l>=0&&l<=1&&(f.onLine1=!0),h>=0&&h<=1&&(f.onLine2=!0),!(!f.onLine1||!f.onLine2)&&[f.x,f.y])}function za(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return bt(t,(function(t,n){var r=n.geometry.coordinates;return t+ut(r[0],r[1],e)}),0)}function ja(t,e,n,r){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},o=i.steps||64,s=Xa(n),a=Xa(r),u=Array.isArray(t)||\"Feature\"!==t.type?{}:t.properties;if(s===a)return L(Ri(t,e,i).geometry.coordinates[0],u);for(var l=s,h=s<a?a:a+360,c=l,f=[],g=0,p=(h-l)/o;c<=h;)f.push(at(t,e,c,i).geometry.coordinates),c=l+ ++g*p;return L(f,u)}function Xa(t){var e=t%360;return e<0&&(e+=360),e}function Ua(t,e,n,r){if(!Z(r=r||{}))throw new Error(\"options is invalid\");var i,o=[];if(\"Feature\"===t.type)i=t.geometry.coordinates;else{if(\"LineString\"!==t.type)throw new Error(\"input must be a LineString Feature or Geometry\");i=t.coordinates}for(var s,a,u,l=i.length,h=0,c=0;c<i.length&&!(e>=h&&c===i.length-1);c++){if(h>e&&0===o.length){if(!(s=e-h))return o.push(i[c]),L(o);a=st(i[c],i[c-1])-180,u=at(i[c],s,a,r),o.push(u.geometry.coordinates)}if(h>=n)return(s=n-h)?(a=st(i[c],i[c-1])-180,u=at(i[c],s,a,r),o.push(u.geometry.coordinates),L(o)):(o.push(i[c]),L(o));if(h>=e&&o.push(i[c]),c===i.length-1)return L(o);h+=ut(i[c],i[c+1],r)}if(h<e&&i.length===l)throw new Error(\"Start position is beyond line\");var f=i[i.length-1];return L([f,f])}function Za(t){var e=t[0],n=t[1];return[n[0]-e[0],n[1]-e[1]]}function Ha(t,e){return t[0]*e[1]-e[0]*t[1]}function Wa(t,e){return!function(t,e){return 0===Ha(Za(t),Za(e))}(t,e)&&function(t,e){var n,r,i=t[0],o=Za(t),s=e[0],a=Za(e),u=Ha(o,a),l=function(t,e){return[t[0]+e[0],t[1]+e[1]]}(i,function(t,e){return[t*e[0],t*e[1]]}(Ha((r=i,[(n=s)[0]-r[0],n[1]-r[1]]),a)/u,o));return l}(t,e)}function Ja(t,e,n){var r=[],i=V(e,n),o=Q(t),s=[];return o.forEach((function(t,e){if(e!==o.length-1){var n=(l=t,h=o[e+1],c=i,f=Math.sqrt((l[0]-h[0])*(l[0]-h[0])+(l[1]-h[1])*(l[1]-h[1])),g=l[0]+c*(h[1]-l[1])/f,p=h[0]+c*(h[1]-l[1])/f,v=l[1]+c*(l[0]-h[0])/f,d=h[1]+c*(l[0]-h[0])/f,[[g,v],[p,d]]);if(r.push(n),e>0){var a=r[e-1],u=Wa(n,a);!1!==u&&(a[1]=u,n[0]=u),s.push(a[0]),e===o.length-2&&(s.push(n[0]),s.push(n[1]))}2===o.length&&(s.push(n[0]),s.push(n[1]))}var l,h,c,f,g,p,v,d})),L(s,t.properties)}function Ka(t){var e=t[0],n=t[1],r=t[2],i=t[3];if(ut(t.slice(0,2),[r,n])>=ut(t.slice(0,2),[e,i])){var o=(n+i)/2;return[e,o-(r-e)/2,r,o+(r-e)/2]}var s=(e+r)/2;return[s-(i-n)/2,n,s+(i-n)/2,i]}function Qa(t,e){if(!Z(e=null!=e?e:{}))throw new Error(\"options is invalid\");var n=e.precision,r=e.coordinates,i=e.mutate;if(n=null==n||isNaN(n)?6:n,r=null==r||isNaN(r)?3:r,!t)throw new Error(\"<geojson> is required\");if(\"number\"!=typeof n)throw new Error(\"<precision> must be a number\");if(\"number\"!=typeof r)throw new Error(\"<coordinates> must be a number\");!1!==i&&void 0!==i||(t=JSON.parse(JSON.stringify(t)));var o=Math.pow(10,n);return ct(t,(function(t){!function(t,e,n){t.length>n&&t.splice(n,t.length);for(var r=0;r<t.length;r++)t[r]=Math.round(t[r]*e)/e}(t,o,r)})),t}function $a(t,e){var n=[],r=Qe();return xt(e,(function(e){if(n.forEach((function(t,e){t.id=e})),n.length){var i=r.search(e);if(i.features.length){var o=eu(e,i);n=n.filter((function(t){return t.id!==o.id})),r.remove(o),vt(tu(o,e),(function(t){n.push(t),r.insert(t)}))}}else(n=tu(t,e).features).forEach((function(t){t.bbox||(t.bbox=Ka(Rt(t)))})),r.load(C(n))})),C(n)}function tu(t,e){var n=[],r=Q(t)[0],i=Q(t)[t.geometry.coordinates.length-1];if(nu(r,K(e))||nu(i,K(e)))return C([t]);var o=Qe(),s=$e(t);o.load(s);var a=o.search(e);if(!a.features.length)return C([t]);var u=eu(e,a),l=dt(s,(function(t,r,i){var o=Q(r)[1],s=K(e);return i===u.id?(t.push(s),n.push(L(t)),nu(s,o)?[s]:[s,o]):(t.push(o),t)}),[r]);return l.length>1&&n.push(L(l)),C(n)}function eu(t,e){if(!e.features.length)throw new Error(\"lines must contain features\");if(1===e.features.length)return e.features[0];var n,r=1/0;return vt(e,(function(e){var i=fn(e,t).properties.dist;i<r&&(n=e,r=i)})),n}function nu(t,e){return t[0]===e[0]&&t[1]===e[1]}function ru(t,e,n,r){e=e||(\"Feature\"===t.type?t.properties:{});var i=rt(t),o=i.coordinates,s=i.type;if(!o.length)throw new Error(\"line must contain coordinates\");switch(s){case\"LineString\":return n&&(o=iu(o)),S([o],e);case\"MultiLineString\":var a=[],u=0;return o.forEach((function(t){if(n&&(t=iu(t)),r){var e=function(t){var e=t[0],n=t[1],r=t[2],i=t[3];return Math.abs(e-r)*Math.abs(n-i)}(Rt(L(t)));e>u?(a.unshift(t),u=e):a.push(t)}else a.push(t)})),S(a,e);default:throw new Error(\"geometry type \"+s+\" is not supported\")}}function iu(t){var e=t[0],n=e[0],r=e[1],i=t[t.length-1],o=i[0],s=i[1];return n===o&&r===s||t.push(e),t}function ou(t){return R(t)}function su(t){var e=[[[180,90],[-180,90],[-180,-90],[180,-90],[180,90]]];return t&&(e=\"Feature\"===t.type?t.geometry.coordinates:t.coordinates),S(e)}function au(t){var e,n=0,r=a(t);try{for(r.s();!(e=r.n()).done;){n+=e.value}}catch(t){r.e(t)}finally{r.f()}return n/t.length}var uu=Object.defineProperty,lu=Object.defineProperties,hu=Object.getOwnPropertyDescriptors,cu=Object.getOwnPropertySymbols,fu=Object.prototype.hasOwnProperty,gu=Object.prototype.propertyIsEnumerable,pu=function(t,e,n){return e in t?uu(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n},vu=function(t,e){for(var n in e||(e={}))fu.call(e,n)&&pu(t,n,e[n]);if(cu){var r,i=a(cu(e));try{for(i.s();!(r=i.n()).done;){n=r.value;gu.call(e,n)&&pu(t,n,e[n])}}catch(t){i.e(t)}finally{i.f()}}return t},du=function(t,e){return lu(t,hu(e))};function yu(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t)throw new Error(\"targetPoint is required\");if(!e)throw new Error(\"points is required\");var r=1/0,i=0;vt(e,(function(e,o){var s=ut(t,e,n);s<r&&(i=o,r=s)}));var o=Ai(e.features[i]);return du(vu({},o),{properties:du(vu({},o.properties),{featureIndex:i,distanceToPoint:r})})}function mu(t,e){var n,r,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=null!=(n=i.method)?n:\"geodesic\",s=null!=(r=i.units)?r:\"kilometers\";if(!t)throw new Error(\"pt is required\");if(Array.isArray(t)?t=I(t):\"Point\"===t.type?t=b(t):et(t,\"Point\",\"point\"),!e)throw new Error(\"line is required\");Array.isArray(e)?e=L(e):\"LineString\"===e.type?e=b(e):et(e,\"LineString\",\"line\");var a=1/0,u=t.geometry.coordinates;return kt(e,(function(t){if(t){var e=t.geometry.coordinates[0],n=t.geometry.coordinates[1],r=function(t,e,n,r){if(\"geodesic\"===r.method){return fn(L([e,n]).geometry,t,{units:\"degrees\"}).properties.dist}var i=[n[0]-e[0],n[1]-e[1]],o=[t[0]-e[0],t[1]-e[1]],s=_u(o,i);if(s<=0)return Ys(t,e,{units:\"degrees\"});var a=_u(i,i);if(a<=s)return Ys(t,n,{units:\"degrees\"});var u=s/a,l=[e[0]+u*i[0],e[1]+u*i[1]];return Ys(t,l,{units:\"degrees\"})}(u,e,n,{method:o});r<a&&(a=r)}})),j(a,\"degrees\",s)}function _u(t,e){return t[0]*e[0]+t[1]*e[1]}var xu=Object.defineProperty,Eu=Object.getOwnPropertySymbols,ku=Object.prototype.hasOwnProperty,bu=Object.prototype.propertyIsEnumerable,wu=function(t,e,n){return e in t?xu(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n},Iu=function(t,e){for(var n in e||(e={}))ku.call(e,n)&&wu(t,n,e[n]);if(Eu){var r,i=a(Eu(e));try{for(i.s();!(r=i.n()).done;){n=r.value;bu.call(e,n)&&wu(t,n,e[n])}}catch(t){i.e(t)}finally{i.f()}}return t};function Nu(t,e,n,r,i,o){return Math.sqrt((i-n)*(i-n)+(o-r)*(o-r))===Math.sqrt((t-n)*(t-n)+(e-r)*(e-r))+Math.sqrt((i-t)*(i-t)+(o-e)*(o-e))}function Su(t,e){var n=[];return vt(t,(function(t){var r=!1;if(\"Point\"===t.geometry.type)mt(e,(function(e){zt(t,e)&&(r=!0)})),r&&n.push(t);else{if(\"MultiPoint\"!==t.geometry.type)throw new Error(\"Input geometry must be a Point or MultiPoint\");var i=[];mt(e,(function(e){ct(t,(function(t){zt(t,e)&&(r=!0,i.push(t))}))})),r&&n.push(O(i,t.properties))}})),C(n)}function Mu(t,e,n){var r=e[0]-t[0],i=e[1]-t[1],o=n[0]-e[0];return function(t){return(t>0)-(t<0)||+t}(r*(n[1]-e[1])-o*i)}function Lu(t,e){return e.geometry.coordinates[0].every((function(e){return zt(I(e),t)}))}var Pu=function(){return s((function t(e){i(this,t),this.id=t.buildId(e),this.coordinates=e,this.innerEdges=[],this.outerEdges=[],this.outerEdgesSorted=!1}),[{key:\"removeInnerEdge\",value:function(t){this.innerEdges=this.innerEdges.filter((function(e){return e.from.id!==t.from.id}))}},{key:\"removeOuterEdge\",value:function(t){this.outerEdges=this.outerEdges.filter((function(e){return e.to.id!==t.to.id}))}},{key:\"addOuterEdge\",value:function(t){this.outerEdges.push(t),this.outerEdgesSorted=!1}},{key:\"sortOuterEdges\",value:function(){var t=this;this.outerEdgesSorted||(this.outerEdges.sort((function(e,n){var r=e.to,i=n.to;if(r.coordinates[0]-t.coordinates[0]>=0&&i.coordinates[0]-t.coordinates[0]<0)return 1;if(r.coordinates[0]-t.coordinates[0]<0&&i.coordinates[0]-t.coordinates[0]>=0)return-1;if(r.coordinates[0]-t.coordinates[0]==0&&i.coordinates[0]-t.coordinates[0]==0)return r.coordinates[1]-t.coordinates[1]>=0||i.coordinates[1]-t.coordinates[1]>=0?r.coordinates[1]-i.coordinates[1]:i.coordinates[1]-r.coordinates[1];var o=Mu(t.coordinates,r.coordinates,i.coordinates);return o<0?1:o>0?-1:Math.pow(r.coordinates[0]-t.coordinates[0],2)+Math.pow(r.coordinates[1]-t.coordinates[1],2)-(Math.pow(i.coordinates[0]-t.coordinates[0],2)+Math.pow(i.coordinates[1]-t.coordinates[1],2))})),this.outerEdgesSorted=!0)}},{key:\"getOuterEdges\",value:function(){return this.sortOuterEdges(),this.outerEdges}},{key:\"getOuterEdge\",value:function(t){return this.sortOuterEdges(),this.outerEdges[t]}},{key:\"addInnerEdge\",value:function(t){this.innerEdges.push(t)}}],[{key:\"buildId\",value:function(t){return t.join(\",\")}}])}(),Cu=function(){function t(e,n){i(this,t),this.from=e,this.to=n,this.next=void 0,this.label=void 0,this.symetric=void 0,this.ring=void 0,this.from.addOuterEdge(this),this.to.addInnerEdge(this)}return s(t,[{key:\"getSymetric\",value:function(){return this.symetric||(this.symetric=new t(this.to,this.from),this.symetric.symetric=this),this.symetric}},{key:\"deleteEdge\",value:function(){this.from.removeOuterEdge(this),this.to.removeInnerEdge(this)}},{key:\"isEqual\",value:function(t){return this.from.id===t.from.id&&this.to.id===t.to.id}},{key:\"toString\",value:function(){return\"Edge { \".concat(this.from.id,\" -> \").concat(this.to.id,\" }\")}},{key:\"toLineString\",value:function(){return L([this.from.coordinates,this.to.coordinates])}},{key:\"compareTo\",value:function(t){return Mu(t.from.coordinates,t.to.coordinates,this.to.coordinates)}}])}(),Tu=function(){return s((function t(){i(this,t),this.edges=[],this.polygon=void 0,this.envelope=void 0}),[{key:\"push\",value:function(t){this.edges.push(t),this.polygon=this.envelope=void 0}},{key:\"get\",value:function(t){return this.edges[t]}},{key:\"length\",get:function(){return this.edges.length}},{key:\"forEach\",value:function(t){this.edges.forEach(t)}},{key:\"map\",value:function(t){return this.edges.map(t)}},{key:\"some\",value:function(t){return this.edges.some(t)}},{key:\"isValid\",value:function(){return!0}},{key:\"isHole\",value:function(){var t=this,e=this.edges.reduce((function(e,n,r){return n.from.coordinates[1]>t.edges[e].from.coordinates[1]&&(e=r),e}),0),n=(0===e?this.length:e)-1,r=(e+1)%this.length,i=Mu(this.edges[n].from.coordinates,this.edges[e].from.coordinates,this.edges[r].from.coordinates);return 0===i?this.edges[n].from.coordinates[0]>this.edges[r].from.coordinates[0]:i>0}},{key:\"toMultiPoint\",value:function(){return O(this.edges.map((function(t){return t.from.coordinates})))}},{key:\"toPolygon\",value:function(){if(this.polygon)return this.polygon;var t=this.edges.map((function(t){return t.from.coordinates}));return t.push(this.edges[0].from.coordinates),this.polygon=S([t])}},{key:\"getEnvelope\",value:function(){return this.envelope?this.envelope:this.envelope=Us(this.toPolygon())}},{key:\"inside\",value:function(t){return zt(t,this.toPolygon())}}],[{key:\"findEdgeRingContaining\",value:function(t,e){var n,r,i=t.getEnvelope();return e.forEach((function(e){var o,s,u,l,h,c,f=e.getEnvelope();if((r&&(n=r.getEnvelope()),s=i,u=(o=f).geometry.coordinates[0].map((function(t){return t[0]})),l=o.geometry.coordinates[0].map((function(t){return t[1]})),h=s.geometry.coordinates[0].map((function(t){return t[0]})),c=s.geometry.coordinates[0].map((function(t){return t[1]})),Math.max.apply(null,u)!==Math.max.apply(null,h)||Math.max.apply(null,l)!==Math.max.apply(null,c)||Math.min.apply(null,u)!==Math.min.apply(null,h)||Math.min.apply(null,l)!==Math.min.apply(null,c))&&Lu(f,i)){var g,p,v=a(t.map((function(t){return t.from.coordinates})));try{var d=function(){var t=p.value;e.some((function(e){return n=t,r=e.from.coordinates,n[0]===r[0]&&n[1]===r[1];var n,r}))||(g=t)};for(v.s();!(p=v.n()).done;)d()}catch(t){v.e(t)}finally{v.f()}g&&e.inside(I(g))&&(r&&!Lu(n,f)||(r=e))}})),r}}])}();var Ou=function(){function t(){i(this,t),this.edges=[],this.nodes={}}return s(t,[{key:\"getNode\",value:function(t){var e=Pu.buildId(t),n=this.nodes[e];return n||(n=this.nodes[e]=new Pu(t)),n}},{key:\"addEdge\",value:function(t,e){var n=new Cu(t,e),r=n.getSymetric();this.edges.push(n),this.edges.push(r)}},{key:\"deleteDangles\",value:function(){var t=this;Object.keys(this.nodes).map((function(e){return t.nodes[e]})).forEach((function(e){return t._removeIfDangle(e)}))}},{key:\"_removeIfDangle\",value:function(t){var e=this;if(t.innerEdges.length<=1){var n=t.getOuterEdges().map((function(t){return t.to}));this.removeNode(t),n.forEach((function(t){return e._removeIfDangle(t)}))}}},{key:\"deleteCutEdges\",value:function(){var t=this;this._computeNextCWEdges(),this._findLabeledEdgeRings(),this.edges.forEach((function(e){e.label===e.symetric.label&&(t.removeEdge(e.symetric),t.removeEdge(e))}))}},{key:\"_computeNextCWEdges\",value:function(t){var e=this;void 0===t?Object.keys(this.nodes).forEach((function(t){return e._computeNextCWEdges(e.nodes[t])})):t.getOuterEdges().forEach((function(e,n){t.getOuterEdge((0===n?t.getOuterEdges().length:n)-1).symetric.next=e}))}},{key:\"_computeNextCCWEdges\",value:function(t,e){for(var n,r,i=t.getOuterEdges(),o=i.length-1;o>=0;--o){var s=i[o],a=s.symetric,u=void 0,l=void 0;s.label===e&&(u=s),a.label===e&&(l=a),u&&l&&(l&&(r=l),u&&(r&&(r.next=u,r=void 0),n||(n=u)))}r&&(r.next=n)}},{key:\"_findLabeledEdgeRings\",value:function(){var t=[],e=0;return this.edges.forEach((function(n){if(!(n.label>=0)){t.push(n);var r=n;do{r.label=e,r=r.next}while(!n.isEqual(r));e++}})),t}},{key:\"getEdgeRings\",value:function(){var t=this;this._computeNextCWEdges(),this.edges.forEach((function(t){t.label=void 0})),this._findLabeledEdgeRings().forEach((function(e){t._findIntersectionNodes(e).forEach((function(n){t._computeNextCCWEdges(n,e.label)}))}));var e=[];return this.edges.forEach((function(n){n.ring||e.push(t._findEdgeRing(n))})),e}},{key:\"_findIntersectionNodes\",value:function(t){var e=[],n=t,r=function(){var r=0;n.from.getOuterEdges().forEach((function(e){e.label===t.label&&++r})),r>1&&e.push(n.from),n=n.next};do{r()}while(!t.isEqual(n));return e}},{key:\"_findEdgeRing\",value:function(t){var e=t,n=new Tu;do{n.push(e),e.ring=n,e=e.next}while(!t.isEqual(e));return n}},{key:\"removeNode\",value:function(t){var e=this;t.getOuterEdges().forEach((function(t){return e.removeEdge(t)})),t.innerEdges.forEach((function(t){return e.removeEdge(t)})),delete this.nodes[t.id]}},{key:\"removeEdge\",value:function(t){this.edges=this.edges.filter((function(e){return!e.isEqual(t)})),t.deleteEdge()}}],[{key:\"fromGeoJson\",value:function(e){!function(t){if(!t)throw new Error(\"No geojson passed\");if(\"FeatureCollection\"!==t.type&&\"GeometryCollection\"!==t.type&&\"MultiLineString\"!==t.type&&\"LineString\"!==t.type&&\"Feature\"!==t.type)throw new Error(\"Invalid input type '\".concat(t.type,\"'. Geojson must be FeatureCollection, GeometryCollection, LineString, MultiLineString or Feature\"))}(e);var n=new t;return xt(e,(function(t){et(t,\"LineString\",\"Graph::fromGeoJson\"),ft(t,(function(t,e){if(t){var r=n.getNode(t),i=n.getNode(e);n.addEdge(r,i)}return e}))})),n}}])}();function Ru(t,e){var n,r;ct(t,(function(t,i,o,s,a){if(r!==a)e.push([]);else{var u=n[0],l=n[1],h=t[0],c=t[1];e[a].push([.75*u+.25*h,.75*l+.25*c]),e[a].push([.25*u+.75*h,.25*l+.75*c])}n=t,r=a}),!1),e.forEach((function(t){t.push(t[0])}))}function Au(t,e){var n,r,i;ct(t,(function(t,o,s,a,u){if(r!==a)e.push([[]]);else if(i!==u)e[a].push([]);else{var l=n[0],h=n[1],c=t[0],f=t[1];e[a][u].push([.75*l+.25*c,.75*h+.25*f]),e[a][u].push([.25*l+.75*c,.25*h+.75*f])}n=t,r=a,i=u}),!1),e.forEach((function(t){t.forEach((function(t){t.push(t[0])}))}))}function Du(t,e,n,r,i){for(var o=0;o<t.length;o++){var s=t[o],a=t[o+1];o===t.length-1&&(a=t[0]);var u=qu(s,a,e);n<=0&&u>0?qu(e,s,r)<0||(r=s):n>0&&u<=0&&(Fu(e,s,i)||(i=s)),n=u}return[r,i]}function Fu(t,e,n){return qu(t,e,n)>0}function qu(t,e,n){return(e[0]-t[0])*(n[1]-t[1])-(n[0]-t[0])*(e[1]-t[1])}function Vu(t){return Bu(t,\"mercator\",arguments.length>1&&void 0!==arguments[1]?arguments[1]:{})}function Gu(t){return Bu(t,\"wgs84\",arguments.length>1&&void 0!==arguments[1]?arguments[1]:{})}function Bu(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=(n=n||{}).mutate;if(!t)throw new Error(\"geojson is required\");return Array.isArray(t)&&U(t[0])?t=\"mercator\"===e?Yu(t):zu(t):(!0!==r&&(t=Ai(t)),ct(t,(function(t){var n=\"mercator\"===e?Yu(t):zu(t);t[0]=n[0],t[1]=n[1]}))),t}function Yu(t){var e=Math.PI/180,n=6378137,r=20037508.342789244,i=Math.abs(t[0])<=180?t[0]:t[0]-360*function(t){return t<0?-1:t>0?1:0}(t[0]),o=[n*i*e,n*Math.log(Math.tan(.25*Math.PI+.5*t[1]*e))];return o[0]>r&&(o[0]=r),o[0]<-r&&(o[0]=-r),o[1]>r&&(o[1]=r),o[1]<-r&&(o[1]=-r),o}function zu(t){var e=180/Math.PI,n=6378137;return[t[0]*e/n,(.5*Math.PI-2*Math.atan(Math.exp(-t[1]/n)))*e]}var ju=Object.freeze({__proto__:null,toMercator:Vu,toWgs84:Gu});var Xu={20:1.07275,15:1.13795,10:1.22385,5:1.3581,2:1.51743,1:1.62762};function Uu(t,e){return e[0]<=t[0]&&e[1]<=t[1]&&e[2]>=t[0]&&e[3]>=t[1]}function Zu(t){var e=[];return function t(n){return 0===n||1===n?1:e[n]>0?e[n]:e[n]=t(n-1)*n}(t)}function Hu(t){return Ju(t),Wu(t)}function Wu(t){return Array.isArray(t)?el(t):t&&t.bbox?el(t.bbox):[360*tl(),180*tl()]}function Ju(t){null!=t&&(Array.isArray(t)?H(t):null!=t.bbox&&H(t.bbox))}function Ku(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Ju(e.bbox),null==t&&(t=1);for(var n=[],r=0;r<t;r++)n.push(I(Wu(e.bbox)));return C(n)}function Qu(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Ju(e.bbox),null==t&&(t=1),void 0!==e.bbox&&null!==e.bbox||(e.bbox=[-180,-90,180,90]),U(e.num_vertices)&&void 0!==e.num_vertices||(e.num_vertices=10),U(e.max_radial_length)&&void 0!==e.max_radial_length||(e.max_radial_length=10);var n=Math.abs(e.bbox[0]-e.bbox[2]),r=Math.abs(e.bbox[1]-e.bbox[3]),i=Math.min(n/2,r/2);if(e.max_radial_length>i)throw new Error(\"max_radial_length is greater than the radius of the bbox\");for(var o=[e.bbox[0]+e.max_radial_length,e.bbox[1]+e.max_radial_length,e.bbox[2]-e.max_radial_length,e.bbox[3]-e.max_radial_length],s=[],a=function(){var t,n=[],r=d(Array(e.num_vertices+1)).map(Math.random);r.forEach((function(t,e,n){n[e]=e>0?t+n[e-1]:t})),r.forEach((function(t){t=2*t*Math.PI/r[r.length-1];var i=Math.random();n.push([i*(e.max_radial_length||10)*Math.sin(t),i*(e.max_radial_length||10)*Math.cos(t)])})),n[n.length-1]=n[0],n=n.reverse().map((t=Wu(o),function(e){return[e[0]+t[0],e[1]+t[1]]})),s.push(S([n]))},u=0;u<t;u++)a();return C(s)}function $u(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Z(e=e||{}))throw new Error(\"options is invalid\");var n=e.bbox;Ju(n);var r=e.num_vertices,i=e.max_length,o=e.max_rotation;null==t&&(t=1),(!U(r)||void 0===r||r<2)&&(r=10),U(i)&&void 0!==i||(i=1e-4),U(o)&&void 0!==o||(o=Math.PI/8);for(var s=[],a=0;a<t;a++){for(var u=[Wu(n)],l=0;l<r-1;l++){var h=(0===l?2*Math.random()*Math.PI:Math.tan((u[l][1]-u[l-1][1])/(u[l][0]-u[l-1][0])))+(Math.random()-.5)*o*2,c=Math.random()*i;u.push([u[l][0]+c*Math.cos(h),u[l][1]+c*Math.sin(h)])}s.push(L(u))}return C(s)}function tl(){return Math.random()-.5}function el(t){return[Math.random()*(t[2]-t[0])+t[0],Math.random()*(t[3]-t[1])+t[1]]}var nl=Object.freeze({__proto__:null,randomLineString:$u,randomPoint:Ku,randomPolygon:Qu,randomPosition:Hu});function rl(t,e){switch(\"Feature\"===t.type?t.geometry.type:t.type){case\"GeometryCollection\":return mt(t,(function(t){rl(t,e)})),t;case\"LineString\":return il(Q(t),e),t;case\"Polygon\":return ol(Q(t),e),t;case\"MultiLineString\":return Q(t).forEach((function(t){il(t,e)})),t;case\"MultiPolygon\":return Q(t).forEach((function(t){ol(t,e)})),t;case\"Point\":case\"MultiPoint\":return t}}function il(t,e){Bt(t)===e&&t.reverse()}function ol(t,e){Bt(t[0])!==e&&t[0].reverse();for(var n=1;n<t.length;n++)Bt(t[n])===e&&t[n].reverse()}function sl(t){var e=t%360;return e<0&&(e+=360),e}function al(t,e,n){if(!Z(n=n||{}))throw new Error(\"options is invalid\");var r=n.origin||\"centroid\",i=n.mutate||!1;if(!t)throw new Error(\"geojson required\");if(\"number\"!=typeof e||e<=0)throw new Error(\"invalid factor\");var o=Array.isArray(r)||\"object\"===m(r);return!0!==i&&(t=Ai(t)),\"FeatureCollection\"!==t.type||o?ul(t,e,r):(vt(t,(function(n,i){t.features[i]=ul(n,e,r)})),t)}function ul(t,e,n){var r=\"Point\"===it(t),i=function(t,e){null==e&&(e=\"centroid\");if(Array.isArray(e)||\"object\"===m(e))return K(e);var n=t.bbox?t.bbox:Rt(t,{recompute:!0}),r=n[0],i=n[1],o=n[2],s=n[3];switch(e){case\"sw\":case\"southwest\":case\"westsouth\":case\"bottomleft\":return I([r,i]);case\"se\":case\"southeast\":case\"eastsouth\":case\"bottomright\":return I([o,i]);case\"nw\":case\"northwest\":case\"westnorth\":case\"topleft\":return I([r,s]);case\"ne\":case\"northeast\":case\"eastnorth\":case\"topright\":return I([o,s]);case\"center\":return An(t);case void 0:case null:case\"centroid\":return gi(t);default:throw new Error(\"invalid origin\")}}(t,n);return 1===e||r||(ct(t,(function(t){var n=Ys(i,t),r=lt(i,t),o=Q(Bs(i,n*e,r));t[0]=o[0],t[1]=o[1],3===t.length&&(t[2]*=e)})),delete t.bbox),t}function ll(t){for(var e=t,n=[];e.parent;)n.unshift(e),e=e.parent;return n}var hl={search:function(t,e,n,r){var i;t.cleanDirty();var o=(r=r||{}).heuristic||hl.heuristics.manhattan,s=null!=(i=r.closest)&&i,a=new gl((function(t){return t.f})),u=e;for(e.h=o(e,n),a.push(e);a.size()>0;){var l=a.pop();if(l===n)return ll(l);l.closed=!0;for(var h=t.neighbors(l),c=0,f=h.length;c<f;++c){var g=h[c];if(!g.closed&&!g.isWall()){var p=l.g+g.getCost(l),v=g.visited;(!v||p<g.g)&&(g.visited=!0,g.parent=l,g.h=g.h||o(g,n),g.g=p,g.f=g.g+g.h,t.markDirty(g),s&&(g.h<u.h||g.h===u.h&&g.g<u.g)&&(u=g),v?a.rescoreElement(g):a.push(g))}}}return s?ll(u):[]},heuristics:{manhattan:function(t,e){return Math.abs(e.x-t.x)+Math.abs(e.y-t.y)},diagonal:function(t,e){var n=Math.sqrt(2),r=Math.abs(e.x-t.x),i=Math.abs(e.y-t.y);return 1*(r+i)+(n-2)*Math.min(r,i)}},cleanNode:function(t){t.f=0,t.g=0,t.h=0,t.visited=!1,t.closed=!1,t.parent=null}};function cl(t,e){e=e||{},this.nodes=[],this.diagonal=!!e.diagonal,this.grid=[];for(var n=0;n<t.length;n++){this.grid[n]=[];for(var r=0,i=t[n];r<i.length;r++){var o=new fl(n,r,i[r]);this.grid[n][r]=o,this.nodes.push(o)}}this.init()}function fl(t,e,n){this.x=t,this.y=e,this.weight=n}function gl(t){this.content=[],this.scoreFunction=t}function pl(t,e){for(var n=0;n<e.features.length;n++)if(zt(t,e.features[n]))return!0;return!1}function vl(t,e,n){var r=e[0],i=e[1],o=n[0]-r,s=n[1]-i;if(0!==o||0!==s){var a=((t[0]-r)*o+(t[1]-i)*s)/(o*o+s*s);a>1?(r=n[0],i=n[1]):a>0&&(r+=o*a,i+=s*a)}return(o=t[0]-r)*o+(s=t[1]-i)*s}function dl(t,e,n,r,i){for(var o,s=r,a=e+1;a<n;a++){var u=vl(t[a],t[e],t[n]);u>s&&(o=a,s=u)}s>r&&(o-e>1&&dl(t,e,o,r,i),i.push(t[o]),n-o>1&&dl(t,o,n,r,i))}function yl(t,e){var n=t.length-1,r=[t[0]];return dl(t,0,n,e,r),r.push(t[n]),r}function ml(t,e,n){if(t.length<=2)return t;var r=void 0!==e?e*e:1;return t=n?t:function(t,e){for(var n,r,i,o,s,a=t[0],u=[a],l=1,h=t.length;l<h;l++)n=t[l],i=a,o=void 0,s=void 0,o=(r=n)[0]-i[0],s=r[1]-i[1],o*o+s*s>e&&(u.push(n),a=n);return a!==n&&u.push(n),u}(t,r),t=yl(t,r)}function _l(t,e,n){return t.map((function(t){if(t.length<4)throw new Error(\"invalid polygon\");for(var r=e,i=ml(t,r,n);!xl(i);)i=ml(t,r-=.01*r,n);return i[i.length-1][0]===i[0][0]&&i[i.length-1][1]===i[0][1]||i.push(i[0]),i}))}function xl(t){return!(t.length<3)&&!(3===t.length&&t[2][0]===t[0][0]&&t[2][1]===t[0][1])}function El(t,e){return{x:t[0]-e[0],y:t[1]-e[1]}}cl.prototype.init=function(){this.dirtyNodes=[];for(var t=0;t<this.nodes.length;t++)hl.cleanNode(this.nodes[t])},cl.prototype.cleanDirty=function(){for(var t=0;t<this.dirtyNodes.length;t++)hl.cleanNode(this.dirtyNodes[t]);this.dirtyNodes=[]},cl.prototype.markDirty=function(t){this.dirtyNodes.push(t)},cl.prototype.neighbors=function(t){var e=[],n=t.x,r=t.y,i=this.grid;return i[n-1]&&i[n-1][r]&&e.push(i[n-1][r]),i[n+1]&&i[n+1][r]&&e.push(i[n+1][r]),i[n]&&i[n][r-1]&&e.push(i[n][r-1]),i[n]&&i[n][r+1]&&e.push(i[n][r+1]),this.diagonal&&(i[n-1]&&i[n-1][r-1]&&e.push(i[n-1][r-1]),i[n+1]&&i[n+1][r-1]&&e.push(i[n+1][r-1]),i[n-1]&&i[n-1][r+1]&&e.push(i[n-1][r+1]),i[n+1]&&i[n+1][r+1]&&e.push(i[n+1][r+1])),e},cl.prototype.toString=function(){for(var t,e,n,r,i=[],o=this.grid,s=0,a=o.length;s<a;s++){for(t=[],n=0,r=(e=o[s]).length;n<r;n++)t.push(e[n].weight);i.push(t.join(\" \"))}return i.join(\"\\n\")},fl.prototype.toString=function(){return\"[\"+this.x+\" \"+this.y+\"]\"},fl.prototype.getCost=function(t){return t&&t.x!==this.x&&t.y!==this.y?1.41421*this.weight:this.weight},fl.prototype.isWall=function(){return 0===this.weight},gl.prototype={push:function(t){this.content.push(t),this.sinkDown(this.content.length-1)},pop:function(){var t=this.content[0],e=this.content.pop();return this.content.length>0&&(this.content[0]=e,this.bubbleUp(0)),t},remove:function(t){var e=this.content.indexOf(t),n=this.content.pop();e!==this.content.length-1&&(this.content[e]=n,this.scoreFunction(n)<this.scoreFunction(t)?this.sinkDown(e):this.bubbleUp(e))},size:function(){return this.content.length},rescoreElement:function(t){this.sinkDown(this.content.indexOf(t))},sinkDown:function(t){for(var e=this.content[t];t>0;){var n=(t+1>>1)-1,r=this.content[n];if(!(this.scoreFunction(e)<this.scoreFunction(r)))break;this.content[n]=e,this.content[t]=r,t=n}},bubbleUp:function(t){for(var e=this.content.length,n=this.content[t],r=this.scoreFunction(n);;){var i,o=t+1<<1,s=o-1,a=null;if(s<e){var u=this.content[s];(i=this.scoreFunction(u))<r&&(a=s)}if(o<e){var l=this.content[o];this.scoreFunction(l)<(null===a?r:i)&&(a=o)}if(null===a)break;this.content[t]=this.content[a],this.content[a]=n,t=a}}};var kl,bl={exports:{}};var wl=function(){if(kl)return bl.exports;function t(t,n,i){i=i||2;var o,s,a,h,c,g,p,v=n&&n.length,d=v?n[0]*i:t.length,y=e(t,0,d,i,!0),m=[];if(!y||y.next===y.prev)return m;if(v&&(y=function(t,n,r,i){var o,s,a,h=[];for(o=0,s=n.length;o<s;o++)(a=e(t,n[o]*i,o<s-1?n[o+1]*i:t.length,i,!1))===a.next&&(a.steiner=!0),h.push(f(a));for(h.sort(u),o=0;o<h.length;o++)r=l(h[o],r);return r}(t,n,y,i)),t.length>80*i){o=a=t[0],s=h=t[1];for(var _=i;_<d;_+=i)(c=t[_])<o&&(o=c),(g=t[_+1])<s&&(s=g),c>a&&(a=c),g>h&&(h=g);p=0!==(p=Math.max(a-o,h-s))?32767/p:0}return r(y,m,i,o,s,p,0),m}function e(t,e,n,r,i){var o,s;if(i===I(t,e,n,r)>0)for(o=e;o<n;o+=r)s=k(o,t[o],t[o+1],s);else for(o=n-r;o>=e;o-=r)s=k(o,t[o],t[o+1],s);return s&&d(s,s.next)&&(b(s),s=s.next),s}function n(t,e){if(!t)return t;e||(e=t);var n,r=t;do{if(n=!1,r.steiner||!d(r,r.next)&&0!==v(r.prev,r,r.next))r=r.next;else{if(b(r),(r=e=r.prev)===r.next)break;n=!0}}while(n||r!==e);return e}function r(t,e,u,l,h,f,g){if(t){!g&&f&&function(t,e,n,r){var i=t;do{0===i.z&&(i.z=c(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){var e,n,r,i,o,s,a,u,l=1;do{for(n=t,t=null,o=null,s=0;n;){for(s++,r=n,a=0,e=0;e<l&&(a++,r=r.nextZ);e++);for(u=l;a>0||u>0&&r;)0!==a&&(0===u||!r||n.z<=r.z)?(i=n,n=n.nextZ,a--):(i=r,r=r.nextZ,u--),o?o.nextZ=i:t=i,i.prevZ=o,o=i;n=r}o.nextZ=null,l*=2}while(s>1)}(i)}(t,l,h,f);for(var p,v,d=t;t.prev!==t.next;)if(p=t.prev,v=t.next,f?o(t,l,h,f):i(t))e.push(p.i/u|0),e.push(t.i/u|0),e.push(v.i/u|0),b(t),t=v.next,d=v.next;else if((t=v)===d){g?1===g?r(t=s(n(t),e,u),e,u,l,h,f,2):2===g&&a(t,e,u,l,h,f):r(n(t),e,u,l,h,f,1);break}}}function i(t){var e=t.prev,n=t,r=t.next;if(v(e,n,r)>=0)return!1;for(var i=e.x,o=n.x,s=r.x,a=e.y,u=n.y,l=r.y,h=i<o?i<s?i:s:o<s?o:s,c=a<u?a<l?a:l:u<l?u:l,f=i>o?i>s?i:s:o>s?o:s,p=a>u?a>l?a:l:u>l?u:l,d=r.next;d!==e;){if(d.x>=h&&d.x<=f&&d.y>=c&&d.y<=p&&g(i,a,o,u,s,l,d.x,d.y)&&v(d.prev,d,d.next)>=0)return!1;d=d.next}return!0}function o(t,e,n,r){var i=t.prev,o=t,s=t.next;if(v(i,o,s)>=0)return!1;for(var a=i.x,u=o.x,l=s.x,h=i.y,f=o.y,p=s.y,d=a<u?a<l?a:l:u<l?u:l,y=h<f?h<p?h:p:f<p?f:p,m=a>u?a>l?a:l:u>l?u:l,_=h>f?h>p?h:p:f>p?f:p,x=c(d,y,e,n,r),E=c(m,_,e,n,r),k=t.prevZ,b=t.nextZ;k&&k.z>=x&&b&&b.z<=E;){if(k.x>=d&&k.x<=m&&k.y>=y&&k.y<=_&&k!==i&&k!==s&&g(a,h,u,f,l,p,k.x,k.y)&&v(k.prev,k,k.next)>=0)return!1;if(k=k.prevZ,b.x>=d&&b.x<=m&&b.y>=y&&b.y<=_&&b!==i&&b!==s&&g(a,h,u,f,l,p,b.x,b.y)&&v(b.prev,b,b.next)>=0)return!1;b=b.nextZ}for(;k&&k.z>=x;){if(k.x>=d&&k.x<=m&&k.y>=y&&k.y<=_&&k!==i&&k!==s&&g(a,h,u,f,l,p,k.x,k.y)&&v(k.prev,k,k.next)>=0)return!1;k=k.prevZ}for(;b&&b.z<=E;){if(b.x>=d&&b.x<=m&&b.y>=y&&b.y<=_&&b!==i&&b!==s&&g(a,h,u,f,l,p,b.x,b.y)&&v(b.prev,b,b.next)>=0)return!1;b=b.nextZ}return!0}function s(t,e,r){var i=t;do{var o=i.prev,s=i.next.next;!d(o,s)&&y(o,i,i.next,s)&&x(o,s)&&x(s,o)&&(e.push(o.i/r|0),e.push(i.i/r|0),e.push(s.i/r|0),b(i),b(i.next),i=t=s),i=i.next}while(i!==t);return n(i)}function a(t,e,i,o,s,a){var u=t;do{for(var l=u.next.next;l!==u.prev;){if(u.i!==l.i&&p(u,l)){var h=E(u,l);return u=n(u,u.next),h=n(h,h.next),r(u,e,i,o,s,a,0),void r(h,e,i,o,s,a,0)}l=l.next}u=u.next}while(u!==t)}function u(t,e){return t.x-e.x}function l(t,e){var r=function(t,e){var n,r=e,i=t.x,o=t.y,s=-1/0;do{if(o<=r.y&&o>=r.next.y&&r.next.y!==r.y){var a=r.x+(o-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(a<=i&&a>s&&(s=a,n=r.x<r.next.x?r:r.next,a===i))return n}r=r.next}while(r!==e);if(!n)return null;var u,l=n,c=n.x,f=n.y,p=1/0;r=n;do{i>=r.x&&r.x>=c&&i!==r.x&&g(o<f?i:s,o,c,f,o<f?s:i,o,r.x,r.y)&&(u=Math.abs(o-r.y)/(i-r.x),x(r,t)&&(u<p||u===p&&(r.x>n.x||r.x===n.x&&h(n,r)))&&(n=r,p=u)),r=r.next}while(r!==l);return n}(t,e);if(!r)return e;var i=E(r,t);return n(i,i.next),n(r,r.next)}function h(t,e){return v(t.prev,t,e.prev)<0&&v(e.next,t,t.next)<0}function c(t,e,n,r,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=(t-n)*i|0)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=(e-r)*i|0)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function f(t){var e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function g(t,e,n,r,i,o,s,a){return(i-s)*(e-a)>=(t-s)*(o-a)&&(t-s)*(r-a)>=(n-s)*(e-a)&&(n-s)*(o-a)>=(i-s)*(r-a)}function p(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&y(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(x(t,e)&&x(e,t)&&function(t,e){var n=t,r=!1,i=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&i<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)&&(v(t.prev,t,e.prev)||v(t,e.prev,e))||d(t,e)&&v(t.prev,t,t.next)>0&&v(e.prev,e,e.next)>0)}function v(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function d(t,e){return t.x===e.x&&t.y===e.y}function y(t,e,n,r){var i=_(v(t,e,n)),o=_(v(t,e,r)),s=_(v(n,r,t)),a=_(v(n,r,e));return i!==o&&s!==a||(!(0!==i||!m(t,n,e))||(!(0!==o||!m(t,r,e))||(!(0!==s||!m(n,t,r))||!(0!==a||!m(n,e,r)))))}function m(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function _(t){return t>0?1:t<0?-1:0}function x(t,e){return v(t.prev,t,t.next)<0?v(t,e,t.next)>=0&&v(t,t.prev,e)>=0:v(t,e,t.prev)<0||v(t,t.next,e)<0}function E(t,e){var n=new w(t.i,t.x,t.y),r=new w(e.i,e.x,e.y),i=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,o.next=r,r.prev=o,r}function k(t,e,n,r){var i=new w(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function b(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function w(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function I(t,e,n,r){for(var i=0,o=e,s=n-r;o<n;o+=r)i+=(t[s]-t[o])*(t[o+1]+t[s+1]),s=o;return i}return kl=1,bl.exports=t,bl.exports.default=t,t.deviation=function(t,e,n,r){var i=e&&e.length,o=i?e[0]*n:t.length,s=Math.abs(I(t,0,o,n));if(i)for(var a=0,u=e.length;a<u;a++){var l=e[a]*n,h=a<u-1?e[a+1]*n:t.length;s-=Math.abs(I(t,l,h,n))}var c=0;for(a=0;a<r.length;a+=3){var f=r[a]*n,g=r[a+1]*n,p=r[a+2]*n;c+=Math.abs((t[f]-t[p])*(t[g+1]-t[f+1])-(t[f]-t[g])*(t[p+1]-t[f+1]))}return 0===s&&0===c?0:Math.abs((c-s)/s)},t.flatten=function(t){for(var e=t[0][0].length,n={vertices:[],holes:[],dimensions:e},r=0,i=0;i<t.length;i++){for(var o=0;o<t[i].length;o++)for(var s=0;s<e;s++)n.vertices.push(t[i][o][s]);i>0&&(r+=t[i-1].length,n.holes.push(r))}return n},bl.exports}(),Il=mn(wl);function Nl(t){var e=function(t){for(var e=t[0][0].length,n={vertices:[],holes:[],dimensions:e},r=0,i=0;i<t.length;i++){for(var o=0;o<t[i].length;o++)for(var s=0;s<e;s++)n.vertices.push(t[i][o][s]);i>0&&(r+=t[i-1].length,n.holes.push(r))}return n}(t),n=Il(e.vertices,e.holes,2),r=[],i=[];n.forEach((function(t,r){var o=n[r];i.push([e.vertices[2*o],e.vertices[2*o+1]])}));for(var o=0;o<i.length;o+=3){var s=i.slice(o,o+3);s.push(i[o]),r.push(S([s]))}return r}function Sl(t,e,n){if(\"Polygon\"!==t.geometry.type)throw new Error(\"The input feature must be a Polygon\");void 0===n&&(n=1);var r=t.geometry.coordinates,i=[],o={};if(n){for(var s=[],a=0;a<r.length;a++)for(var u=0;u<r[a].length-1;u++)s.push(v(a,u));var l=new qe;l.load(s)}for(var h=0;h<r.length;h++)for(var c=0;c<r[h].length-1;c++){if(n)l.search(v(h,c)).forEach((function(t){var e=t.ring,n=t.edge;p(h,c,e,n)}));else for(var f=0;f<r.length;f++)for(var g=0;g<r[f].length-1;g++)p(h,c,f,g)}return e||(i={type:\"Feature\",geometry:{type:\"MultiPoint\",coordinates:i}}),i;function p(t,n,s,a){var u,l,h=r[t][n],c=r[t][n+1],f=r[s][a],g=r[s][a+1],p=function(t,e,n,r){if(Ml(t,n)||Ml(t,r)||Ml(e,n)||Ml(r,n))return null;var i=t[0],o=t[1],s=e[0],a=e[1],u=n[0],l=n[1],h=r[0],c=r[1],f=(i-s)*(l-c)-(o-a)*(u-h);if(0===f)return null;var g=((i*a-o*s)*(u-h)-(i-s)*(u*c-l*h))/f,p=((i*a-o*s)*(l-c)-(o-a)*(u*c-l*h))/f;return[g,p]}(h,c,f,g);if(null!==p&&(u=c[0]!==h[0]?(p[0]-h[0])/(c[0]-h[0]):(p[1]-h[1])/(c[1]-h[1]),l=g[0]!==f[0]?(p[0]-f[0])/(g[0]-f[0]):(p[1]-f[1])/(g[1]-f[1]),!(u>=1||u<=0||l>=1||l<=0))){var v=p,d=!o[v];d&&(o[v]=!0),e?i.push(e(p,t,n,h,c,u,s,a,f,g,l,d)):i.push(p)}}function v(t,e){var n,i,o,s,a=r[t][e],u=r[t][e+1];return a[0]<u[0]?(n=a[0],i=u[0]):(n=u[0],i=a[0]),a[1]<u[1]?(o=a[1],s=u[1]):(o=u[1],s=a[1]),{minX:n,minY:o,maxX:i,maxY:s,ring:t,edge:e}}}function Ml(t,e){if(!t||!e)return!1;if(t.length!==e.length)return!1;for(var n=0,r=t.length;n<r;n++)if(t[n]instanceof Array&&e[n]instanceof Array){if(!Ml(t[n],e[n]))return!1}else if(t[n]!==e[n])return!1;return!0}function Ll(t){if(\"Feature\"!=t.type)throw new Error(\"The input must a geojson object of type Feature\");if(void 0===t.geometry||null==t.geometry)throw new Error(\"The input must a geojson object with a non-empty geometry\");if(\"Polygon\"!=t.geometry.type)throw new Error(\"The input must be a geojson Polygon\");for(var e=t.geometry.coordinates.length,n=[],r=0;r<e;r++){var i=t.geometry.coordinates[r];Rl(i[0],i[i.length-1])||i.push(i[0]);for(var o=0;o<i.length-1;o++)n.push(i[o])}if(!function(t){for(var e={},n=1,r=0,i=t.length;r<i;++r){if(Object.prototype.hasOwnProperty.call(e,t[r])){n=0;break}e[t[r]]=1}return n}(n))throw new Error(\"The input polygon may not have duplicate vertices (except for the first and last vertex of each ring)\");var s=n.length,a=Sl(t,(function(t,e,n,r,i,o,s,a,u,l,h,c){return[t,e,n,r,i,o,s,a,u,l,h,c]})),u=a.length;if(0==u){var l=[];for(r=0;r<e;r++)l.push(S([t.geometry.coordinates[r]],{parent:-1,winding:Ol(t.geometry.coordinates[r])}));var h=C(l);return q(),V(),h}var c=[],f=[];for(r=0;r<e;r++){c.push([]);for(o=0;o<t.geometry.coordinates[r].length-1;o++)c[r].push([new Pl(t.geometry.coordinates[r][Al(o+1,t.geometry.coordinates[r].length-1)],1,[r,o],[r,Al(o+1,t.geometry.coordinates[r].length-1)],void 0)]),f.push(new Cl(t.geometry.coordinates[r][o],[r,Al(o-1,t.geometry.coordinates[r].length-1)],[r,o],void 0,void 0,!1,!0))}for(r=0;r<u;r++)c[a[r][1]][a[r][2]].push(new Pl(a[r][0],a[r][5],[a[r][1],a[r][2]],[a[r][6],a[r][7]],void 0)),a[r][11]&&f.push(new Cl(a[r][0],[a[r][1],a[r][2]],[a[r][6],a[r][7]],void 0,void 0,!0,!0));var g=f.length;for(r=0;r<c.length;r++)for(o=0;o<c[r].length;o++)c[r][o].sort((function(t,e){return t.param<e.param?-1:1}));var p=[];for(r=0;r<g;r++)p.push({minX:f[r].coord[0],minY:f[r].coord[1],maxX:f[r].coord[0],maxY:f[r].coord[1],index:r});var v=new qe;v.load(p);for(r=0;r<c.length;r++)for(o=0;o<c[r].length;o++)for(var d=0;d<c[r][o].length;d++){m=d==c[r][o].length-1?c[r][Al(o+1,t.geometry.coordinates[r].length-1)][0].coord:c[r][o][d+1].coord;var y=v.search({minX:m[0],minY:m[1],maxX:m[0],maxY:m[1]})[0];c[r][o][d].nxtIsectAlongEdgeIn=y.index}for(r=0;r<c.length;r++)for(o=0;o<c[r].length;o++)for(d=0;d<c[r][o].length;d++){var m=c[r][o][d].coord,_=(y=v.search({minX:m[0],minY:m[1],maxX:m[0],maxY:m[1]})[0]).index;_<s?f[_].nxtIsectAlongRingAndEdge2=c[r][o][d].nxtIsectAlongEdgeIn:Rl(f[_].ringAndEdge1,c[r][o][d].ringAndEdgeIn)?f[_].nxtIsectAlongRingAndEdge1=c[r][o][d].nxtIsectAlongEdgeIn:f[_].nxtIsectAlongRingAndEdge2=c[r][o][d].nxtIsectAlongEdgeIn}var x=[];for(r=0,o=0;o<e;o++){var E=r;for(d=0;d<t.geometry.coordinates[o].length-1;d++)f[r].coord[0]<f[E].coord[0]&&(E=r),r++;var k=f[E].nxtIsectAlongRingAndEdge2;for(d=0;d<f.length;d++)if(f[d].nxtIsectAlongRingAndEdge1==E||f[d].nxtIsectAlongRingAndEdge2==E){var b=d;break}var w=Tl([f[b].coord,f[E].coord,f[k].coord],!0)?1:-1;x.push({isect:E,parent:-1,winding:w})}x.sort((function(t,e){return f[t.isect].coord>f[e.isect].coord?-1:1}));for(l=[];x.length>0;){var I=x.pop(),N=I.isect,M=I.parent,L=I.winding,P=l.length,T=[f[N].coord],O=N;if(f[N].ringAndEdge1Walkable)var R=f[N].ringAndEdge1,A=f[N].nxtIsectAlongRingAndEdge1;else R=f[N].ringAndEdge2,A=f[N].nxtIsectAlongRingAndEdge2;for(;!Rl(f[N].coord,f[A].coord);){T.push(f[A].coord);var D=void 0;for(r=0;r<x.length;r++)if(x[r].isect==A){D=r;break}if(null!=D&&x.splice(D,1),Rl(R,f[A].ringAndEdge1)){if(R=f[A].ringAndEdge2,f[A].ringAndEdge2Walkable=!1,f[A].ringAndEdge1Walkable){var F={isect:A};Tl([f[O].coord,f[A].coord,f[f[A].nxtIsectAlongRingAndEdge2].coord],1==L)?(F.parent=M,F.winding=-L):(F.parent=P,F.winding=L),x.push(F)}O=A,A=f[A].nxtIsectAlongRingAndEdge2}else{if(R=f[A].ringAndEdge1,f[A].ringAndEdge1Walkable=!1,f[A].ringAndEdge2Walkable){F={isect:A};Tl([f[O].coord,f[A].coord,f[f[A].nxtIsectAlongRingAndEdge1].coord],1==L)?(F.parent=M,F.winding=-L):(F.parent=P,F.winding=L),x.push(F)}O=A,A=f[A].nxtIsectAlongRingAndEdge1}}T.push(f[A].coord),l.push(S([T],{index:P,parent:M,winding:L,netWinding:void 0}))}h=C(l);function q(){for(var t=[],e=0;e<h.features.length;e++)-1==h.features[e].properties.parent&&t.push(e);if(t.length>1)for(e=0;e<t.length;e++){for(var n=-1,r=0;r<h.features.length;r++)t[e]!=r&&zt(h.features[t[e]].geometry.coordinates[0][0],h.features[r],{ignoreBoundary:!0})&&Lt(h.features[r])<Infinity&&(n=r);h.features[t[e]].properties.parent=n}}function V(){for(var t=0;t<h.features.length;t++)if(-1==h.features[t].properties.parent){var e=h.features[t].properties.winding;h.features[t].properties.netWinding=e,G(t,e)}}function G(t,e){for(var n=0;n<h.features.length;n++)if(h.features[n].properties.parent==t){var r=e+h.features[n].properties.winding;h.features[n].properties.netWinding=r,G(n,r)}}return q(),V(),h}var Pl=function(t,e,n,r,i){this.coord=t,this.param=e,this.ringAndEdgeIn=n,this.ringAndEdgeOut=r,this.nxtIsectAlongEdgeIn=i},Cl=function(t,e,n,r,i,o,s){this.coord=t,this.ringAndEdge1=e,this.ringAndEdge2=n,this.nxtIsectAlongRingAndEdge1=r,this.nxtIsectAlongRingAndEdge2=i,this.ringAndEdge1Walkable=o,this.ringAndEdge2Walkable=s};function Tl(t,e){if(void 0===e&&(e=!0),3!=t.length)throw new Error(\"This function requires an array of three points [x,y]\");return(t[1][0]-t[0][0])*(t[2][1]-t[0][1])-(t[1][1]-t[0][1])*(t[2][0]-t[0][0])>=0==e}function Ol(t){for(var e=0,n=0;n<t.length-1;n++)t[n][0]<t[e][0]&&(e=n);if(Tl([t[Al(e-1,t.length-1)],t[e],t[Al(e+1,t.length-1)]],!0))var r=1;else r=-1;return r}function Rl(t,e){if(!t||!e)return!1;if(t.length!=e.length)return!1;for(var n=0,r=t.length;n<r;n++)if(t[n]instanceof Array&&e[n]instanceof Array){if(!Rl(t[n],e[n]))return!1}else if(t[n]!=e[n])return!1;return!0}function Al(t,e){return(t%e+e)%e}function Dl(t){return function(){return t}}function Fl(t){return t[0]}function ql(t){return t[1]}function Vl(){this._=null}function Gl(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function Bl(t,e){var n=e,r=e.R,i=n.U;i?i.L===n?i.L=r:i.R=r:t._=r,r.U=i,n.U=r,n.R=r.L,n.R&&(n.R.U=n),r.L=n}function Yl(t,e){var n=e,r=e.L,i=n.U;i?i.L===n?i.L=r:i.R=r:t._=r,r.U=i,n.U=r,n.L=r.R,n.L&&(n.L.U=n),r.R=n}function zl(t){for(;t.L;)t=t.L;return t}function jl(t,e,n,r){var i=[null,null],o=ph.push(i)-1;return i.left=t,i.right=e,n&&Ul(i,t,e,n),r&&Ul(i,e,t,r),fh[t.index].halfedges.push(o),fh[e.index].halfedges.push(o),i}function Xl(t,e,n){var r=[e,n];return r.left=t,r}function Ul(t,e,n,r){t[0]||t[1]?t.left===n?t[1]=r:t[0]=r:(t[0]=r,t.left=e,t.right=n)}function Zl(t,e,n,r,i){var o,s=t[0],a=t[1],u=s[0],l=s[1],h=0,c=1,f=a[0]-u,g=a[1]-l;if(o=e-u,f||!(o>0)){if(o/=f,f<0){if(o<h)return;o<c&&(c=o)}else if(f>0){if(o>c)return;o>h&&(h=o)}if(o=r-u,f||!(o<0)){if(o/=f,f<0){if(o>c)return;o>h&&(h=o)}else if(f>0){if(o<h)return;o<c&&(c=o)}if(o=n-l,g||!(o>0)){if(o/=g,g<0){if(o<h)return;o<c&&(c=o)}else if(g>0){if(o>c)return;o>h&&(h=o)}if(o=i-l,g||!(o<0)){if(o/=g,g<0){if(o>c)return;o>h&&(h=o)}else if(g>0){if(o<h)return;o<c&&(c=o)}return!(h>0||c<1)||(h>0&&(t[0]=[u+h*f,l+h*g]),c<1&&(t[1]=[u+c*f,l+c*g]),!0)}}}}}function Hl(t,e,n,r,i){var o=t[1];if(o)return!0;var s,a,u=t[0],l=t.left,h=t.right,c=l[0],f=l[1],g=h[0],p=h[1],v=(c+g)/2,d=(f+p)/2;if(p===f){if(v<e||v>=r)return;if(c>g){if(u){if(u[1]>=i)return}else u=[v,n];o=[v,i]}else{if(u){if(u[1]<n)return}else u=[v,i];o=[v,n]}}else if(a=d-(s=(c-g)/(p-f))*v,s<-1||s>1)if(c>g){if(u){if(u[1]>=i)return}else u=[(n-a)/s,n];o=[(i-a)/s,i]}else{if(u){if(u[1]<n)return}else u=[(i-a)/s,i];o=[(n-a)/s,n]}else if(f<p){if(u){if(u[0]>=r)return}else u=[e,s*e+a];o=[r,s*r+a]}else{if(u){if(u[0]<e)return}else u=[r,s*r+a];o=[e,s*e+a]}return t[0]=u,t[1]=o,!0}function Wl(t,e){var n=t.site,r=e.left,i=e.right;return n===i&&(i=r,r=n),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(n===r?(r=e[1],i=e[0]):(r=e[0],i=e[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function Jl(t,e){return e[+(e.left!==t.site)]}function Kl(t,e){return e[+(e.left===t.site)]}Vl.prototype={constructor:Vl,insert:function(t,e){var n,r,i;if(t){if(e.P=t,e.N=t.N,t.N&&(t.N.P=e),t.N=e,t.R){for(t=t.R;t.L;)t=t.L;t.L=e}else t.R=e;n=t}else this._?(t=zl(this._),e.P=null,e.N=t,t.P=t.L=e,n=t):(e.P=e.N=null,this._=e,n=null);for(e.L=e.R=null,e.U=n,e.C=!0,t=e;n&&n.C;)n===(r=n.U).L?(i=r.R)&&i.C?(n.C=i.C=!1,r.C=!0,t=r):(t===n.R&&(Bl(this,n),n=(t=n).U),n.C=!1,r.C=!0,Yl(this,r)):(i=r.L)&&i.C?(n.C=i.C=!1,r.C=!0,t=r):(t===n.L&&(Yl(this,n),n=(t=n).U),n.C=!1,r.C=!0,Bl(this,r)),n=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var e,n,r,i=t.U,o=t.L,s=t.R;if(n=o?s?zl(s):o:s,i?i.L===t?i.L=n:i.R=n:this._=n,o&&s?(r=n.C,n.C=t.C,n.L=o,o.U=n,n!==s?(i=n.U,n.U=t.U,t=n.R,i.L=t,n.R=s,s.U=n):(n.U=i,i=n,t=n.R)):(r=t.C,t=n),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((e=i.R).C&&(e.C=!1,i.C=!0,Bl(this,i),e=i.R),e.L&&e.L.C||e.R&&e.R.C){e.R&&e.R.C||(e.L.C=!1,e.C=!0,Yl(this,e),e=i.R),e.C=i.C,i.C=e.R.C=!1,Bl(this,i),t=this._;break}}else if((e=i.L).C&&(e.C=!1,i.C=!0,Yl(this,i),e=i.L),e.L&&e.L.C||e.R&&e.R.C){e.L&&e.L.C||(e.R.C=!1,e.C=!0,Bl(this,e),e=i.L),e.C=i.C,i.C=e.L.C=!1,Yl(this,i),t=this._;break}e.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var Ql,$l=[];function th(){Gl(this),this.x=this.y=this.arc=this.site=this.cy=null}function eh(t){var e=t.P,n=t.N;if(e&&n){var r=e.site,i=t.site,o=n.site;if(r!==o){var s=i[0],a=i[1],u=r[0]-s,l=r[1]-a,h=o[0]-s,c=o[1]-a,f=2*(u*c-l*h);if(!(f>=-dh)){var g=u*u+l*l,p=h*h+c*c,v=(c*g-l*p)/f,d=(u*p-h*g)/f,y=$l.pop()||new th;y.arc=t,y.site=i,y.x=v+s,y.y=(y.cy=d+a)+Math.sqrt(v*v+d*d),t.circle=y;for(var m=null,_=gh._;_;)if(y.y<_.y||y.y===_.y&&y.x<=_.x){if(!_.L){m=_.P;break}_=_.L}else{if(!_.R){m=_;break}_=_.R}gh.insert(m,y),m||(Ql=y)}}}}function nh(t){var e=t.circle;e&&(e.P||(Ql=e.N),gh.remove(e),$l.push(e),Gl(e),t.circle=null)}var rh=[];function ih(){Gl(this),this.edge=this.site=this.circle=null}function oh(t){var e=rh.pop()||new ih;return e.site=t,e}function sh(t){nh(t),ch.remove(t),rh.push(t),Gl(t)}function ah(t){var e=t.circle,n=e.x,r=e.cy,i=[n,r],o=t.P,s=t.N,a=[t];sh(t);for(var u=o;u.circle&&Math.abs(n-u.circle.x)<vh&&Math.abs(r-u.circle.cy)<vh;)o=u.P,a.unshift(u),sh(u),u=o;a.unshift(u),nh(u);for(var l=s;l.circle&&Math.abs(n-l.circle.x)<vh&&Math.abs(r-l.circle.cy)<vh;)s=l.N,a.push(l),sh(l),l=s;a.push(l),nh(l);var h,c=a.length;for(h=1;h<c;++h)l=a[h],u=a[h-1],Ul(l.edge,u.site,l.site,i);u=a[0],(l=a[c-1]).edge=jl(u.site,l.site,null,i),eh(u),eh(l)}function uh(t){for(var e,n,r,i,o=t[0],s=t[1],a=ch._;a;)if((r=lh(a,s)-o)>vh)a=a.L;else{if(!((i=o-hh(a,s))>vh)){r>-vh?(e=a.P,n=a):i>-vh?(e=a,n=a.N):e=n=a;break}if(!a.R){e=a;break}a=a.R}!function(t){fh[t.index]={site:t,halfedges:[]}}(t);var u=oh(t);if(ch.insert(e,u),e||n){if(e===n)return nh(e),n=oh(e.site),ch.insert(u,n),u.edge=n.edge=jl(e.site,u.site),eh(e),void eh(n);if(n){nh(e),nh(n);var l=e.site,h=l[0],c=l[1],f=t[0]-h,g=t[1]-c,p=n.site,v=p[0]-h,d=p[1]-c,y=2*(f*d-g*v),m=f*f+g*g,_=v*v+d*d,x=[(d*m-g*_)/y+h,(f*_-v*m)/y+c];Ul(n.edge,l,p,x),u.edge=jl(l,t,null,x),n.edge=jl(t,p,null,x),eh(e),eh(n)}else u.edge=jl(e.site,u.site)}}function lh(t,e){var n=t.site,r=n[0],i=n[1],o=i-e;if(!o)return r;var s=t.P;if(!s)return-1/0;var a=(n=s.site)[0],u=n[1],l=u-e;if(!l)return a;var h=a-r,c=1/o-1/l,f=h/l;return c?(-f+Math.sqrt(f*f-2*c*(h*h/(-2*l)-u+l/2+i-o/2)))/c+r:(r+a)/2}function hh(t,e){var n=t.N;if(n)return lh(n,e);var r=t.site;return r[1]===e?r[0]:1/0}var ch,fh,gh,ph,vh=1e-6,dh=1e-12;function yh(t,e){return e[1]-t[1]||e[0]-t[0]}function mh(t,e){var n,r,i,o=t.sort(yh).pop();for(ph=[],fh=new Array(t.length),ch=new Vl,gh=new Vl;;)if(i=Ql,o&&(!i||o[1]<i.y||o[1]===i.y&&o[0]<i.x))o[0]===n&&o[1]===r||(uh(o),n=o[0],r=o[1]),o=t.pop();else{if(!i)break;ah(i.arc)}if(function(){for(var t,e,n,r,i=0,o=fh.length;i<o;++i)if((t=fh[i])&&(r=(e=t.halfedges).length)){var s=new Array(r),a=new Array(r);for(n=0;n<r;++n)s[n]=n,a[n]=Wl(t,ph[e[n]]);for(s.sort((function(t,e){return a[e]-a[t]})),n=0;n<r;++n)a[n]=e[s[n]];for(n=0;n<r;++n)e[n]=a[n]}}(),e){var s=+e[0][0],a=+e[0][1],u=+e[1][0],l=+e[1][1];!function(t,e,n,r){for(var i,o=ph.length;o--;)Hl(i=ph[o],t,e,n,r)&&Zl(i,t,e,n,r)&&(Math.abs(i[0][0]-i[1][0])>vh||Math.abs(i[0][1]-i[1][1])>vh)||delete ph[o]}(s,a,u,l),function(t,e,n,r){var i,o,s,a,u,l,h,c,f,g,p,v,d=fh.length,y=!0;for(i=0;i<d;++i)if(o=fh[i]){for(s=o.site,a=(u=o.halfedges).length;a--;)ph[u[a]]||u.splice(a,1);for(a=0,l=u.length;a<l;)p=(g=Kl(o,ph[u[a]]))[0],v=g[1],c=(h=Jl(o,ph[u[++a%l]]))[0],f=h[1],(Math.abs(p-c)>vh||Math.abs(v-f)>vh)&&(u.splice(a,0,ph.push(Xl(s,g,Math.abs(p-t)<vh&&r-v>vh?[t,Math.abs(c-t)<vh?f:r]:Math.abs(v-r)<vh&&n-p>vh?[Math.abs(f-r)<vh?c:n,r]:Math.abs(p-n)<vh&&v-e>vh?[n,Math.abs(c-n)<vh?f:e]:Math.abs(v-e)<vh&&p-t>vh?[Math.abs(f-e)<vh?c:t,e]:null))-1),++l);l&&(y=!1)}if(y){var m,_,x,E=1/0;for(i=0,y=null;i<d;++i)(o=fh[i])&&(x=(m=(s=o.site)[0]-t)*m+(_=s[1]-e)*_)<E&&(E=x,y=o);if(y){var k=[t,e],b=[t,r],w=[n,r],I=[n,e];y.halfedges.push(ph.push(Xl(s=y.site,k,b))-1,ph.push(Xl(s,b,w))-1,ph.push(Xl(s,w,I))-1,ph.push(Xl(s,I,k))-1)}}for(i=0;i<d;++i)(o=fh[i])&&(o.halfedges.length||delete fh[i])}(s,a,u,l)}this.edges=ph,this.cells=fh,ch=gh=ph=fh=null}mh.prototype={constructor:mh,polygons:function(){var t=this.edges;return this.cells.map((function(e){var n=e.halfedges.map((function(n){return Jl(e,t[n])}));return n.data=e.site.data,n}))},triangles:function(){var t=[],e=this.edges;return this.cells.forEach((function(n,r){if(o=(i=n.halfedges).length)for(var i,o,s,a,u,l,h=n.site,c=-1,f=e[i[o-1]],g=f.left===h?f.right:f.left;++c<o;)s=g,g=(f=e[i[c]]).left===h?f.right:f.left,s&&g&&r<s.index&&r<g.index&&(u=s,l=g,((a=h)[0]-l[0])*(u[1]-a[1])-(a[0]-u[0])*(l[1]-a[1])<0)&&t.push([h.data,s.data,g.data])})),t},links:function(){return this.edges.filter((function(t){return t.right})).map((function(t){return{source:t.left.data,target:t.right.data}}))},find:function(t,e,n){for(var r,i,o=this,s=o._found||0,a=o.cells.length;!(i=o.cells[s]);)if(++s>=a)return null;var u=t-i.site[0],l=e-i.site[1],h=u*u+l*l;do{i=o.cells[r=s],s=null,i.halfedges.forEach((function(n){var r=o.edges[n],a=r.left;if(a!==i.site&&a||(a=r.right)){var u=t-a[0],l=e-a[1],c=u*u+l*l;c<h&&(h=c,s=a.index)}}))}while(null!==s);return o._found=r,null==n||h<=n*n?i.site:null}},t.along=function(t,e){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=rt(t).coordinates,i=0,o=0;o<r.length&&!(e>=i&&o===r.length-1);o++){if(i>=e){var s=e-i;if(s){var a=st(r[o],r[o-1])-180;return at(r[o],s,a,n)}return I(r[o])}i+=ut(r[o],r[o+1],n)}return I(r[r.length-1])},t.angle=function(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!Z(r))throw new Error(\"options is invalid\");if(!t)throw new Error(\"startPoint is required\");if(!e)throw new Error(\"midPoint is required\");if(!n)throw new Error(\"endPoint is required\");var i=t,o=e,s=n,a=G(!0!==r.mercator?st(o,i):lt(o,i)),u=G(!0!==r.mercator?st(o,s):lt(o,s));u<a&&(u+=360);var l=u-a;return!0===r.explementary?360-l:l},t.applyFilter=ji,t.area=Lt,t.areaFactors=k,t.azimuthToBearing=B,t.bbox=Rt,t.bboxClip=function(t,e){var n=rt(t),r=n.type,i=\"Feature\"===t.type?t.properties:{},o=n.coordinates;switch(r){case\"LineString\":case\"MultiLineString\":var s=[];return\"LineString\"===r&&(o=[o]),o.forEach((function(t){!function(t,e,n){var r,i,o,s,a,u=t.length,l=Ft(t[0],e),h=[];for(n||(n=[]),r=1;r<u;r++){for(s=t[r-1],i=o=Ft(a=t[r],e);;){if(!(l|i)){h.push(s),i!==o?(h.push(a),r<u-1&&(n.push(h),h=[])):r===u-1&&h.push(a);break}if(l&i)break;l?l=Ft(s=Dt(s,a,l,e),e):i=Ft(a=Dt(s,a,i,e),e)}l=o}h.length&&n.push(h)}(t,e,s)})),1===s.length?L(s[0],i):T(s,i);case\"Polygon\":return S(qt(o,e),i);case\"MultiPolygon\":return R(o.map((function(t){return qt(t,e)})),i);default:throw new Error(\"geometry \"+r+\" not supported\")}},t.bboxPolygon=Vt,t.bearing=st,t.bearingToAzimuth=G,t.bezierSpline=function(t){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.resolution||1e4,r=e.sharpness||.85,i=[],o=rt(t).coordinates.map((function(t){return{x:t[0],y:t[1]}})),s=new Gt({duration:n,points:o,sharpness:r}),a=function(t){var e=s.pos(t);Math.floor(t/100)%2==0&&i.push([e.x,e.y])},u=0;u<s.duration;u+=10)a(u);return a(s.duration),L(i,e.properties)},t.booleanClockwise=Bt,t.booleanConcave=function(t){var e=rt(t).coordinates;if(e[0].length<=4)return!1;for(var n=!1,r=e[0].length-1,i=0;i<r;i++){var o=e[0][(i+2)%r][0]-e[0][(i+1)%r][0],s=e[0][(i+2)%r][1]-e[0][(i+1)%r][1],a=e[0][i][0]-e[0][(i+1)%r][0],u=o*(e[0][i][1]-e[0][(i+1)%r][1])-s*a;if(0===i)n=u>0;else if(n!==u>0)return!0}return!1},t.booleanContains=function(t,e){var n=rt(t),r=rt(e),i=n.type,o=r.type,s=n.coordinates,u=r.coordinates;switch(i){case\"Point\":if(\"Point\"===o)return Ht(s,u);throw new Error(\"feature2 \"+o+\" geometry not supported\");case\"MultiPoint\":switch(o){case\"Point\":return function(t,e){var n,r=!1;for(n=0;n<t.coordinates.length;n++)if(Ht(t.coordinates[n],e.coordinates)){r=!0;break}return r}(n,r);case\"MultiPoint\":return function(t,e){var n,r=a(e.coordinates);try{for(r.s();!(n=r.n()).done;){var i,o=n.value,s=!1,u=a(t.coordinates);try{for(u.s();!(i=u.n()).done;){if(Ht(o,i.value)){s=!0;break}}}catch(t){u.e(t)}finally{u.f()}if(!s)return!1}}catch(t){r.e(t)}finally{r.f()}return!0}(n,r);default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"LineString\":switch(o){case\"Point\":return jt(r,n,{ignoreEndVertices:!0});case\"LineString\":return function(t,e){var n,r=!1,i=a(e.coordinates);try{for(i.s();!(n=i.n()).done;){var o=n.value;if(jt({type:\"Point\",coordinates:o},t,{ignoreEndVertices:!0})&&(r=!0),!jt({type:\"Point\",coordinates:o},t,{ignoreEndVertices:!1}))return!1}}catch(t){i.e(t)}finally{i.f()}return r}(n,r);case\"MultiPoint\":return function(t,e){var n,r=!1,i=a(e.coordinates);try{for(i.s();!(n=i.n()).done;){var o=n.value;if(jt(o,t,{ignoreEndVertices:!0})&&(r=!0),!jt(o,t))return!1}}catch(t){i.e(t)}finally{i.f()}if(r)return!0;return!1}(n,r);default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"Polygon\":switch(o){case\"Point\":return zt(r,n,{ignoreBoundary:!0});case\"LineString\":return function(t,e){var n=!1,r=0,i=Rt(t),o=Rt(e);if(!Zt(i,o))return!1;for(;r<e.coordinates.length-1;r++){if(zt({type:\"Point\",coordinates:Wt(e.coordinates[r],e.coordinates[r+1])},t,{ignoreBoundary:!0})){n=!0;break}}return n}(n,r);case\"Polygon\":return Ut(n,r);case\"MultiPoint\":return function(t,e){var n,r=a(e.coordinates);try{for(r.s();!(n=r.n()).done;){if(!zt(n.value,t,{ignoreBoundary:!0}))return!1}}catch(t){r.e(t)}finally{r.f()}return!0}(n,r);default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"MultiPolygon\":if(\"Polygon\"===o)return function(t,e){return t.coordinates.some((function(t){return Ut({type:\"Polygon\",coordinates:t},e)}))}(n,r);throw new Error(\"feature2 \"+o+\" geometry not supported\");default:throw new Error(\"feature1 \"+i+\" geometry not supported\")}},t.booleanCrosses=ce,t.booleanDisjoint=de,t.booleanEqual=function(t,e){var n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).precision;if(\"number\"!=typeof(n=null==n||isNaN(n)?6:n)||!(n>=0))throw new Error(\"precision must be a positive number\");return rt(t).type===rt(e).type&&Ne(Le(t),Le(e),{precision:n})},t.booleanIntersects=Oe,t.booleanOverlap=function(t,e){var n=rt(t),r=rt(e),i=n.type,o=r.type;if(\"MultiPoint\"===i&&\"MultiPoint\"!==o||(\"LineString\"===i||\"MultiLineString\"===i)&&\"LineString\"!==o&&\"MultiLineString\"!==o||(\"Polygon\"===i||\"MultiPolygon\"===i)&&\"Polygon\"!==o&&\"MultiPolygon\"!==o)throw new Error(\"features must be of the same type\");if(\"Point\"===i)throw new Error(\"Point geometry not supported\");if(Ne(t,e,{precision:6}))return!1;var s=0;switch(i){case\"MultiPoint\":for(var a=0;a<n.coordinates.length;a++)for(var u=0;u<r.coordinates.length;u++){var l=n.coordinates[a],h=r.coordinates[u];if(l[0]===h[0]&&l[1]===h[1])return!0}return!1;case\"LineString\":case\"MultiLineString\":kt(t,(function(t){kt(e,(function(e){kn(t,e).features.length&&s++}))}));break;case\"Polygon\":case\"MultiPolygon\":kt(t,(function(t){kt(e,(function(e){ue(t,e).features.length&&s++}))}))}return s>0},t.booleanParallel=function(t,e){if(!t)throw new Error(\"line1 is required\");if(!e)throw new Error(\"line2 is required\");if(\"LineString\"!==In(t,\"line1\"))throw new Error(\"line1 must be a LineString\");if(\"LineString\"!==In(e,\"line2\"))throw new Error(\"line2 must be a LineString\");for(var n=$e(Le(t)).features,r=$e(Le(e)).features,i=0;i<n.length;i++){var o=n[i].geometry.coordinates;if(!r[i])break;if(!wn(o,r[i].geometry.coordinates))return!1}return!0},t.booleanPointInPolygon=zt,t.booleanPointOnLine=jt,t.booleanTouches=function(t,e){var n=rt(t),r=rt(e),i=n.type,o=r.type;switch(i){case\"Point\":switch(o){case\"LineString\":return Nn(n,r);case\"MultiLineString\":for(var s=!1,a=0;a<r.coordinates.length;a++)Nn(n,{type:\"LineString\",coordinates:r.coordinates[a]})&&(s=!0);return s;case\"Polygon\":for(var u=0;u<r.coordinates.length;u++)if(jt(n,{type:\"LineString\",coordinates:r.coordinates[u]}))return!0;return!1;case\"MultiPolygon\":for(u=0;u<r.coordinates.length;u++)for(a=0;a<r.coordinates[u].length;a++)if(jt(n,{type:\"LineString\",coordinates:r.coordinates[u][a]}))return!0;return!1;default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"MultiPoint\":switch(o){case\"LineString\":for(s=!1,u=0;u<n.coordinates.length;u++)if(s||Nn({type:\"Point\",coordinates:n.coordinates[u]},r)&&(s=!0),jt({type:\"Point\",coordinates:n.coordinates[u]},r,{ignoreEndVertices:!0}))return!1;return s;case\"MultiLineString\":for(s=!1,u=0;u<n.coordinates.length;u++)for(a=0;a<r.coordinates.length;a++)if(s||Nn({type:\"Point\",coordinates:n.coordinates[u]},{type:\"LineString\",coordinates:r.coordinates[a]})&&(s=!0),jt({type:\"Point\",coordinates:n.coordinates[u]},{type:\"LineString\",coordinates:r.coordinates[a]},{ignoreEndVertices:!0}))return!1;return s;case\"Polygon\":for(s=!1,u=0;u<n.coordinates.length;u++)if(s||jt({type:\"Point\",coordinates:n.coordinates[u]},{type:\"LineString\",coordinates:r.coordinates[0]})&&(s=!0),zt({type:\"Point\",coordinates:n.coordinates[u]},r,{ignoreBoundary:!0}))return!1;return s;case\"MultiPolygon\":for(s=!1,u=0;u<n.coordinates.length;u++)for(a=0;a<r.coordinates.length;a++)if(s||jt({type:\"Point\",coordinates:n.coordinates[u]},{type:\"LineString\",coordinates:r.coordinates[a][0]})&&(s=!0),zt({type:\"Point\",coordinates:n.coordinates[u]},{type:\"Polygon\",coordinates:r.coordinates[a]},{ignoreBoundary:!0}))return!1;return s;default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"LineString\":switch(o){case\"Point\":return Nn(r,n);case\"MultiPoint\":for(s=!1,u=0;u<r.coordinates.length;u++)if(s||Nn({type:\"Point\",coordinates:r.coordinates[u]},n)&&(s=!0),jt({type:\"Point\",coordinates:r.coordinates[u]},n,{ignoreEndVertices:!0}))return!1;return s;case\"LineString\":var l=!1;if(Nn({type:\"Point\",coordinates:n.coordinates[0]},r)&&(l=!0),Nn({type:\"Point\",coordinates:n.coordinates[n.coordinates.length-1]},r)&&(l=!0),!1===l)return!1;for(u=0;u<n.coordinates.length;u++)if(jt({type:\"Point\",coordinates:n.coordinates[u]},r,{ignoreEndVertices:!0}))return!1;return l;case\"MultiLineString\":for(l=!1,u=0;u<r.coordinates.length;u++){Nn({type:\"Point\",coordinates:n.coordinates[0]},{type:\"LineString\",coordinates:r.coordinates[u]})&&(l=!0),Nn({type:\"Point\",coordinates:n.coordinates[n.coordinates.length-1]},{type:\"LineString\",coordinates:r.coordinates[u]})&&(l=!0);for(a=0;a<n.coordinates[u].length;a++)if(jt({type:\"Point\",coordinates:n.coordinates[a]},{type:\"LineString\",coordinates:r.coordinates[u]},{ignoreEndVertices:!0}))return!1}return l;case\"Polygon\":for(s=!1,u=0;u<n.coordinates.length;u++)if(s||jt({type:\"Point\",coordinates:n.coordinates[u]},{type:\"LineString\",coordinates:r.coordinates[0]})&&(s=!0),zt({type:\"Point\",coordinates:n.coordinates[u]},r,{ignoreBoundary:!0}))return!1;return s;case\"MultiPolygon\":for(s=!1,u=0;u<n.coordinates.length;u++){for(a=0;a<r.coordinates.length;a++)s||jt({type:\"Point\",coordinates:n.coordinates[u]},{type:\"LineString\",coordinates:r.coordinates[a][0]})&&(s=!0);if(zt({type:\"Point\",coordinates:n.coordinates[u]},r,{ignoreBoundary:!0}))return!1}return s;default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"MultiLineString\":switch(o){case\"Point\":for(u=0;u<n.coordinates.length;u++)if(Nn(r,{type:\"LineString\",coordinates:n.coordinates[u]}))return!0;return!1;case\"MultiPoint\":for(s=!1,u=0;u<n.coordinates.length;u++)for(a=0;a<r.coordinates.length;a++)if(s||Nn({type:\"Point\",coordinates:r.coordinates[a]},{type:\"LineString\",coordinates:n.coordinates[a]})&&(s=!0),jt({type:\"Point\",coordinates:r.coordinates[a]},{type:\"LineString\",coordinates:n.coordinates[a]},{ignoreEndVertices:!0}))return!1;return s;case\"LineString\":for(l=!1,u=0;u<n.coordinates.length;u++){Nn({type:\"Point\",coordinates:n.coordinates[u][0]},r)&&(l=!0),Nn({type:\"Point\",coordinates:n.coordinates[u][n.coordinates[u].length-1]},r)&&(l=!0);for(a=0;a<r.coordinates.length;a++)if(jt({type:\"Point\",coordinates:r.coordinates[a]},{type:\"LineString\",coordinates:n.coordinates[u]},{ignoreEndVertices:!0}))return!1}return l;case\"MultiLineString\":for(l=!1,u=0;u<n.coordinates.length;u++)for(a=0;a<r.coordinates.length;a++){Nn({type:\"Point\",coordinates:n.coordinates[u][0]},{type:\"LineString\",coordinates:r.coordinates[a]})&&(l=!0),Nn({type:\"Point\",coordinates:n.coordinates[u][n.coordinates[u].length-1]},{type:\"LineString\",coordinates:r.coordinates[a]})&&(l=!0);for(var h=0;h<n.coordinates[u].length;h++)if(jt({type:\"Point\",coordinates:n.coordinates[u][h]},{type:\"LineString\",coordinates:r.coordinates[a]},{ignoreEndVertices:!0}))return!1}return l;case\"Polygon\":for(s=!1,u=0;u<n.coordinates.length;u++)for(a=0;a<n.coordinates.length;a++)if(s||jt({type:\"Point\",coordinates:n.coordinates[u][a]},{type:\"LineString\",coordinates:r.coordinates[0]})&&(s=!0),zt({type:\"Point\",coordinates:n.coordinates[u][a]},r,{ignoreBoundary:!0}))return!1;return s;case\"MultiPolygon\":for(s=!1,u=0;u<r.coordinates[0].length;u++)for(a=0;a<n.coordinates.length;a++)for(h=0;h<n.coordinates[a].length;h++)if(s||jt({type:\"Point\",coordinates:n.coordinates[a][h]},{type:\"LineString\",coordinates:r.coordinates[0][u]})&&(s=!0),zt({type:\"Point\",coordinates:n.coordinates[a][h]},{type:\"Polygon\",coordinates:[r.coordinates[0][u]]},{ignoreBoundary:!0}))return!1;return s;default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"Polygon\":switch(o){case\"Point\":for(u=0;u<n.coordinates.length;u++)if(jt(r,{type:\"LineString\",coordinates:n.coordinates[u]}))return!0;return!1;case\"MultiPoint\":for(s=!1,u=0;u<r.coordinates.length;u++)if(s||jt({type:\"Point\",coordinates:r.coordinates[u]},{type:\"LineString\",coordinates:n.coordinates[0]})&&(s=!0),zt({type:\"Point\",coordinates:r.coordinates[u]},n,{ignoreBoundary:!0}))return!1;return s;case\"LineString\":for(s=!1,u=0;u<r.coordinates.length;u++)if(s||jt({type:\"Point\",coordinates:r.coordinates[u]},{type:\"LineString\",coordinates:n.coordinates[0]})&&(s=!0),zt({type:\"Point\",coordinates:r.coordinates[u]},n,{ignoreBoundary:!0}))return!1;return s;case\"MultiLineString\":for(s=!1,u=0;u<r.coordinates.length;u++)for(a=0;a<r.coordinates[u].length;a++)if(s||jt({type:\"Point\",coordinates:r.coordinates[u][a]},{type:\"LineString\",coordinates:n.coordinates[0]})&&(s=!0),zt({type:\"Point\",coordinates:r.coordinates[u][a]},n,{ignoreBoundary:!0}))return!1;return s;case\"Polygon\":for(s=!1,u=0;u<n.coordinates[0].length;u++)if(s||jt({type:\"Point\",coordinates:n.coordinates[0][u]},{type:\"LineString\",coordinates:r.coordinates[0]})&&(s=!0),zt({type:\"Point\",coordinates:n.coordinates[0][u]},r,{ignoreBoundary:!0}))return!1;return s;case\"MultiPolygon\":for(s=!1,u=0;u<r.coordinates[0].length;u++)for(a=0;a<n.coordinates[0].length;a++)if(s||jt({type:\"Point\",coordinates:n.coordinates[0][a]},{type:\"LineString\",coordinates:r.coordinates[0][u]})&&(s=!0),zt({type:\"Point\",coordinates:n.coordinates[0][a]},{type:\"Polygon\",coordinates:r.coordinates[0][u]},{ignoreBoundary:!0}))return!1;return s;default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}case\"MultiPolygon\":switch(o){case\"Point\":for(u=0;u<n.coordinates[0].length;u++)if(jt(r,{type:\"LineString\",coordinates:n.coordinates[0][u]}))return!0;return!1;case\"MultiPoint\":for(s=!1,u=0;u<n.coordinates[0].length;u++)for(a=0;a<r.coordinates.length;a++)if(s||jt({type:\"Point\",coordinates:r.coordinates[a]},{type:\"LineString\",coordinates:n.coordinates[0][u]})&&(s=!0),zt({type:\"Point\",coordinates:r.coordinates[a]},{type:\"Polygon\",coordinates:n.coordinates[0][u]},{ignoreBoundary:!0}))return!1;return s;case\"LineString\":for(s=!1,u=0;u<n.coordinates[0].length;u++)for(a=0;a<r.coordinates.length;a++)if(s||jt({type:\"Point\",coordinates:r.coordinates[a]},{type:\"LineString\",coordinates:n.coordinates[0][u]})&&(s=!0),zt({type:\"Point\",coordinates:r.coordinates[a]},{type:\"Polygon\",coordinates:n.coordinates[0][u]},{ignoreBoundary:!0}))return!1;return s;case\"MultiLineString\":for(s=!1,u=0;u<n.coordinates.length;u++)for(a=0;a<r.coordinates.length;a++)for(h=0;h<r.coordinates[a].length;h++)if(s||jt({type:\"Point\",coordinates:r.coordinates[a][h]},{type:\"LineString\",coordinates:n.coordinates[u][0]})&&(s=!0),zt({type:\"Point\",coordinates:r.coordinates[a][h]},{type:\"Polygon\",coordinates:[n.coordinates[u][0]]},{ignoreBoundary:!0}))return!1;return s;case\"Polygon\":for(s=!1,u=0;u<n.coordinates[0].length;u++)for(a=0;a<n.coordinates[0][u].length;a++)if(s||jt({type:\"Point\",coordinates:n.coordinates[0][u][a]},{type:\"LineString\",coordinates:r.coordinates[0]})&&(s=!0),zt({type:\"Point\",coordinates:n.coordinates[0][u][a]},r,{ignoreBoundary:!0}))return!1;return s;case\"MultiPolygon\":for(s=!1,u=0;u<n.coordinates[0].length;u++)for(a=0;a<r.coordinates[0].length;a++)for(h=0;h<n.coordinates[0].length;h++)if(s||jt({type:\"Point\",coordinates:n.coordinates[0][u][h]},{type:\"LineString\",coordinates:r.coordinates[0][a]})&&(s=!0),zt({type:\"Point\",coordinates:n.coordinates[0][u][h]},{type:\"Polygon\",coordinates:r.coordinates[0][a]},{ignoreBoundary:!0}))return!1;return s;default:throw new Error(\"feature2 \"+o+\" geometry not supported\")}default:throw new Error(\"feature1 \"+i+\" geometry not supported\")}},t.booleanValid=function(t){if(!t.type)return!1;var e=rt(t),n=e.type,r=e.coordinates;switch(n){case\"Point\":return r.length>1;case\"MultiPoint\":for(var i=0;i<r.length;i++)if(r[i].length<2)return!1;return!0;case\"LineString\":if(r.length<2)return!1;for(i=0;i<r.length;i++)if(r[i].length<2)return!1;return!0;case\"MultiLineString\":if(r.length<2)return!1;for(i=0;i<r.length;i++)if(r[i].length<2)return!1;return!0;case\"Polygon\":for(i=0;i<e.coordinates.length;i++){if(r[i].length<4)return!1;if(!Mn(r[i]))return!1;if(Ln(r[i]))return!1;if(i>0&&ue(S([r[0]]),S([r[i]])).features.length>1)return!1}return!0;case\"MultiPolygon\":for(i=0;i<e.coordinates.length;i++)for(var o=e.coordinates[i],s=0;s<o.length;s++){if(o[s].length<4)return!1;if(!Mn(o[s]))return!1;if(Ln(o[s]))return!1;if(0===s&&!Pn(o,e.coordinates,i))return!1;if(s>0&&ue(S([o[0]]),S([o[s]])).features.length>1)return!1}return!0;default:return!1}},t.booleanWithin=Cn,t.buffer=function(t,e,n){var r=(n=n||{}).units||\"kilometers\",i=n.steps||8;if(!t)throw new Error(\"geojson is required\");if(\"object\"!==m(n))throw new Error(\"options must be an object\");if(\"number\"!=typeof i)throw new Error(\"steps must be an number\");if(void 0===e)throw new Error(\"radius is required\");if(i<=0)throw new Error(\"steps must be greater than 0\");var o=[];switch(t.type){case\"GeometryCollection\":return mt(t,(function(t){var n=ui(t,e,r,i);n&&o.push(n)})),C(o);case\"FeatureCollection\":return vt(t,(function(t){var n=ui(t,e,r,i);n&&vt(n,(function(t){t&&o.push(t)}))})),C(o)}return ui(t,e,r,i)},t.center=An,t.centerMean=fi,t.centerMedian=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Z(e=e||{}))throw new Error(\"options is invalid\");var n=e.counter||10;if(!U(n))throw new Error(\"counter must be a number\");var r=e.weight,i=fi(t,{weight:e.weight}),o=C([]);vt(t,(function(t){var e;o.features.push(gi(t,{properties:{weight:null==(e=t.properties)?void 0:e[r]}}))}));var s={tolerance:e.tolerance,medianCandidates:[]};return pi(i.geometry.coordinates,[0,0],o,s,n)},t.centerOfMass=function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(it(e)){case\"Point\":return I(K(e),n.properties);case\"Polygon\":var r=[];ct(e,(function(t){r.push(t)}));var i,o,s,a,u,l,h,c,f=gi(e,{properties:n.properties}),g=f.geometry.coordinates,p=0,v=0,d=0,y=r.map((function(t){return[t[0]-g[0],t[1]-g[1]]}));for(i=0;i<r.length-1;i++)a=(o=y[i])[0],l=o[1],u=(s=y[i+1])[0],d+=c=a*(h=s[1])-u*l,p+=(a+u)*c,v+=(l+h)*c;if(0===d)return f;var m=1/(6*(.5*d));return I([g[0]+m*p,g[1]+m*v],n.properties);default:var _=Oi(e);return _?t(_,{properties:n.properties}):gi(e,{properties:n.properties})}},t.centroid=gi,t.circle=Ri,t.cleanCoords=Le,t.clone=Ai,t.cloneProperties=Fi,t.clusterEach=Bi,t.clusterReduce=Yi,t.clusters=$i,t.clustersDbscan=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};!0!==n.mutate&&(t=Ai(t));var r=n.minPoints||3,i=V(e,n.units),o=new to(t.features.length),s=t.features.map((function(t){return!1})),a=t.features.map((function(t){return!1})),u=t.features.map((function(t){return!1})),l=t.features.map((function(t){return-1}));o.load(t.features.map((function(t,e){var n=v(t.geometry.coordinates,2),r=n[0],i=n[1];return{minX:r,minY:i,maxX:r,maxY:i,index:e}})));var h=function(n){var r=t.features[n],s=v(r.geometry.coordinates,2),a=s[0],u=s[1],l=Math.max(u-i,-90),h=Math.min(u+i,90),c=l<0&&h>0?i:Math.abs(l)<Math.abs(h)?i/Math.cos(z(h)):i/Math.cos(z(l)),f=Math.max(a-c,-360),g=Math.min(a+c,360),p={minX:f,minY:l,maxX:g,maxY:h};return o.search(p).filter((function(n){var i=n.index,o=t.features[i];return ut(r,o,{units:\"kilometers\"})<=e}))},c=0;return t.features.forEach((function(t,e){if(!s[e]){var n=h(e);if(n.length>=r){var i=c;c++,s[e]=!0,function(t,e){for(var n=0;n<e.length;n++){var i=e[n].index;if(!s[i]){s[i]=!0;var o=h(i);o.length>=r&&e.push.apply(e,d(o))}a[i]||(a[i]=!0,l[i]=t)}}(i,n)}else u[e]=!0}})),t.features.forEach((function(e,n){var r=t.features[n];r.properties||(r.properties={}),l[n]>=0?(r.properties.dbscan=u[n]?\"edge\":\"core\",r.properties.cluster=l[n]):r.properties.dbscan=\"noise\"})),t},t.clustersKmeans=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.features.length;e.numberOfClusters=e.numberOfClusters||Math.round(Math.sqrt(n/2)),e.numberOfClusters>n&&(e.numberOfClusters=n),!0!==e.mutate&&(t=Ai(t));var r=yt(t),i=r.slice(0,e.numberOfClusters),o=ro(r,e.numberOfClusters,i),s={};return o.centroids.forEach((function(t,e){s[e]=t})),vt(t,(function(t,e){var n=o.idxs[e];t.properties.cluster=n,t.properties.centroid=s[n]})),t},t.collect=function(t,e,n,r){var i=new io(6),o=e.features.map((function(t){var e;return{minX:t.geometry.coordinates[0],minY:t.geometry.coordinates[1],maxX:t.geometry.coordinates[0],maxY:t.geometry.coordinates[1],property:null==(e=t.properties)?void 0:e[n]}}));return i.load(o),t.features.forEach((function(t){t.properties||(t.properties={});var e=Rt(t),n=i.search({minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]}),o=[];n.forEach((function(e){zt([e.minX,e.minY],t)&&o.push(e.property)})),t.properties[r]=o})),t},t.collectionOf=nt,t.combine=function(t){var e={MultiPoint:{coordinates:[],properties:[]},MultiLineString:{coordinates:[],properties:[]},MultiPolygon:{coordinates:[],properties:[]}};return vt(t,(function(t){var n,r,i,o;switch(null==(o=t.geometry)?void 0:o.type){case\"Point\":e.MultiPoint.coordinates.push(t.geometry.coordinates),e.MultiPoint.properties.push(t.properties);break;case\"MultiPoint\":(n=e.MultiPoint.coordinates).push.apply(n,d(t.geometry.coordinates)),e.MultiPoint.properties.push(t.properties);break;case\"LineString\":e.MultiLineString.coordinates.push(t.geometry.coordinates),e.MultiLineString.properties.push(t.properties);break;case\"MultiLineString\":(r=e.MultiLineString.coordinates).push.apply(r,d(t.geometry.coordinates)),e.MultiLineString.properties.push(t.properties);break;case\"Polygon\":e.MultiPolygon.coordinates.push(t.geometry.coordinates),e.MultiPolygon.properties.push(t.properties);break;case\"MultiPolygon\":(i=e.MultiPolygon.coordinates).push.apply(i,d(t.geometry.coordinates)),e.MultiPolygon.properties.push(t.properties)}})),C(Object.keys(e).filter((function(t){return e[t].coordinates.length})).sort().map((function(t){return b({type:t,coordinates:e[t].coordinates},{collectedProperties:e[t].properties})})))},t.concave=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.maxEdge||1/0,r=function(t){var e=[],n={};return vt(t,(function(t){if(t.geometry){var r=t.geometry.coordinates.join(\"-\");Object.prototype.hasOwnProperty.call(n,r)||(e.push(t),n[r]=!0)}})),C(e)}(t),i=oo(r);if(i.features=i.features.filter((function(t){var r=t.geometry.coordinates[0][0],i=t.geometry.coordinates[0][1],o=t.geometry.coordinates[0][2],s=ut(r,i,e),a=ut(i,o,e),u=ut(r,o,e);return s<=n&&a<=n&&u<=n})),i.features.length<1)return null;var o=Ro(i);return 1===o.coordinates.length&&(o.coordinates=o.coordinates[0],o.type=\"Polygon\"),b(o)},t.containsNumber=$,t.convertArea=X,t.convertLength=j,t.convex=Oi,t.coordAll=yt,t.coordEach=ct,t.coordReduce=ft,t.createBins=zi,t.degreesToRadians=z,t.destination=at,t.difference=function(t){var e=[];if(mt(t,(function(t){e.push(t.coordinates)})),e.length<2)throw new Error(\"Must have at least two features\");var n=t.features[0].properties||{},r=As.apply(Fs,[e[0]].concat(d(e.slice(1))));return 0===r.length?null:1===r.length?S(r[0],n):R(r,n)},t.dissolve=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Z(e=e||{}))throw new Error(\"options is invalid\");var n=e.propertyName;nt(t,\"Polygon\",\"dissolve\");var r=[];if(!n)return qs(R(Os.apply(null,t.features.map((function(t){return t.geometry.coordinates})))));var i={};vt(t,(function(t){t.properties&&(Object.prototype.hasOwnProperty.call(i,t.properties[n])||(i[t.properties[n]]=[]),i[t.properties[n]].push(t))}));for(var o=Object.keys(i),s=0;s<o.length;s++){var a=R(Os.apply(null,i[o[s]].map((function(t){return t.geometry.coordinates}))));a&&a.properties&&(a.properties[n]=o[s],r.push(a))}return qs(C(r))},t.distance=ut,t.distanceWeight=Gs,t.earthRadius=x,t.ellipse=js,t.envelope=Us,t.explode=Zs,t.factors=E,t.feature=b,t.featureCollection=C,t.featureEach=vt,t.featureOf=et,t.featureReduce=dt,t.filterProperties=Ui,t.findPoint=St,t.findSegment=Nt,t.flatten=qs,t.flattenEach=xt,t.flattenReduce=Et,t.flip=function(t,e){var n;if(!Z(e=e||{}))throw new Error(\"options is invalid\");var r=null!=(n=e.mutate)&&n;if(!t)throw new Error(\"geojson is required\");return!1!==r&&void 0!==r||(t=Ai(t)),ct(t,(function(t){var e=t[0],n=t[1];t[0]=n,t[1]=e})),t},t.geojsonRbush=Qe,t.geojsonType=tt,t.geomEach=mt,t.geomReduce=_t,t.geometry=w,t.geometryCollection=A,t.getCluster=Gi,t.getCoord=K,t.getCoords=Q,t.getGeom=rt,t.getType=it,t.greatCircle=function(t,e,n){if(\"object\"!==m(n=n||{}))throw new Error(\"options is invalid\");var r=n.properties,i=n.npoints,o=n.offset;if(t=K(t),e=K(e),r=r||{},i=i||100,t[0]===e[0]&&t[1]===e[1]){var s=Array(i);return s.fill([t[0],t[1]]),L(s,r)}return o=o||10,new $s({x:t[0],y:t[1]},{x:e[0],y:e[1]},r).Arc(i,{offset:o}).json()},t.helpers=J,t.hexGrid=ea,t.interpolate=function(t,e,n){if(\"object\"!==m(n=n||{}))throw new Error(\"options is invalid\");var r,i=n.gridType,o=n.property,s=n.weight,a=n.bbox;if(!t)throw new Error(\"points is required\");if(nt(t,\"Point\",\"input must contain Points\"),!e)throw new Error(\"cellSize is required\");if(void 0!==s&&\"number\"!=typeof s)throw new Error(\"weight must be a number\");switch(o=o||\"elevation\",i=i||\"square\",s=s||1,H(a=null!=a?a:Rt(t)),i){case\"point\":case\"points\":r=ia(a,e,n);break;case\"square\":case\"squares\":r=sa(a,e,n);break;case\"hex\":case\"hexes\":r=ea(a,e,n);break;case\"triangle\":case\"triangles\":r=aa(a,e,n);break;default:throw new Error(\"invalid gridType\")}var u=[];return vt(r,(function(e){var r=0,a=0;vt(t,(function(t){var u,l=ut(\"point\"===i?e:gi(e),t,n);if(void 0!==o&&(u=t.properties[o]),void 0===u&&(u=t.geometry.coordinates[2]),void 0===u)throw new Error(\"zValue is missing\");0===l&&(r=u);var h=1/Math.pow(l,s);a+=h,r+=h*u}));var l=Ai(e);l.properties[o]=r/a,u.push(l)})),C(u)},t.intersect=ta,t.invariant=ot,t.isNumber=U,t.isObject=Z,t.isobands=function(t,e,n){if(!Z(n=n||{}))throw new Error(\"options is invalid\");var r=n.zProperty||\"elevation\",i=n.commonProperties||{},o=n.breaksProperties||[];if(nt(t,\"Point\",\"Input must contain Points\"),!e)throw new Error(\"breaks is required\");if(!Array.isArray(e))throw new Error(\"breaks is not an Array\");if(!Z(i))throw new Error(\"commonProperties is not an Object\");if(!Array.isArray(o))throw new Error(\"breaksProperties is not an Array\");var s=Pa(t,{zProperty:r,flip:!0}),a=function(t,e,n){for(var r=[],i=1;i<e.length;i++){var o=+e[i-1],s=+e[i],a=Ta(Ca(Ea(t,o,s-o)));r.push(u({groupedRings:a},n,o+\"-\"+s))}return r}(s,e,r);a=function(t,e,n){var r=Rt(n),i=r[2]-r[0],o=r[3]-r[1],s=r[0],a=r[1],u=e[0].length-1,l=e.length-1,h=i/u,c=o/l;return t.map((function(t){return t.groupedRings=t.groupedRings.map((function(t){return t.map((function(t){return t.map((function(t){return[t[0]*h+s,t[1]*c+a]}))}))})),t}))}(a,s,t);var l=a.map((function(t,e){if(o[e]&&!Z(o[e]))throw new Error(\"Each mappedProperty is required to be an Object\");var n=La(La({},i),o[e]);return n[r]=t[r],R(t.groupedRings,n)}));return C(l)},t.isolines=function(t,e,n){if(!Z(n=n||{}))throw new Error(\"options is invalid\");var r=n.zProperty||\"elevation\",i=n.commonProperties||{},o=n.breaksProperties||[];if(nt(t,\"Point\",\"Input must contain Points\"),!e)throw new Error(\"breaks is required\");if(!Array.isArray(e))throw new Error(\"breaks must be an Array\");if(!Z(i))throw new Error(\"commonProperties must be an Object\");if(!Array.isArray(o))throw new Error(\"breaksProperties must be an Array\");var s=Ba(t,{zProperty:r,flip:!0}),a=function(t,e,n){var r=Rt(n),i=r[2]-r[0],o=r[3]-r[1],s=r[0],a=r[1],u=e[0].length-1,l=e.length-1,h=i/u,c=o/l,f=function(t){t[0]=t[0]*h+s,t[1]=t[1]*c+a};return t.forEach((function(t){ct(t,f)})),t}(function(t,e,n,r,i){for(var o=[],s=0;s<e.length;s++){var a=+e[s],u=Ga(Ga({},r),i[s]);u[n]=a;var l=T(ma(t,a,{linearRing:!1,noFrame:!0}),u);o.push(l)}return o}(s,e,r,i,o),s,t);return C(a)},t.kinks=function(t){var e,n,r={type:\"FeatureCollection\",features:[]};if(\"LineString\"===(n=\"Feature\"===t.type?t.geometry:t).type)e=[n.coordinates];else if(\"MultiLineString\"===n.type)e=n.coordinates;else if(\"MultiPolygon\"===n.type){var i;e=(i=[]).concat.apply(i,d(n.coordinates))}else{if(\"Polygon\"!==n.type)throw new Error(\"Input must be a LineString, MultiLineString, Polygon, or MultiPolygon Feature or Geometry\");e=n.coordinates}return e.forEach((function(t){e.forEach((function(e){for(var n=0;n<t.length-1;n++)for(var i=n;i<e.length-1;i++){if(t===e){if(1===Math.abs(n-i))continue;if(0===n&&i===t.length-2&&t[n][0]===t[t.length-1][0]&&t[n][1]===t[t.length-1][1])continue}var o=Ya(t[n][0],t[n][1],t[n+1][0],t[n+1][1],e[i][0],e[i][1],e[i+1][0],e[i+1][1]);o&&r.features.push(I([o[0],o[1]]))}}))})),r},t.length=za,t.lengthToDegrees=V,t.lengthToRadians=q,t.lineArc=ja,t.lineChunk=function(t,e,n){if(!Z(n=n||{}))throw new Error(\"options is invalid\");var r=n.units,i=n.reverse;if(!t)throw new Error(\"geojson is required\");if(e<=0)throw new Error(\"segmentLength must be greater than 0\");var o=[];return xt(t,(function(t){i&&(t.geometry.coordinates=t.geometry.coordinates.reverse()),function(t,e,n,r){var i=za(t,{units:n});if(i<=e)return r(t);var o=i/e;Number.isInteger(o)||(o=Math.floor(o)+1);for(var s=0;s<o;s++){r(Ua(t,e*s,e*(s+1),{units:n}),s)}}(t,e,r,(function(t){o.push(t)}))})),C(o)},t.lineEach=wt,t.lineIntersect=ue,t.lineOffset=function(t,e,n){if(!Z(n=n||{}))throw new Error(\"options is invalid\");var r=n.units;if(!t)throw new Error(\"geojson is required\");if(null==e||isNaN(e))throw new Error(\"distance is required\");var i=it(t),o=t.properties;switch(i){case\"LineString\":return Ja(t,e,r);case\"MultiLineString\":var s=[];return xt(t,(function(t){s.push(Ja(t,e,r).geometry.coordinates)})),T(s,o);default:throw new Error(\"geometry \"+i+\" is not supported\")}},t.lineOverlap=kn,t.lineReduce=It,t.lineSegment=$e,t.lineSlice=function(t,e,n){var r=Q(n);if(\"LineString\"!==it(n))throw new Error(\"line must be a LineString\");for(var i,o=fn(n,t),s=fn(n,e),a=[(i=o.properties.index<=s.properties.index?[o,s]:[s,o])[0].geometry.coordinates],u=i[0].properties.index+1;u<i[1].properties.index+1;u++)a.push(r[u]);return a.push(i[1].geometry.coordinates),L(a,n.properties)},t.lineSliceAlong=Ua,t.lineSplit=function(t,e){if(!t)throw new Error(\"line is required\");if(!e)throw new Error(\"splitter is required\");var n=it(t),r=it(e);if(\"LineString\"!==n)throw new Error(\"line must be LineString\");if(\"FeatureCollection\"===r)throw new Error(\"splitter cannot be a FeatureCollection\");if(\"GeometryCollection\"===r)throw new Error(\"splitter cannot be a GeometryCollection\");var i=Qa(e,{precision:7});switch(r){case\"Point\":return tu(t,i);case\"MultiPoint\":return $a(t,i);case\"LineString\":case\"MultiLineString\":case\"Polygon\":case\"MultiPolygon\":return $a(t,ue(t,i,{ignoreSelfIntersections:!0}))}},t.lineString=L,t.lineStrings=P,t.lineToPolygon=function(t){var e,n,r,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},o=i.properties,s=null==(e=i.autoComplete)||e,a=null==(n=i.orderCoords)||n;if(null!=(r=i.mutate)&&r||(t=Ai(t)),\"FeatureCollection\"===t.type){var u=[];return t.features.forEach((function(t){u.push(Q(ru(t,{},s,a)))})),R(u,o)}return ru(t,o,s,a)},t.mask=function(t,e,n){var r,i=null!=(r=null==n?void 0:n.mutate)&&r,o=e;e&&!1===i&&(o=Ai(e));var s,a=su(o);return(\"FeatureCollection\"===t.type?ou(2===(s=t).features.length?Os(s.features[0].geometry.coordinates,s.features[1].geometry.coordinates):Os.apply(Fs,s.features.map((function(t){return t.geometry.coordinates})))):\"Feature\"===t.type?ou(Os(t.geometry.coordinates)):ou(Os(t.coordinates))).geometry.coordinates.forEach((function(t){a.geometry.coordinates.push(t[0])})),a},t.meta=Mt,t.midpoint=function(t,e){return at(t,ut(t,e)/2,st(t,e))},t.moranIndex=function(t,e){var n,r,i=e.inputField,o=e.threshold||1e5,s=e.p||2,u=null!=(n=e.binary)&&n,l=Gs(t,{alpha:e.alpha||-1,binary:u,p:s,standardization:null==(r=e.standardization)||r,threshold:o}),h=[];vt(t,(function(t){var e=t.properties||{};h.push(e[i])}));for(var c=au(h),f=function(t){var e,n=au(t),r=0,i=a(t);try{for(i.s();!(e=i.n()).done;){var o=e.value;r+=Math.pow(o-n,2)}}catch(t){i.e(t)}finally{i.f()}return r/t.length}(h),g=0,p=0,v=0,d=0,y=l.length,m=0;m<y;m++){for(var _=0,x=0;x<y;x++)g+=l[m][x]*(h[m]-c)*(h[x]-c),p+=l[m][x],v+=Math.pow(l[m][x]+l[x][m],2),_+=l[m][x]+l[x][m];d+=Math.pow(_,2)}var E=g/p/f,k=-1/(y-1),b=(y*y*(v*=.5)-y*d+p*p*3)/((y-1)*(y+1)*(p*p))-k*k,w=Math.sqrt(b);return{expectedMoranIndex:k,moranIndex:E,stdNorm:w,zNorm:(E-k)/w}},t.multiLineString=T,t.multiPoint=O,t.multiPolygon=R,t.nearestNeighborAnalysis=function(t,e){var n=(e=e||{}).studyArea||Vt(Rt(t)),r=e.properties||{},i=e.units||\"kilometers\",o=[];vt(t,(function(t){o.push(gi(t))}));var s=o.length,a=o.map((function(t,e){return ut(t,yu(t,C(o.filter((function(t,n){return n!==e})))).geometry.coordinates,{units:i})})).reduce((function(t,e){return t+e}),0)/s,u=s/X(Lt(n),\"meters\",i),l=1/(2*Math.sqrt(u)),h=.26136/Math.sqrt(s*u);return r.nearestNeighborAnalysis={units:i,arealUnits:i+\"²\",observedMeanDistance:a,expectedMeanDistance:l,nearestNeighborIndex:a/l,numberOfPoints:s,zScore:(a-l)/h},n.properties=r,n},t.nearestPoint=yu,t.nearestPointOnLine=fn,t.nearestPointToLine=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=n.units,i=n.properties||{},o=function(t){var e=[];switch(t.geometry?t.geometry.type:t.type){case\"GeometryCollection\":return mt(t,(function(t){\"Point\"===t.type&&e.push({type:\"Feature\",properties:{},geometry:t})})),{type:\"FeatureCollection\",features:e};case\"FeatureCollection\":return t.features=t.features.filter((function(t){return\"Point\"===t.geometry.type})),t;default:throw new Error(\"points must be a Point Collection\")}}(t);if(!o.features.length)throw new Error(\"points must contain features\");if(!e)throw new Error(\"line is required\");if(\"LineString\"!==it(e))throw new Error(\"line must be a LineString\");var s=1/0,a=null;return vt(o,(function(t){var n=mu(t,e,{units:r});n<s&&(s=n,a=t)})),a&&(a.properties=Iu(Iu(Iu({},{dist:s}),a.properties),i)),a},t.planepoint=function(t,e){var n=K(t),r=rt(e).coordinates[0];if(r.length<4)throw new Error(\"OuterRing of a Polygon must have 4 or more Positions.\");var i=\"Feature\"===e.type&&e.properties||{},o=i.a,s=i.b,a=i.c,u=n[0],l=n[1],h=r[0][0],c=r[0][1],f=void 0!==o?o:r[0][2],g=r[1][0],p=r[1][1],v=void 0!==s?s:r[1][2],d=r[2][0],y=r[2][1],m=void 0!==a?a:r[2][2];return(m*(u-h)*(l-p)+f*(u-g)*(l-y)+v*(u-d)*(l-c)-v*(u-h)*(l-y)-m*(u-g)*(l-c)-f*(u-d)*(l-p))/((u-h)*(l-p)+(u-g)*(l-y)+(u-d)*(l-c)-(u-h)*(l-y)-(u-g)*(l-c)-(u-d)*(l-p))},t.point=I,t.pointGrid=ia,t.pointOnFeature=function(t){for(var e=function(t){if(\"FeatureCollection\"!==t.type)return\"Feature\"!==t.type?C([b(t)]):C([t]);return t}(t),n=An(e),r=!1,i=0;!r&&i<e.features.length;){var o=e.features[i].geometry,s=!1;if(\"Point\"===o.type)n.geometry.coordinates[0]===o.coordinates[0]&&n.geometry.coordinates[1]===o.coordinates[1]&&(r=!0);else if(\"MultiPoint\"===o.type)for(var a=!1,u=0;!a&&u<o.coordinates.length;)n.geometry.coordinates[0]===o.coordinates[u][0]&&n.geometry.coordinates[1]===o.coordinates[u][1]&&(r=!0,a=!0),u++;else if(\"LineString\"===o.type)for(var l=0;!s&&l<o.coordinates.length-1;)Nu(n.geometry.coordinates[0],n.geometry.coordinates[1],o.coordinates[l][0],o.coordinates[l][1],o.coordinates[l+1][0],o.coordinates[l+1][1])&&(s=!0,r=!0),l++;else if(\"MultiLineString\"===o.type)for(var h=0;h<o.coordinates.length;){s=!1;for(var c=0,f=o.coordinates[h];!s&&c<f.length-1;)Nu(n.geometry.coordinates[0],n.geometry.coordinates[1],f[c][0],f[c][1],f[c+1][0],f[c+1][1])&&(s=!0,r=!0),c++;h++}else\"Polygon\"!==o.type&&\"MultiPolygon\"!==o.type||zt(n,o)&&(r=!0);i++}if(r)return n;for(var g=C([]),p=0;p<e.features.length;p++)g.features=g.features.concat(Zs(e.features[p]).features);return I(yu(n,g).geometry.coordinates)},t.pointToLineDistance=mu,t.pointToPolygonDistance=function t(e,r){var i,o,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=null!=(i=s.method)?i:\"geodesic\",u=null!=(o=s.units)?o:\"kilometers\";if(!e)throw new Error(\"point is required\");if(!r)throw new Error(\"polygon or multi-polygon is required\");var l,h=rt(r);if(\"MultiPolygon\"===h.type){var c=h.coordinates.map((function(n){return t(e,S(n),{method:a,units:u})}));return Math.min.apply(Math,d(c.map(Math.abs)))*(zt(e,r)?-1:1)}if(h.coordinates.length>1){var p=h.coordinates.map((function(n){return t(e,S([n]),{method:a,units:u})})),v=n(l=p)||f(l)||_(l)||g(),y=v[0],m=v.slice(1);if(y>=0)return y;var x=Math.min.apply(Math,d(m));return x<0?Math.abs(x):Math.min(x,Math.abs(y))}var E=le(h),k=1/0;return xt(E,(function(t){k=Math.min(k,mu(e,t,{method:a,units:u}))})),zt(e,h)?-k:k},t.points=N,t.pointsWithinPolygon=Su,t.polygon=S,t.polygonSmooth=function(t,e){(e=e||{}).iterations=e.iterations||1;var n=e.iterations,r=[];if(!t)throw new Error(\"inputPolys is required\");return mt(t,(function(t,e,i){if(\"Polygon\"===t.type){for(var o=[[]],s=0;s<n;s++){var a=[],u=t;s>0&&(u=S(o).geometry),Ru(u,a),o=a.slice(0)}r.push(S(o,i))}else{if(\"MultiPolygon\"!==t.type)throw new Error(\"geometry is invalid, must be Polygon or MultiPolygon\");for(var l=[[[]]],h=0;h<n;h++){var c=[],f=t;h>0&&(f=R(l).geometry),Au(f,c),l=c.slice(0)}r.push(R(l,i))}})),C(r)},t.polygonTangents=function(t,e){var n,r=Q(t),i=Q(e),o=[],s=[],a=Rt(e),u=0,l=null;switch(r[0]>a[0]&&r[0]<a[2]&&r[1]>a[1]&&r[1]<a[3]&&(u=(l=yu(t,Zs(e))).properties.featureIndex),it(e)){case\"Polygon\":o=i[0][u],s=i[0][0],null!==l&&l.geometry.coordinates[1]<r[1]&&(s=i[0][u]),n=qu(i[0][0],i[0][i[0].length-1],r);var h=v(Du(i[0],r,n,o,s),2);o=h[0],s=h[1];break;case\"MultiPolygon\":for(var c=0,f=0,g=0,p=0;p<i[0].length;p++){c=p;for(var d=!1,y=0;y<i[0][p].length;y++){if(f=y,g===u){d=!0;break}g++}if(d)break}o=i[0][c][f],s=i[0][c][f],n=qu(i[0][0][0],i[0][0][i[0][0].length-1],r),i.forEach((function(t){var e=v(Du(t[0],r,n,o,s),2);o=e[0],s=e[1]}))}return C([I(o),I(s)])},t.polygonToLine=le,t.polygonize=function(t){var e=Ou.fromGeoJson(t);e.deleteDangles(),e.deleteCutEdges();var n=[],r=[];return e.getEdgeRings().filter((function(t){return t.isValid()})).forEach((function(t){t.isHole()?n.push(t):r.push(t)})),n.forEach((function(t){Tu.findEdgeRingContaining(t,r)&&r.push(t)})),C(r.map((function(t){return t.toPolygon()})))},t.polygons=M,t.projection=ju,t.propEach=gt,t.propReduce=pt,t.propertiesContainsFilter=Xi,t.quadratAnalysis=function(t,e){for(var n=(e=e||{}).studyBbox||Rt(t),r=e.confidenceLevel||20,i=t.features,o=i.length,s=Lt(Vt(n)),u=sa(n,Math.sqrt(s/o*2),{units:\"meters\"}).features,l={},h=0;h<u.length;h++)l[h]={box:Rt(u[h]),cnt:0};var c,f=0,g=a(i);try{for(g.s();!(c=g.n()).done;)for(var p=c.value,v=0,d=Object.keys(l);v<d.length;v++){var y=d[v],m=l[y].box;if(Uu(K(p),m)){l[y].cnt+=1,f+=1;break}}}catch(t){g.e(t)}finally{g.f()}for(var _=0,x=0,E=Object.keys(l);x<E.length;x++){var k=l[E[x]].cnt;k>_&&(_=k)}for(var b=[],w=Object.keys(l).length,I=f/w,N=0,S=0;S<_+1;S++)N+=Math.exp(-I)*Math.pow(I,S)/Zu(S),b.push(N);for(var M=[],L=0,P=0;P<_+1;P++){for(var C=0,T=Object.keys(l);C<T.length;C++){l[T[C]].cnt===P&&(L+=1)}var O=L/w;M.push(O)}for(var R=0,A=0;A<_+1;A++){var D=Math.abs(b[A]-M[A]);D>R&&(R=D)}var F=Xu[r]/Math.sqrt(w),q={criticalValue:F,isRandom:!0,maxAbsoluteDifference:R,observedDistribution:M};return R>F&&(q.isRandom=!1),q},t.radiansToDegrees=Y,t.radiansToLength=F,t.random=nl,t.randomLineString=$u,t.randomPoint=Ku,t.randomPolygon=Qu,t.randomPosition=Hu,t.rectangleGrid=oa,t.rewind=function(t){var e,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Z(r=r||{}))throw new Error(\"options is invalid\");var i=null!=(e=r.mutate)&&e,o=null!=(n=r.reverse)&&n;if(!t)throw new Error(\"<geojson> is required\");if(\"boolean\"!=typeof o)throw new Error(\"<reverse> must be a boolean\");if(\"boolean\"!=typeof i)throw new Error(\"<mutate> must be a boolean\");i||\"Point\"===t.type||\"MultiPoint\"===t.type||(t=Ai(t));var s=[];switch(t.type){case\"GeometryCollection\":return mt(t,(function(t){rl(t,o)})),t;case\"FeatureCollection\":return vt(t,(function(t){vt(rl(t,o),(function(t){s.push(t)}))})),C(s)}return rl(t,o)},t.rhumbBearing=lt,t.rhumbDestination=Bs,t.rhumbDistance=Ys,t.round=D,t.sample=function(t,e){if(!t)throw new Error(\"fc is required\");if(null==e)throw new Error(\"num is required\");if(\"number\"!=typeof e)throw new Error(\"num must be a number\");var n=C(function(t,e){var n,r,i=t.slice(0),o=t.length,s=o-e;for(;o-- >s;)n=i[r=Math.floor((o+1)*Math.random())],i[r]=i[o],i[o]=n;return i.slice(s)}(t.features,e));return n},t.sector=function(t,e,n,r){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};if(!Z(i=i||{}))throw new Error(\"options is invalid\");var o=i.properties;if(!t)throw new Error(\"center is required\");if(null==n)throw new Error(\"bearing1 is required\");if(null==r)throw new Error(\"bearing2 is required\");if(!e)throw new Error(\"radius is required\");if(\"object\"!==m(i))throw new Error(\"options must be an object\");if(sl(n)===sl(r))return Ri(t,e,i);var s=Q(t),a=ja(t,e,n,r,i),u=[[s]];return ct(a,(function(t){u[0].push(t)})),u[0].push(s),S(u,o)},t.segmentEach=kt,t.segmentReduce=bt,t.shortestPath=function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!Z(n=n||{}))throw new Error(\"options is invalid\");var r=n.obstacles||C([]),i=n.resolution||100;if(!t)throw new Error(\"start is required\");if(!e)throw new Error(\"end is required\");if(i&&(!U(i)||i<=0))throw new Error(\"options.resolution must be a number, greater than 0\");var o=K(t),s=K(e);if(t=I(o),e=I(s),\"FeatureCollection\"===r.type){if(0===r.features.length)return L([o,s])}else{if(\"Polygon\"!==r.type)throw new Error(\"invalid obstacles\");r=C([b(rt(r))])}var a=r;a.features.push(t),a.features.push(e);var u=v(Rt(al(Vt(Rt(a)),1.15)),4),l=u[0],h=u[1],c=u[2],f=u[3],g=ut([l,h],[c,h],n)/i;a.features.pop(),a.features.pop();for(var p,d,y=g/ut([l,h],[c,h],n)*(c-l),m=g/ut([l,h],[l,f],n)*(f-h),_=c-l,x=f-h,E=Math.floor(_/y),k=Math.floor(x/m),w=(_-E*y)/2,N=[],S=[],M=1/0,P=1/0,T=f-(x-k*m)/2,O=0;T>=h;){for(var R=[],A=[],D=l+w,F=0;D<=c;){var q=I([D,T]),V=pl(q,r);R.push(V?0:1),A.push(D+\"|\"+T);var G=ut(q,t);!V&&G<M&&(M=G,p={x:F,y:O});var B=ut(q,e);!V&&B<P&&(P=B,d={x:F,y:O}),D+=y,F++}S.push(R),N.push(A),T-=m,O++}var Y=new cl(S,{diagonal:!0}),z=Y.grid[p.y][p.x],j=Y.grid[d.y][d.x],X=hl.search(Y,z,j),H=[o];return X.forEach((function(t){var e=N[t.x][t.y].split(\"|\");H.push([+e[0],+e[1]])})),H.push(s),Le(L(H))},t.simplify=function(t){var e,n,r,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!Z(i=null!=i?i:{}))throw new Error(\"options is invalid\");var o=null!=(e=i.tolerance)?e:1,s=null!=(n=i.highQuality)&&n,a=null!=(r=i.mutate)&&r;if(!t)throw new Error(\"geojson is required\");if(o&&o<0)throw new Error(\"invalid tolerance\");return!0!==a&&(t=Ai(t)),mt(t,(function(t){!function(t,e,n){var r=t.type;if(\"Point\"===r||\"MultiPoint\"===r)return t;if(Le(t,{mutate:!0}),\"GeometryCollection\"!==r)switch(r){case\"LineString\":t.coordinates=ml(t.coordinates,e,n);break;case\"MultiLineString\":t.coordinates=t.coordinates.map((function(t){return ml(t,e,n)}));break;case\"Polygon\":t.coordinates=_l(t.coordinates,e,n);break;case\"MultiPolygon\":t.coordinates=t.coordinates.map((function(t){return _l(t,e,n)}))}}(t,o,s)})),t},t.square=Ka,t.squareGrid=sa,t.standardDeviationalEllipse=function(t,e){var n;if(!Z(e=e||{}))throw new Error(\"options is invalid\");var r=e.steps||64,i=e.weight,o=e.properties||{};if(!U(r))throw new Error(\"steps must be a number\");if(!Z(o))throw new Error(\"properties must be a number\");var s=yt(t).length,a=fi(t,{weight:i}),u=0,l=0,h=0;vt(t,(function(t){var e,n=i&&(null==(e=t.properties)?void 0:e[i])||1,r=El(Q(t),Q(a));u+=Math.pow(r.x,2)*n,l+=Math.pow(r.y,2)*n,h+=r.x*r.y*n}));var c=u-l,f=Math.sqrt(Math.pow(c,2)+4*Math.pow(h,2)),g=2*h,p=Math.atan((c+f)/g),v=180*p/Math.PI,d=0,y=0,m=0;vt(t,(function(t){var e,n=i&&(null==(e=t.properties)?void 0:e[i])||1,r=El(Q(t),Q(a));d+=Math.pow(r.x*Math.cos(p)-r.y*Math.sin(p),2)*n,y+=Math.pow(r.x*Math.sin(p)+r.y*Math.cos(p),2)*n,m+=n}));var _=Math.sqrt(2*d/m),x=Math.sqrt(2*y/m),E=js(a,_,x,{units:\"degrees\",angle:v,steps:r,properties:o}),k=Su(t,C([E])),b={meanCenterCoordinates:Q(a),semiMajorAxis:_,semiMinorAxis:x,numberOfFeatures:s,angle:v,percentageWithinEllipse:100*yt(k).length/s};return E.properties=null!=(n=E.properties)?n:{},E.properties.standardDeviationalEllipse=b,E},t.tag=function(t,e,n,r){return t=Ai(t),e=Ai(e),vt(t,(function(t){t.properties||(t.properties={}),vt(e,(function(e){t.properties&&e.properties&&void 0===t.properties[r]&&zt(t,e)&&(t.properties[r]=e.properties[n])}))})),t},t.tesselate=function(t){if(!t.geometry||\"Polygon\"!==t.geometry.type&&\"MultiPolygon\"!==t.geometry.type)throw new Error(\"input must be a Polygon or MultiPolygon\");var e={type:\"FeatureCollection\",features:[]};return\"Polygon\"===t.geometry.type?e.features=Nl(t.geometry.coordinates):t.geometry.coordinates.forEach((function(t){e.features=e.features.concat(Nl(t))})),e},t.tin=oo,t.toMercator=Vu,t.toWgs84=Gu,t.transformRotate=zs,t.transformScale=al,t.transformTranslate=function(t,e,n,r){if(!Z(r=r||{}))throw new Error(\"options is invalid\");var i=r.units,o=r.zTranslation,s=r.mutate;if(!t)throw new Error(\"geojson is required\");if(null==e||isNaN(e))throw new Error(\"distance is required\");if(o&&\"number\"!=typeof o&&isNaN(o))throw new Error(\"zTranslation is not a number\");if(o=void 0!==o?o:0,0===e&&0===o)return t;if(null==n||isNaN(n))throw new Error(\"direction is required\");return e<0&&(e=-e,n+=180),!1!==s&&void 0!==s||(t=Ai(t)),ct(t,(function(t){var r=Q(Bs(t,e,n,{units:i}));t[0]=r[0],t[1]=r[1],o&&3===t.length&&(t[2]+=o)})),t},t.triangleGrid=aa,t.truncate=Qa,t.union=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=[];if(mt(t,(function(t){n.push(t.coordinates)})),n.length<2)throw new Error(\"Must have at least 2 geometries\");var r=Os.apply(Fs,[n[0]].concat(d(n.slice(1))));return 0===r.length?null:1===r.length?S(r[0],e.properties):R(r,e.properties)},t.unkinkPolygon=function(t){var e=[];return xt(t,(function(t){\"Polygon\"===t.geometry.type&&vt(Ll(t),(function(n){e.push(S(n.geometry.coordinates,t.properties))}))})),C(e)},t.validateBBox=H,t.validateId=W,t.voronoi=function(t,e){if(!Z(e=e||{}))throw new Error(\"options is invalid\");var n=e.bbox||[-180,-85,180,85];if(!t)throw new Error(\"points is required\");if(!Array.isArray(n))throw new Error(\"bbox is invalid\");return nt(t,\"Point\",\"points\"),C(function(){var t=Fl,e=ql,n=null;function r(r){return new mh(r.map((function(n,i){var o=[Math.round(t(n,i,r)/vh)*vh,Math.round(e(n,i,r)/vh)*vh];return o.index=i,o.data=n,o})),n)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(e){return arguments.length?(t=\"function\"==typeof e?e:Dl(+e),r):t},r.y=function(t){return arguments.length?(e=\"function\"==typeof t?t:Dl(+t),r):e},r.extent=function(t){return arguments.length?(n=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):n&&[[n[0][0],n[0][1]],[n[1][0],n[1][1]]]},r.size=function(t){return arguments.length?(n=null==t?null:[[0,0],[+t[0],+t[1]]],r):n&&[n[1][0]-n[0][0],n[1][1]-n[0][1]]},r}().x((function(t){return t.geometry.coordinates[0]})).y((function(t){return t.geometry.coordinates[1]})).extent([[n[0],n[1]],[n[2],n[3]]]).polygons(t.features).map((function(e,n){return Object.assign(function(t){return(t=t.slice()).push(t[0]),S([t])}(e),{properties:Fi(t.features[n].properties)})})))}}));\n","import {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from 'three';\n\nconst _box = new Box3();\nconst _vector = new Vector3();\n\nclass LineSegmentsGeometry extends InstancedBufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'LineSegmentsGeometry';\n\n\t\tconst positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\t\tconst uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\t\tconst index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\t\tthis.setIndex( index );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetPositions( array ) {\n\n\t\tlet lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tconst instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t}\n\n\tsetColors( array ) {\n\n\t\tlet colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tconst instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t}\n\n\tfromWireframeGeometry( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t}\n\n\tfromEdgesGeometry( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t}\n\n\tfromMesh( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t}\n\n\tromLineSegments( lineSegments ) {\n\n\t\tconst geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineSegmentsGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t_box.setFromBufferAttribute( end );\n\n\t\t\tthis.boundingBox.union( _box );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tconst start = this.attributes.instanceStart;\n\t\tconst end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t_vector.fromBufferAttribute( start, i );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t\t_vector.fromBufferAttribute( end, i );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector ) );\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON() {\n\n\t\t// todo\n\n\t}\n\n\tapplyMatrix( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n}\n\nLineSegmentsGeometry.prototype.isLineSegmentsGeometry = true;\n\nexport { LineSegmentsGeometry };\n","import {\n\tShaderLib,\n\tShaderMaterial,\n\tUniformsLib,\n\tUniformsUtils,\n\tVector2\n} from 'three';\n\n/**\n * parameters = {\n *  color: <hex>,\n *  linewidth: <float>,\n *  dashed: <boolean>,\n *  dashScale: <float>,\n *  dashSize: <float>,\n *  dashOffset: <float>,\n *  gapSize: <float>,\n *  resolution: <Vector2>, // to be set by renderer\n * }\n */\n\nUniformsLib.line = {\n\n\tlinewidth: { value: 1 },\n\tresolution: { value: new Vector2( 1, 1 ) },\n\tdashScale: { value: 1 },\n\tdashSize: { value: 1 },\n\tdashOffset: { value: 0 },\n\tgapSize: { value: 1 }, // todo FIX - maybe change to totalSize\n\topacity: { value: 1 }\n\n};\n\nShaderLib[ 'line' ] = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tUniformsLib.common,\n\t\tUniformsLib.fog,\n\t\tUniformsLib.line\n\t] ),\n\n\tvertexShader:\n\t\t`\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\tvarying vec2 vUv;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\tvUv = uv;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec2 ndcStart = clipStart.xy / clipStart.w;\n\t\t\tvec2 ndcEnd = clipEnd.xy / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd - ndcStart;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t// perpendicular to dir\n\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\n\t\t\t// undo aspect ratio adjustment\n\t\t\tdir.x /= aspect;\n\t\t\toffset.x /= aspect;\n\n\t\t\t// sign flip\n\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t// endcaps\n\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\toffset += - dir;\n\n\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\toffset += dir;\n\n\t\t\t}\n\n\t\t\t// adjust for linewidth\n\t\t\toffset *= linewidth;\n\n\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\toffset /= resolution.y;\n\n\t\t\t// select end\n\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t// back to clip space\n\t\t\toffset *= clip.w;\n\n\t\t\tclip.xy += offset;\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t`,\n\n\tfragmentShader:\n\t\t`\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashSize;\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tfloat alpha = opacity;\n\n\t\t\t#ifdef ALPHA_TO_COVERAGE\n\n\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\tfloat a = vUv.x;\n\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\tfloat len2 = a * a + b * b;\n\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t}\n\n\t\t\t#else\n\n\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\tfloat a = vUv.x;\n\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t}\n\n\t\t\t#endif\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t`\n};\n\nclass LineMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( {\n\n\t\t\ttype: 'LineMaterial',\n\n\t\t\tuniforms: UniformsUtils.clone( ShaderLib[ 'line' ].uniforms ),\n\n\t\t\tvertexShader: ShaderLib[ 'line' ].vertexShader,\n\t\t\tfragmentShader: ShaderLib[ 'line' ].fragmentShader,\n\n\t\t\tclipping: true // required for clipping support\n\n\t\t} );\n\n\t\tthis.dashed = false;\n\n\t\tObject.defineProperties( this, {\n\n\t\t\tcolor: {\n\n\t\t\t\tenumerable: true,\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.diffuse.value;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.diffuse.value = value;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tlinewidth: {\n\n\t\t\t\tenumerable: true,\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.linewidth.value;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.linewidth.value = value;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tdashScale: {\n\n\t\t\t\tenumerable: true,\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.dashScale.value;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.dashScale.value = value;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tdashSize: {\n\n\t\t\t\tenumerable: true,\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.dashSize.value;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.dashSize.value = value;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tdashOffset: {\n\n\t\t\t\tenumerable: true,\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.dashOffset.value;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.dashOffset.value = value;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tgapSize: {\n\n\t\t\t\tenumerable: true,\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.gapSize.value;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.gapSize.value = value;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\topacity: {\n\n\t\t\t\tenumerable: true,\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.opacity.value;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.opacity.value = value;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tresolution: {\n\n\t\t\t\tenumerable: true,\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn this.uniforms.resolution.value;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tthis.uniforms.resolution.value.copy( value );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\talphaToCoverage: {\n\n\t\t\t\tenumerable: true,\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn Boolean( 'ALPHA_TO_COVERAGE' in this.defines );\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( Boolean( value ) !== Boolean( 'ALPHA_TO_COVERAGE' in this.defines ) ) {\n\n\t\t\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\tthis.defines.ALPHA_TO_COVERAGE = '';\n\t\t\t\t\t\tthis.extensions.derivatives = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdelete this.defines.ALPHA_TO_COVERAGE;\n\t\t\t\t\t\tthis.extensions.derivatives = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nLineMaterial.prototype.isLineMaterial = true;\n\nexport { LineMaterial };\n","import {\n\tBox3,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tLine3,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tSphere,\n\tVector3,\n\tVector4\n} from 'three';\nimport { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry.js';\nimport { LineMaterial } from '../lines/LineMaterial.js';\n\nconst _start = new Vector3();\nconst _end = new Vector3();\n\nconst _start4 = new Vector4();\nconst _end4 = new Vector4();\n\nconst _ssOrigin = new Vector4();\nconst _ssOrigin3 = new Vector3();\nconst _mvMatrix = new Matrix4();\nconst _line = new Line3();\nconst _closestPoint = new Vector3();\n\nconst _box = new Box3();\nconst _sphere = new Sphere();\nconst _clipToWorldVector = new Vector4();\n\nclass LineSegments2 extends Mesh {\n\n\tconstructor( geometry = new LineSegmentsGeometry(), material = new LineMaterial( { color: Math.random() * 0xffffff } ) ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'LineSegments2';\n\n\t}\n\n\t// for backwards-compatability, but could be a method of LineSegmentsGeometry...\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst instanceStart = geometry.attributes.instanceStart;\n\t\tconst instanceEnd = geometry.attributes.instanceEnd;\n\t\tconst lineDistances = new Float32Array( 2 * instanceStart.count );\n\n\t\tfor ( let i = 0, j = 0, l = instanceStart.count; i < l; i ++, j += 2 ) {\n\n\t\t\t_start.fromBufferAttribute( instanceStart, i );\n\t\t\t_end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\tlineDistances[ j ] = ( j === 0 ) ? 0 : lineDistances[ j - 1 ];\n\t\t\tlineDistances[ j + 1 ] = lineDistances[ j ] + _start.distanceTo( _end );\n\n\t\t}\n\n\t\tconst instanceDistanceBuffer = new InstancedInterleavedBuffer( lineDistances, 2, 1 ); // d0, d1\n\n\t\tgeometry.setAttribute( 'instanceDistanceStart', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 0 ) ); // d0\n\t\tgeometry.setAttribute( 'instanceDistanceEnd', new InterleavedBufferAttribute( instanceDistanceBuffer, 1, 1 ) ); // d1\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'LineSegments2: \"Raycaster.camera\" needs to be set in order to raycast against LineSegments2.' );\n\n\t\t}\n\n\t\tconst threshold = ( raycaster.params.Line2 !== undefined ) ? raycaster.params.Line2.threshold || 0 : 0;\n\n\t\tconst ray = raycaster.ray;\n\t\tconst camera = raycaster.camera;\n\t\tconst projectionMatrix = camera.projectionMatrix;\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst resolution = material.resolution;\n\t\tconst lineWidth = material.linewidth + threshold;\n\n\t\tconst instanceStart = geometry.attributes.instanceStart;\n\t\tconst instanceEnd = geometry.attributes.instanceEnd;\n\n\t\t// camera forward is negative\n\t\tconst near = - camera.near;\n\n\t\t// clip space is [ - 1, 1 ] so multiply by two to get the full\n\t\t// width in clip space\n\t\tconst ssMaxWidth = 2.0 * Math.max( lineWidth / resolution.width, lineWidth / resolution.height );\n\n\t\t//\n\n\t\t// check if we intersect the sphere bounds\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\t_sphere.copy( geometry.boundingSphere ).applyMatrix4( matrixWorld );\n\t\tconst distanceToSphere = Math.max( camera.near, _sphere.distanceToPoint( ray.origin ) );\n\n\t\t// get the w component to scale the world space line width\n\t\t_clipToWorldVector.set( 0, 0, - distanceToSphere, 1.0 ).applyMatrix4( camera.projectionMatrix );\n\t\t_clipToWorldVector.multiplyScalar( 1.0 / _clipToWorldVector.w );\n\t\t_clipToWorldVector.applyMatrix4( camera.projectionMatrixInverse );\n\n\t\t// increase the sphere bounds by the worst case line screen space width\n\t\tconst sphereMargin = Math.abs( ssMaxWidth / _clipToWorldVector.w ) * 0.5;\n\t\t_sphere.radius += sphereMargin;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\t// check if we intersect the box bounds\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\t_box.copy( geometry.boundingBox ).applyMatrix4( matrixWorld );\n\t\tconst distanceToBox = Math.max( camera.near, _box.distanceToPoint( ray.origin ) );\n\n\t\t// get the w component to scale the world space line width\n\t\t_clipToWorldVector.set( 0, 0, - distanceToBox, 1.0 ).applyMatrix4( camera.projectionMatrix );\n\t\t_clipToWorldVector.multiplyScalar( 1.0 / _clipToWorldVector.w );\n\t\t_clipToWorldVector.applyMatrix4( camera.projectionMatrixInverse );\n\n\t\t// increase the sphere bounds by the worst case line screen space width\n\t\tconst boxMargin = Math.abs( ssMaxWidth / _clipToWorldVector.w ) * 0.5;\n\t\t_box.max.x += boxMargin;\n\t\t_box.max.y += boxMargin;\n\t\t_box.max.z += boxMargin;\n\t\t_box.min.x -= boxMargin;\n\t\t_box.min.y -= boxMargin;\n\t\t_box.min.z -= boxMargin;\n\n\t\tif ( raycaster.ray.intersectsBox( _box ) === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t//\n\n\t\t// pick a point 1 unit out along the ray to avoid the ray origin\n\t\t// sitting at the camera origin which will cause \"w\" to be 0 when\n\t\t// applying the projection matrix.\n\t\tray.at( 1, _ssOrigin );\n\n\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t_ssOrigin.w = 1;\n\t\t_ssOrigin.applyMatrix4( camera.matrixWorldInverse );\n\t\t_ssOrigin.applyMatrix4( projectionMatrix );\n\t\t_ssOrigin.multiplyScalar( 1 / _ssOrigin.w );\n\n\t\t// screen space\n\t\t_ssOrigin.x *= resolution.x / 2;\n\t\t_ssOrigin.y *= resolution.y / 2;\n\t\t_ssOrigin.z = 0;\n\n\t\t_ssOrigin3.copy( _ssOrigin );\n\n\t\t_mvMatrix.multiplyMatrices( camera.matrixWorldInverse, matrixWorld );\n\n\t\tfor ( let i = 0, l = instanceStart.count; i < l; i ++ ) {\n\n\t\t\t_start4.fromBufferAttribute( instanceStart, i );\n\t\t\t_end4.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t_start.w = 1;\n\t\t\t_end.w = 1;\n\n\t\t\t// camera space\n\t\t\t_start4.applyMatrix4( _mvMatrix );\n\t\t\t_end4.applyMatrix4( _mvMatrix );\n\n\t\t\t// skip the segment if it's entirely behind the camera\n\t\t\tvar isBehindCameraNear = _start4.z > near && _end4.z > near;\n\t\t\tif ( isBehindCameraNear ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// trim the segment if it extends behind camera near\n\t\t\tif ( _start4.z > near ) {\n\n\t\t\t\tconst deltaDist = _start4.z - _end4.z;\n\t\t\t\tconst t = ( _start4.z - near ) / deltaDist;\n\t\t\t\t_start4.lerp( _end4, t );\n\n\t\t\t} else if ( _end4.z > near ) {\n\n\t\t\t\tconst deltaDist = _end4.z - _start4.z;\n\t\t\t\tconst t = ( _end4.z - near ) / deltaDist;\n\t\t\t\t_end4.lerp( _start4, t );\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\t_start4.applyMatrix4( projectionMatrix );\n\t\t\t_end4.applyMatrix4( projectionMatrix );\n\n\t\t\t// ndc space [ - 1.0, 1.0 ]\n\t\t\t_start4.multiplyScalar( 1 / _start4.w );\n\t\t\t_end4.multiplyScalar( 1 / _end4.w );\n\n\t\t\t// screen space\n\t\t\t_start4.x *= resolution.x / 2;\n\t\t\t_start4.y *= resolution.y / 2;\n\n\t\t\t_end4.x *= resolution.x / 2;\n\t\t\t_end4.y *= resolution.y / 2;\n\n\t\t\t// create 2d segment\n\t\t\t_line.start.copy( _start4 );\n\t\t\t_line.start.z = 0;\n\n\t\t\t_line.end.copy( _end4 );\n\t\t\t_line.end.z = 0;\n\n\t\t\t// get closest point on ray to segment\n\t\t\tconst param = _line.closestPointToPointParameter( _ssOrigin3, true );\n\t\t\t_line.at( param, _closestPoint );\n\n\t\t\t// check if the intersection point is within clip space\n\t\t\tconst zPos = MathUtils.lerp( _start4.z, _end4.z, param );\n\t\t\tconst isInClipSpace = zPos >= - 1 && zPos <= 1;\n\n\t\t\tconst isInside = _ssOrigin3.distanceTo( _closestPoint ) < lineWidth * 0.5;\n\n\t\t\tif ( isInClipSpace && isInside ) {\n\n\t\t\t\t_line.start.fromBufferAttribute( instanceStart, i );\n\t\t\t\t_line.end.fromBufferAttribute( instanceEnd, i );\n\n\t\t\t\t_line.start.applyMatrix4( matrixWorld );\n\t\t\t\t_line.end.applyMatrix4( matrixWorld );\n\n\t\t\t\tconst pointOnLine = new Vector3();\n\t\t\t\tconst point = new Vector3();\n\n\t\t\t\tray.distanceSqToSegment( _line.start, _line.end, point, pointOnLine );\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tpoint: point,\n\t\t\t\t\tpointOnLine: pointOnLine,\n\t\t\t\t\tdistance: ray.origin.distanceTo( point ),\n\n\t\t\t\t\tobject: this,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: i,\n\t\t\t\t\tuv: null,\n\t\t\t\t\tuv2: null,\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nLineSegments2.prototype.LineSegments2 = true;\n\nexport { LineSegments2 };\n","import { LineSegmentsGeometry } from '../lines/LineSegmentsGeometry.js';\n\nclass LineGeometry extends LineSegmentsGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.type = 'LineGeometry';\n\n\t}\n\n\tsetPositions( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tsuper.setPositions( points );\n\n\t\treturn this;\n\n\t}\n\n\tsetColors( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tsuper.setColors( colors );\n\n\t\treturn this;\n\n\t}\n\n\tfromLine( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.LineGeometry no longer supports Geometry. Use THREE.BufferGeometry instead.' );\n\t\t\treturn;\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t}\n\n\tcopy( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n}\n\nLineGeometry.prototype.isLineGeometry = true;\n\nexport { LineGeometry };\n","import { LineSegments2 } from '../lines/LineSegments2.js';\nimport { LineGeometry } from '../lines/LineGeometry.js';\nimport { LineMaterial } from '../lines/LineMaterial.js';\n\nclass Line2 extends LineSegments2 {\n\n\tconstructor( geometry = new LineGeometry(), material = new LineMaterial( { color: Math.random() * 0xffffff } ) ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'Line2';\n\n\t}\n\n}\n\nLine2.prototype.isLine2 = true;\n\nexport { Line2 };\n","import \"./styles.css\";\nimport * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { BufferGeometryUtils } from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport * as TWEEN from \"@tweenjs/tween.js\";\nimport * as turf from \"@turf/turf\";\n\nimport WORLD_TEXTURE from \"../src/assets/world_white.png\";\nimport TREECOVER_DATA_URL from \"../src/data/forestclipped.asc\";\nimport GDP_ASC_URL from \"../src/data/2000GDPresample.asc\";\n\nimport COUNTRY_BRAZIL from \"../src/data/Brazil.geojson\";\nimport COUNTRY_POLAND from \"../src/data/Poland.geojson\";\nimport COUNTRY_SOUTHKOREA from \"../src/data/SouthKorea.geojson\";\nimport GLOBAL_BOUNDARIES from \"../src/data/globalboundaries_simplified.geojson\";\n\nimport { Line2 } from \"three/examples/jsm/lines/Line2.js\";\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial.js\";\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry.js\";\n\n\n/* ---------------- Tweens ---------------- */\nclass TweenManger {\n  constructor() { this.numTweensRunning = 0; }\n  _handleComplete() { --this.numTweensRunning; console.assert(this.numTweensRunning >= 0); }\n  createTween(targetObject) {\n    const self = this;\n    ++this.numTweensRunning;\n    let userCompleteFn = () => { };\n    const tween = new TWEEN.Tween(targetObject).onComplete(function (...args) {\n      self._handleComplete();\n      userCompleteFn.call(this, ...args);\n    });\n    tween.onComplete = (fn) => { userCompleteFn = fn; return tween; };\n    return tween;\n  }\n  update() { TWEEN.update(); return this.numTweensRunning > 0; }\n}\n\n/* ---------------- Main ---------------- */\nfunction main() {\n  const canvas = document.querySelector(\"#c\");\n  const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\n  const tweenManager = new TweenManger();\n\n  const fov = 60, aspect = 2, near = 0.1, far = 10;\n  const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  camera.position.set(4, 0, 0);\n\n  const controls = new OrbitControls(camera, canvas);\n  controls.enableDamping = true;\n  controls.enablePan = false;\n  controls.minDistance = 1.5;\n  controls.maxDistance = 3;\n  controls.update();\n\n  const raycaster = new THREE.Raycaster();\n  const mouse = new THREE.Vector2();\n\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xffffff);\n\n  // --- mapping fudge (must match rasters & bars) ---\n  const lonFudge = Math.PI * 0.5;\n  const latFudge = Math.PI * -0.135;\n\n  // projector helpers at scene root\n  const lonHelperLL = new THREE.Object3D(); scene.add(lonHelperLL);\n  const latHelperLL = new THREE.Object3D(); lonHelperLL.add(latHelperLL);\n  const posHelperLL = new THREE.Object3D(); posHelperLL.position.z = 1.01; // a hair above the globe\n  latHelperLL.add(posHelperLL);\n\n  function normLon(lon) {\n    let L = lon;\n    if (L > 180) L -= 360;\n    if (L < -180) L += 360;\n    return L;\n  }\n  function normLon360(lon) {\n    return ((lon + 180) % 360 + 360) % 360 - 180; // [-180,180)\n  }\n  function projectLL(lat, lon) {\n    lonHelperLL.rotation.y = THREE.MathUtils.degToRad(normLon(lon)) + lonFudge;\n    latHelperLL.rotation.x = THREE.MathUtils.degToRad(lat) + latFudge;\n    posHelperLL.updateWorldMatrix(true, false);\n    return new THREE.Vector3().setFromMatrixPosition(posHelperLL.matrixWorld);\n  }\n  function vector3ToLatLon(v) {\n    const r = v.length();\n    const phi = Math.acos(v.y / r);\n    const theta = Math.atan2(v.z, v.x);\n    const lat = 90 - THREE.MathUtils.radToDeg(phi);\n    let lon = THREE.MathUtils.radToDeg(theta);\n    if (lon > 180) lon -= 360;\n    if (lon < -180) lon += 360;\n    return { lat, lon };\n  }\n\n  /* ---------- Globe ---------- */\n  let earthMesh;\n  {\n    const loader = new THREE.TextureLoader();\n    const texture = loader.load(WORLD_TEXTURE, render);\n    const geometry = new THREE.SphereGeometry(1, 64, 32);\n    const material = new THREE.MeshBasicMaterial({ map: texture });\n    earthMesh = new THREE.Mesh(geometry, material);\n    earthMesh.rotation.y = Math.PI * -0.5;\n    scene.add(earthMesh);\n\n    const atmosphereShader = {\n      uniforms: {},\n      vertexShader: `\n        varying vec3 vNormal;\n        void main(){\n          vNormal = normalize(normalMatrix * normal);\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n        }`,\n      fragmentShader: `\n        varying vec3 vNormal;\n        void main(){\n          float intensity = pow(0.8 - dot(vNormal, vec3(0,0,1.0)), 12.0);\n          gl_FragColor = vec4(1.0,1.0,1.0,1.0) * intensity;\n        }`\n    };\n    const atmosphereMaterial = new THREE.ShaderMaterial({\n      uniforms: THREE.UniformsUtils.clone(atmosphereShader.uniforms),\n      vertexShader: atmosphereShader.vertexShader,\n      fragmentShader: atmosphereShader.fragmentShader,\n      side: THREE.BackSide,\n      blending: THREE.AdditiveBlending,\n      transparent: true\n    });\n    const atmosphereMesh = new THREE.Mesh(new THREE.SphereGeometry(1.07, 40, 30), atmosphereMaterial);\n    atmosphereMesh.scale.set(1.1, 1.1, 1.1);\n    scene.add(atmosphereMesh);\n  }\n\n  /* ---------- Groups & materials ---------- */\n\n  const LINE2_MATERIALS = [];\n\n  function line2FromPoints(points, material) {\n    // points: THREE.Vector3[]\n    const positions = [];\n    for (const p of points) { positions.push(p.x, p.y, p.z); }\n    const geom = new LineGeometry();\n    geom.setPositions(positions);\n    const line = new Line2(geom, material);\n    line.computeLineDistances();\n    return line;\n  }\n\n\n  const countryOutlineGroup = new THREE.Group(); countryOutlineGroup.rotation.y = Math.PI * -0.5; scene.add(countryOutlineGroup);\n  const globalBoundariesGroup = new THREE.Group(); globalBoundariesGroup.rotation.y = Math.PI * -0.5; scene.add(globalBoundariesGroup);\n  const labelGroup = new THREE.Group(); labelGroup.rotation.y = Math.PI * -0.5; scene.add(labelGroup);\n\n  const outlineMaterial = new THREE.LineBasicMaterial({\n    color: 0x111111, transparent: true, opacity: 0.5,\n    blending: THREE.AdditiveBlending, depthWrite: false\n  });\n  // groups\n  countryOutlineGroup.rotation.y = Math.PI * -0.5;\n  scene.add(countryOutlineGroup);\n\n  // NEW: a second group that’s slightly larger to fake a halo\n  const countryGlowGroup = new THREE.Group();\n  countryGlowGroup.rotation.y = Math.PI * -0.5;\n  countryGlowGroup.scale.set(1.03, 1.03, 1.03);   // push ~2% off the globe\n  countryGlowGroup.renderOrder = 999;             // draw late\n  scene.add(countryGlowGroup);\n\n  // global boundaries stay subtle\n\n  globalBoundariesGroup.rotation.y = Math.PI * -0.5;\n  scene.add(globalBoundariesGroup);\n\n  // materials\n  const selectedOutlineMaterial = new THREE.LineBasicMaterial({\n    color: 0xa2a6b1,       \n    transparent: true,\n    opacity: 0.5,\n    depthWrite: false\n  });\n\n  const selectedGlowMaterial = new THREE.LineBasicMaterial({\n    color: 0xf3edc7,       // glow color \n    transparent: true,\n    opacity: 0.85,\n    blending: THREE.AdditiveBlending,\n    depthWrite: false,\n    depthTest: false\n  });\n\n  const globalBoundariesMaterial = new THREE.LineBasicMaterial({\n    color: 0xbfc5cc,       // light grey so it sits back on white\n    transparent: true,\n    opacity: 0.25,\n    depthWrite: false\n  });\n\n  // “thin” crisp outline (in screen pixels, independent of zoom)\nconst selectedOutlineMat2 = new LineMaterial({\n  color: 0x0f0f0f,\n  transparent: true,\n  opacity: 0.9,\n  linewidth: 0.6,         // <= thinner than 1px look\n});\nLINE2_MATERIALS.push(selectedOutlineMat2);\n\nconst selectedGlowMat2 = new LineMaterial({\n  color: 0xffd24d,        // yellow\n  transparent: true,\n  opacity: 0.9,\n  linewidth: 2.0,         // thick halo line\n  dashed: false\n});\nLINE2_MATERIALS.push(selectedGlowMat2);\n\n\n  const geoJsonLatOffset = 25;\n\n  /* ---------- Labels ---------- */\n  const LABEL_NORMAL = { text: \"rgba(132, 132, 132, 0.95)\", underline: \"rgba(57, 57, 57, 0.85)\" };\n  const LABEL_HOVER = { text: \"#ffd24d\", underline: \"#ffd24d\" };\n\n  // Pick your label styling in one place\n  const LABEL_FONT_SIZE = 16;\n  const LABEL_FONT_WEIGHT = 200;      // 600  semi-bold; 400 = normal\n  const LABEL_WORLD_HEIGHT = 0.10;\n  const LABEL_UNDERLINE_THICKNESS = 1;\n  const LABEL_PADDING_X = 4, LABEL_PADDING_Y = 3;\n\n  function drawLabelTexture(text, hovered = false) {\n    const colors = hovered ? LABEL_HOVER : LABEL_NORMAL;\n    const font = `${LABEL_FONT_WEIGHT} ${LABEL_FONT_SIZE}px Georgia, serif`;\n\n    const c = document.createElement(\"canvas\");\n    const ctx = c.getContext(\"2d\");\n    ctx.font = font;\n\n    const w = Math.ceil(ctx.measureText(text).width);\n    const h = Math.ceil(LABEL_FONT_SIZE * 1.25);\n    const cw = w + LABEL_PADDING_X * 2;\n    const ch = h + LABEL_PADDING_Y * 2;\n\n    const pot = (n) => 2 ** Math.ceil(Math.log2(n));\n    c.width = pot(cw); c.height = pot(ch);\n    ctx.scale(c.width / cw, c.height / ch);\n    ctx.clearRect(0, 0, cw, ch);\n\n    ctx.font = font;\n    ctx.fillStyle = colors.text;\n    ctx.textBaseline = \"middle\";\n    const midY = ch / 2;\n    ctx.fillText(text, LABEL_PADDING_X, midY);\n\n    // underline\n    const underlineY = midY + Math.floor(LABEL_FONT_SIZE / 2) - 4 + 5; // small gap\n    ctx.beginPath();\n    ctx.moveTo(LABEL_PADDING_X, underlineY);\n    ctx.lineTo(LABEL_PADDING_X + w, underlineY);\n    ctx.lineWidth = LABEL_UNDERLINE_THICKNESS;\n    ctx.strokeStyle = colors.underline;\n    ctx.stroke();\n\n    const tex = new THREE.CanvasTexture(c);\n    tex.anisotropy = 8;\n    tex.minFilter = THREE.LinearMipmapLinearFilter; // smooth small sizes\n    tex.magFilter = THREE.LinearFilter;\n    tex.needsUpdate = true;\n    return { texture: tex, width: cw, height: ch };\n  }\n\n  function makeTextSprite(text) {\n    const { texture, width, height } = drawLabelTexture(text, false);\n    const sprite = new THREE.Sprite(new THREE.SpriteMaterial({\n      map: texture, transparent: true, depthTest: false, depthWrite: false,\n    }));\n\n    const aspect = width / height;\n    sprite.scale.set(LABEL_WORLD_HEIGHT * aspect, LABEL_WORLD_HEIGHT, 1);\n    sprite.renderOrder = 1000;\n\n    sprite.userData._hovered = false;\n    sprite.userData.updateHover = (hovered) => {\n      if (sprite.userData._hovered === hovered) return;\n      sprite.userData._hovered = hovered;\n      const { texture: t2, width: w2, height: h2 } = drawLabelTexture(text, hovered);\n      sprite.material.map.dispose();\n      sprite.material.map = t2;\n      // keep the same world height when hovered\n      const asp2 = w2 / h2;\n      sprite.scale.set(LABEL_WORLD_HEIGHT * asp2, LABEL_WORLD_HEIGHT, 1);\n      sprite.material.needsUpdate = true;\n    };\n    return sprite;\n  }\n\n  function addCountryLabel({ name, code, lat, lon }) {\n    const pos = projectLL(-lat + geoJsonLatOffset, lon);\n    const outward = pos.clone().normalize().multiplyScalar(1.02);\n    const label = makeTextSprite(name);\n    label.position.copy(outward);\n    label.userData.countryCode = code;\n    label.name = `label:${code}`;\n    labelGroup.add(label);\n    return label;\n  }\n\n  addCountryLabel({ name: \"Brazil\", code: \"BRA\", lat: -10.0, lon: -52.0 });\n  addCountryLabel({ name: \"Poland\", code: \"POL\", lat: 52.0, lon: 19.0 });\n  addCountryLabel({ name: \"South Korea\", code: \"KOR\", lat: 36.0, lon: 128.0 });\n\n  /* ---------- Boundaries & helpers ---------- */\n  function ringToLine(ring, material) {\n    const pts = [];\n    for (const [lon, lat] of ring) pts.push(projectLL(-lat + geoJsonLatOffset, lon));\n    const [lon0, lat0] = ring[0], [lonN, latN] = ring[ring.length - 1];\n    if (lon0 !== lonN || lat0 !== latN) pts.push(projectLL(-lat0 + geoJsonLatOffset, lon0));\n    return new THREE.Line(new THREE.BufferGeometry().setFromPoints(pts), material.clone());\n  }\n\n  function ringToLine2(ring, material, scale = 1.0) {\n  const pts = [];\n  for (const [lon, lat] of ring) pts.push(projectLL(-lat + geoJsonLatOffset, lon).multiplyScalar(scale));\n  const [lon0, lat0] = ring[0], [lonN, latN] = ring[ring.length - 1];\n  if (lon0 !== lonN || lat0 !== latN) pts.push(projectLL(-lat0 + geoJsonLatOffset, lon0).multiplyScalar(scale));\n  return line2FromPoints(pts, material);\n}\n\n\n  function addCountryOutline(feature, parentGroup, material) {\n    const g = feature.geometry; if (!g) return;\n    const addPoly = (poly) => {\n      parentGroup.add(ringToLine(poly[0], material));\n      for (let i = 1; i < poly.length; ++i) {\n        const hole = ringToLine(poly[i], material);\n        hole.material.opacity = material.opacity * 0.4;\n        parentGroup.add(hole);\n      }\n    };\n    if (g.type === \"Polygon\") addPoly(g.coordinates);\n    else if (g.type === \"MultiPolygon\") for (const poly of g.coordinates) addPoly(poly);\n  }\n\n  async function loadFile(url) { const req = await fetch(url); return req.text(); }\n\n  // ESRI ASCII parser (normalizes xllcenter/yllcenter to corners)\n  function parseData(text) {\n    if (text && text.charCodeAt(0) === 0xFEFF) text = text.slice(1);\n    const data = [], settings = { data };\n    let max, min;\n\n    const lines = text.split(/\\r?\\n/).filter(Boolean);\n    for (const line of lines) {\n      const parts = line.trim().split(/\\s+/);\n      if (parts.length === 2) {\n        const k = parts[0], raw = parts[1], v = Number(raw);\n        settings[k] = Number.isFinite(v) ? v : raw;\n      } else if (parts.length > 2) break;\n    }\n\n    const hasXCenter = \"xllcenter\" in settings;\n    const hasYCenter = \"yllcenter\" in settings;\n\n    settings.ncols = Number(settings.ncols);\n    settings.nrows = Number(settings.nrows);\n    settings.cellsize = Number(settings.cellsize);\n    settings.NODATA_value = Number(settings.NODATA_value);\n\n    let xll = Number(settings.xllcorner);\n    let yll = Number(settings.yllcorner);\n    if (hasXCenter) xll = Number(settings.xllcenter) - settings.cellsize * 0.5;\n    if (hasYCenter) yll = Number(settings.yllcenter) - settings.cellsize * 0.5;\n    settings.xllcorner = xll; settings.yllcorner = yll;\n\n    for (const line of lines) {\n      const parts = line.trim().split(/\\s+/);\n      if (parts.length <= 2) continue;\n      const values = parts.map((str) => {\n        const v = Number(str);\n        if (!Number.isFinite(v)) return undefined;\n        if (v === settings.NODATA_value) return undefined;\n        max = Math.max(max === undefined ? v : max, v);\n        min = Math.min(min === undefined ? v : min, v);\n        return v;\n      });\n      data.push(values);\n    }\n    return Object.assign(settings, { min, max });\n  }\n\n  const COUNTRY_FEATURES = [];\n\n  async function loadGlobalBoundaries() {\n    try {\n      const res = await fetch(GLOBAL_BOUNDARIES);\n      const gj = await res.json();\n      const features = gj.type === \"FeatureCollection\" ? gj.features : gj.type === \"Feature\" ? [gj] : [];\n      const polys = features.filter(f => f.geometry && (f.geometry.type === \"Polygon\" || f.geometry.type === \"MultiPolygon\"));\n      polys.forEach(f => addCountryOutline(f, globalBoundariesGroup, globalBoundariesMaterial));\n    } catch (e) { console.error(\"[global boundaries] Failed to load:\", e); }\n  }\n\n  async function loadCountries() {\n    const infos = [\n      { name: \"Brazil\", code: \"BRA\", url: COUNTRY_BRAZIL },\n      { name: \"Poland\", code: \"POL\", url: COUNTRY_POLAND },\n      { name: \"South Korea\", code: \"KOR\", url: COUNTRY_SOUTHKOREA }\n    ];\n    for (const info of infos) {\n      try {\n        const res = await fetch(info.url);\n        const gj = await res.json();\n        const features = gj.type === \"FeatureCollection\" ? gj.features : gj.type === \"Feature\" ? [gj] : [];\n        const polys = features.filter(f => f.geometry && (f.geometry.type === \"Polygon\" || f.geometry.type === \"MultiPolygon\"));\n        polys.forEach(f => {\n          const transformGeometry = (geom) => {\n            const transformCoords = (coords) => {\n              if (typeof coords[0] === \"number\") { const [lon, lat] = coords; return [lon, -lat + geoJsonLatOffset]; }\n              return coords.map(transformCoords);\n            };\n            const newGeom = { type: geom.type };\n            if (geom.type === \"Polygon\") newGeom.coordinates = geom.coordinates.map(r => transformCoords(r));\n            else if (geom.type === \"MultiPolygon\") newGeom.coordinates = geom.coordinates.map(p => p.map(r => transformCoords(r)));\n            return newGeom;\n          };\n          COUNTRY_FEATURES.push({ type: \"Feature\", properties: { NAME: info.name, CODE: info.code }, geometry: transformGeometry(f.geometry) });\n          // crisp near-black outline\n          addCountryOutline(f, countryOutlineGroup, selectedOutlineMaterial);\n\n          // soft halo (same geometry, drawn in a slightly up-scaled group)\n          //addCountryOutline(f, countryGlowGroup, selectedGlowMaterial);\n\n        });\n      } catch (e) { console.error(`[countries] Failed to load ${info.name}:`, e); }\n    }\n  }\n\n  /* ---------- Raster bars (generic) ---------- */\n  function makeBoxes(file, hueRange, maxBoxes = 150_000, opts = {}) {\n    const { min, max, data, xllcorner, yllcorner, cellsize, nrows, ncols } = file;\n    const range = (max - min) || 1;\n\n    const totalCells = nrows * ncols;\n    const stride = Math.max(1, Math.ceil(Math.sqrt(totalCells / maxBoxes)));\n\n    const lonHelper = new THREE.Object3D(); scene.add(lonHelper);\n    const latHelper = new THREE.Object3D(); lonHelper.add(latHelper);\n    const positionHelper = new THREE.Object3D(); positionHelper.position.z = 1; latHelper.add(positionHelper);\n    const originHelper = new THREE.Object3D(); originHelper.position.z = 0.5; positionHelper.add(originHelper);\n\n    const color = new THREE.Color();\n    const geometries = [];\n\n    for (let row = 0; row < nrows; row += stride) {\n      const lat = yllcorner + (row + 0.5) * cellsize;\n      const rowData = data[row]; if (!rowData) continue;\n\n      for (let col = 0; col < ncols; col += stride) {\n        if (col === ncols - 1) continue; // avoid duplicated wrap column seam\n\n        const v = rowData[col];\n        if (v === undefined || v === 0) continue;\n\n        const lonRaw = xllcorner + (col + 0.5) * cellsize;\n        const lon = normLon360(lonRaw);\n\n        const t = (v - min) / range;\n\n        const geometry = new THREE.BoxGeometry(1, 1, 1);\n\n        lonHelper.rotation.y = THREE.MathUtils.degToRad(lon) + lonFudge;\n        latHelper.rotation.x = THREE.MathUtils.degToRad(lat) + latFudge;\n\n        positionHelper.scale.set(0.005, 0.005, THREE.MathUtils.lerp(0.000001, 0.02, t));\n        originHelper.updateWorldMatrix(true, false);\n        geometry.applyMatrix4(originHelper.matrixWorld);\n\n        // --- NEW: palette ramp support ---\n        let rgb;\n        if (opts && Array.isArray(opts.colorRampColors) && opts.colorRampColors.length >= 2) {\n          const c1 = new THREE.Color(opts.colorRampColors[0]);\n          const c2 = new THREE.Color(opts.colorRampColors[1]);\n          const c = c1.clone().lerp(c2, t);\n          rgb = c.toArray().map(v => v * 255);\n        } else {\n          // fallback to old HSL path\n          const hue = THREE.MathUtils.lerp(...hueRange, t);\n          color.setHSL(hue, 1, THREE.MathUtils.lerp(0.4, 1.0, t));\n          rgb = color.toArray().map(v => v * 255);\n        }\n\n        const numVerts = geometry.getAttribute(\"position\").count;\n        const colors = new Uint8Array(3 * numVerts);\n        for (let i = 0; i < colors.length; i += 3) {\n          colors[i] = rgb[0]; colors[i + 1] = rgb[1]; colors[i + 2] = rgb[2];\n        }\n        geometry.setAttribute(\"color\", new THREE.BufferAttribute(colors, 3, true));\n\n        geometries.push(geometry);\n      }\n    }\n\n    lonHelper.parent.remove(lonHelper);\n    return geometries.length\n      ? BufferGeometryUtils.mergeBufferGeometries(geometries, false)\n      : new THREE.BufferGeometry();\n  }\n\n  /* ---------- Layers ---------- */\n  async function loadAll() {\n    const rasters = [\n      // Tree cover: light → green\n      { key: \"tree\", name: \"Tree Cover in 2000\", hueRange: [0, 0], url: TREECOVER_DATA_URL, opts: { colorRampColors: [\"#F7FBEA\", \"#CBEAA6\"] } },\n      // GDP: light → deep purple\n      { key: \"gdpasc\", name: \"GDP 2000 (ASC)\", hueRange: [0, 0], url: GDP_ASC_URL, opts: { colorRampColors: [\"#D9BFD6\", \"#3A0D3E\"] } }\n    ];\n    await Promise.all(rasters.map(async r => { r.file = parseData(await loadFile(r.url)); }));\n\n    const rasterMeshes = new Map();\n    for (const r of rasters) {\n      const geom = makeBoxes(r.file, r.hueRange, 150_000, r.opts);\n      const mesh = new THREE.Mesh(geom, new THREE.MeshBasicMaterial({ vertexColors: true }));\n      mesh.rotation.y = Math.PI * -0.5;\n      mesh.visible = (r.key === \"tree\");\n      scene.add(mesh);\n      rasterMeshes.set(r.key, mesh);\n    }\n\n    const uiElem = document.querySelector(\"#list\");\n    const layers = [\n      { kind: \"asc\", key: \"tree\", name: \"Tree Cover in 2000\" },\n      { kind: \"asc\", key: \"gdpasc\", name: \"GDP 2000 (ASC)\" }\n    ];\n\n    async function selectLayer(layer) {\n      rasterMeshes.forEach(m => (m.visible = false));\n      const m = rasterMeshes.get(layer.key);\n      if (m) m.visible = true;\n\n      [...uiElem.children].forEach(li => li.classList.remove(\"active\"));\n      const li = [...uiElem.children].find(el => el.textContent === layer.name);\n      if (li) li.classList.add(\"active\");\n      requestRenderIfNotRequested();\n    }\n\n    layers.forEach((layer, i) => {\n      const li = document.createElement(\"li\");\n      li.textContent = layer.name;\n      li.classList.add(\"year\");\n      if (i === 0) li.classList.add(\"active\");\n      uiElem.appendChild(li);\n      li.addEventListener(\"click\", () => selectLayer(layer));\n    });\n\n    return () => { };\n  }\n\n  /* ---------- Navigation + interactions ---------- */\n  function goToCountryDetails(countryCode) {\n    const routes = {\n      BRA: \"../countries/brazil.html\",\n      POL: \"../countries/poland.html\",\n      KOR: \"../countries/south-korea.html\",\n    };\n    window.location.href = routes[countryCode] || \"/\";\n  }\n\n  let lastHoverLabel = null;\n  function onPointerMove(event) {\n    setMouseFromEvent(mouse, event, renderer.domElement);\n    raycaster.setFromCamera(mouse, camera);\n\n    const hit = raycaster.intersectObjects(labelGroup.children, true)[0];\n    const hovered = hit ? hit.object : null;\n\n    if (hovered !== lastHoverLabel) {\n      if (lastHoverLabel && lastHoverLabel.userData.updateHover) {\n        lastHoverLabel.userData.updateHover(false);\n      }\n      if (hovered && hovered.userData.updateHover) {\n        hovered.userData.updateHover(true);\n      }\n      lastHoverLabel = hovered;\n      renderer.domElement.style.cursor = hovered ? \"pointer\" : \"auto\";\n      requestRenderIfNotRequested();\n    }\n  }\n\n  function onCountryClick(event) {\n    setMouseFromEvent(mouse, event, renderer.domElement);\n    raycaster.setFromCamera(mouse, camera);\n\n    // Try label hit first\n    const labelHit = raycaster.intersectObjects(labelGroup.children, true)[0];\n    if (labelHit && labelHit.object.userData.countryCode) {\n      goToCountryDetails(labelHit.object.userData.countryCode);\n      requestRenderIfNotRequested();\n      return;\n    }\n\n    // (No globe/polygon click action needed)\n  }\n\n  function dispatchUI(e) {\n    switch (e.type) {\n      case \"pointermove\": onPointerMove(e); break;\n      case \"click\": onCountryClick(e); break;\n      case \"resize\":\n      case \"change\": requestRenderIfNotRequested(); break;\n    }\n  }\n\n  /* ---------- Load everything ---------- */\n  async function loadGlobalBoundariesAndCountries() {\n    await loadGlobalBoundaries();\n    await loadCountries();\n  }\n\n  let updateMorphTargets = () => { };\n  Promise.all([loadGlobalBoundariesAndCountries(), loadAll()]).then(() => {\n    requestRenderIfNotRequested();\n  });\n\n  /* ---------- Render loop ---------- */\n  function resizeRendererToDisplaySize(renderer) {\n    const canvas = renderer.domElement;\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n    const needResize = canvas.width !== width || canvas.height !== height;\n    if (needResize) renderer.setSize(width, height, false);\n    return needResize;\n  }\n\n  let renderRequested = false;\n  function render() {\n    renderRequested = undefined;\n    if (resizeRendererToDisplaySize(renderer)) {\n      const canvas = renderer.domElement;\n      camera.aspect = canvas.clientWidth / canvas.clientHeight;\n      camera.updateProjectionMatrix();\n    }\n    if (tweenManager.update()) requestRenderIfNotRequested();\n    controls.update();\n    renderer.render(scene, camera);\n  }\n  render();\n\n  // listeners\n  canvas.addEventListener(\"pointermove\", dispatchUI, false);\n  canvas.addEventListener(\"click\", dispatchUI, false);\n  window.addEventListener(\"resize\", dispatchUI, false);\n  controls.addEventListener(\"change\", dispatchUI);\n\n  function requestRenderIfNotRequested() {\n    if (!renderRequested) { renderRequested = true; requestAnimationFrame(render); }\n  }\n  function setMouseFromEvent(mouse, event, canvas) {\n    const rect = canvas.getBoundingClientRect();\n    const x = (event.clientX - rect.left) / rect.width;\n    const y = (event.clientY - rect.top) / rect.height;\n    mouse.x = x * 2 - 1;\n    mouse.y = -y * 2 + 1;\n  }\n}\n\nmain();"]}